generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model AcaoTarefa {
  idAcaoTarefa   BigInt   @id(map: "pk3c8ea93461f9de715f521c7604f")
  finalEnt       Int      @default(10033, map: "DF__AcaoTaref__final__321755AF")
  guidAcaoTarefa String   @unique(map: "AcaoTarefa_UKG") @default(dbgenerated("newid()"), map: "DF__AcaoTaref__guidA__330B79E8") @db.UniqueIdentifier
  dsblAcaoTarefa Boolean?
  dplyAcaoTarefa Int?     @db.TinyInt
  Descricao      String?  @db.NVarChar(50)
  Processo       String?  @db.NVarChar(100)
  Atividade      String?  @db.NVarChar(100)
  Codigo         Int?
}

model ADHOCENTITYINSTANCE {
  instanceGuid String  @id(map: "ADHOCENTITYINSTANCE_PK") @db.UniqueIdentifier
  entityGuid   String  @db.UniqueIdentifier
  data         Bytes?
  disabled     Boolean @default(false, map: "DF_ADHOCENTITYINSTANCE_disabled")
}

model ADHOCFILECONTENT {
  fileGuid    String  @id(map: "ADHOCFILECONTENT_PK") @db.UniqueIdentifier
  fileContent Bytes?  @db.Image
  persisted   Boolean @default(false, map: "DF_ADHOCFILECONTENT_persisted")
  deleted     Boolean @default(false, map: "DF_ADHOCFILECONTENT_deleted")
}

model AEEAcaoTarefa {
  idAEEAcaoTarefa   BigInt   @id(map: "pka1c8ec94d81ab1e1fd0dc4bdd85")
  finalEnt          Int      @default(10061, map: "DF__AEEAcaoTa__final__6FB560CC")
  guidAEEAcaoTarefa String   @unique(map: "AEEAcaoTarefa_UKG") @default(dbgenerated("newid()"), map: "DF__AEEAcaoTa__guidA__70A98505") @db.UniqueIdentifier
  dsblAEEAcaoTarefa Boolean?
  dplyAEEAcaoTarefa Int?     @db.TinyInt
  Codigo            Int?     @unique(map: "AEEAcaoTarefa_EK1")
  Descricao         String?  @db.NVarChar(50)
}

model AEEAnalisarEmpEdital {
  idAEEAnalisarEmpEdital BigInt  @id(map: "pk301c0df4c38aa73616eb36047bc")
  finalEnt               Int     @default(10060, map: "DF__AEEAnalis__final__625B65AE")
  baCreatedTime          BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_AEEAnalisarEmpEdital_baCreatedTime")
  baGuid                 String  @default(dbgenerated("newid()"), map: "DF_AEEAnalisarEmpEdital_baGuid") @db.UniqueIdentifier
  DadosPadrao            BigInt?
  Edital                 BigInt?
}

model ALARM {
  idAlarm            Int              @id(map: "ALARM_PK") @default(autoincrement())
  idAlarmSendMode    Int?             @db.TinyInt
  idTask             Int?
  idWorkflow         Int?
  idAlarmRecurMode   Int?             @db.TinyInt
  idLapseMode        Int?             @db.TinyInt
  alarmTime          Int
  recurrTime         Int
  sendToCurrAssignee Boolean          @default(false, map: "ALARM_DF2")
  idRecurrSchType    Int              @default(1, map: "ALARM_DF1")
  guidRule           String?          @db.UniqueIdentifier
  ALARMLAPSEMODE     ALARMLAPSEMODE?  @relation(fields: [idLapseMode], references: [idLapseMode], onDelete: NoAction, onUpdate: NoAction, map: "ALARM_ALARMLAPSEMODE_FK1")
  ALARMRECURMODE     ALARMRECURMODE?  @relation(fields: [idAlarmRecurMode], references: [idAlarmRecurMode], onDelete: NoAction, onUpdate: NoAction, map: "ALARM_ALARMRECURMODE_FK1")
  ALARMSENDMODE      ALARMSENDMODE?   @relation(fields: [idAlarmSendMode], references: [idAlarmSendMode], onDelete: NoAction, onUpdate: NoAction, map: "ALARM_ALARMSENDMODE_FK1")
  SCHTYPE            SCHTYPE          @relation(fields: [idRecurrSchType], references: [idSchType], onUpdate: NoAction, map: "ALARM_SCHTYPE_FK1")
  TASK               TASK?            @relation(fields: [idTask], references: [idTask], onDelete: NoAction, onUpdate: NoAction, map: "ALARM_TASK_FK1")
  WORKFLOW           WORKFLOW?        @relation(fields: [idWorkflow], references: [idWorkflow], onDelete: NoAction, onUpdate: NoAction, map: "ALARM_WORKFLOW_FK1")
  ALARMRECIPIENT     ALARMRECIPIENT[]

  @@index([idLapseMode], map: "ALARM_FK_IDX_1")
  @@index([idAlarmRecurMode], map: "ALARM_FK_IDX_2")
  @@index([idAlarmSendMode], map: "ALARM_FK_IDX_3")
  @@index([idRecurrSchType], map: "ALARM_FK_IDX_5")
  @@index([idWorkflow, idTask], map: "IX_ALARM")
}

model ALARMJOBLOG {
  idAlarmJobLog Int      @id(map: "ALARMJOBLOG_PK") @default(autoincrement())
  idJob         Int
  idAlarm       Int
  registerDate  DateTime @db.DateTime
  idWorkflow    Int?
  idTask        Int?
  idCase        Int?
  idWorkItem    BigInt?
  idJobLog      Int?
  JOBLOG        JOBLOG?  @relation(fields: [idJobLog], references: [idJobLog], onDelete: NoAction, onUpdate: NoAction, map: "ALARMJOBLOG_JOBLOG_FK1")

  @@index([idJobLog], map: "ALARMJOBLOG_IX1")
}

model ALARMJOBRECIPIENTLOG {
  idAlarmJobRecipientLog Int @id(map: "ALARMJOBRECIPIENTLOG_PK") @default(autoincrement())
  idAlarmJobLog          Int
  idUser                 Int
}

model ALARMLAPSEMODE {
  idLapseMode Int     @id(map: "ALARMLAPSEMODE_PK") @db.TinyInt
  lmName      String  @db.NVarChar(26)
  ALARM       ALARM[]
}

model ALARMRECIPIENT {
  idAlarmRecipient Int          @id(map: "ALARMRECIPIENT_PK") @default(autoincrement())
  idAlarm          Int?
  idRole           Int?
  idSkill          Int?
  idPosition       Int?
  idArea           Int?
  idLocation       Int?
  include          Boolean      @default(true, map: "ALARMRECIPIENT_DF1")
  guidRule         String?      @db.UniqueIdentifier
  ALARM            ALARM?       @relation(fields: [idAlarm], references: [idAlarm], onDelete: NoAction, onUpdate: NoAction, map: "ALARMRECIPIENT_ALARM_FK1")
  AREA             AREA?        @relation(fields: [idArea], references: [idArea], onDelete: NoAction, onUpdate: NoAction, map: "ALARMRECIPIENT_AREA_FK1")
  LOCATION         LOCATION?    @relation(fields: [idLocation], references: [idLocation], onDelete: NoAction, onUpdate: NoAction, map: "ALARMRECIPIENT_LOCATION_FK1")
  ORGPOSITION      ORGPOSITION? @relation(fields: [idPosition], references: [idPosition], onDelete: NoAction, onUpdate: NoAction, map: "ALARMRECIPIENT_POSITION_FK1")
  ROLE             ROLE?        @relation(fields: [idRole], references: [idRole], onDelete: NoAction, onUpdate: NoAction, map: "ALARMRECIPIENT_ROLE_FK1")
  SKILL            SKILL?       @relation(fields: [idSkill], references: [idSkill], onDelete: NoAction, onUpdate: NoAction, map: "ALARMRECIPIENT_SKILL_FK1")

  @@index([idAlarm], map: "ALARMRECIPIENT_FK_IDX_1")
  @@index([idArea], map: "ALARMRECIPIENT_FK_IDX_2")
  @@index([idLocation], map: "ALARMRECIPIENT_FK_IDX_4")
  @@index([idPosition], map: "ALARMRECIPIENT_FK_IDX_5")
  @@index([idRole], map: "ALARMRECIPIENT_FK_IDX_6")
  @@index([idSkill], map: "ALARMRECIPIENT_FK_IDX_7")
}

model ALARMRECURMODE {
  idAlarmRecurMode Int     @id(map: "ALARMRECURMODE_PK") @db.TinyInt
  armName          String  @db.NVarChar(26)
  ALARM            ALARM[]
}

model ALARMSENDMODE {
  idAlarmSendMode Int     @id(map: "ALARMSENDMODE_PK") @db.TinyInt
  asmName         String  @db.NVarChar(26)
  ALARM           ALARM[]
}

model ALLOCPRINCIPLE {
  idAllocPrinciple Int           @id(map: "ALLOCPRINCIPLE_PK")
  aprinName        String        @db.NVarChar(26)
  APPLICATION      APPLICATION[]
  WFCLASS          WFCLASS[]
}

model Anexo {
  idAnexo       BigInt    @id(map: "pk9b030d0412f8b671a2ba153b54d")
  finalEnt      Int       @default(10012, map: "DF__Anexo__finalEnt__4DF47A4E")
  baCreatedTime BigInt    @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_Anexo_baCreatedTime")
  baGuid        String    @default(dbgenerated("newid()"), map: "DF_Anexo_baGuid") @db.UniqueIdentifier
  DadosPadrao   BigInt?
  DataCriacao   DateTime? @db.DateTime
  Descricao     String?   @db.NVarChar(200)
  Responsavel   String?   @db.NVarChar(100)
  Arquivo       Int?      @db.TinyInt

  @@index([DadosPadrao], map: "Anexo_F1")
}

model APPLICATION {
  idApplication        Int                    @id(map: "APPLICATION_PK") @default(autoincrement())
  appName              String                 @db.NVarChar(26)
  appDisplayName       String?                @db.NVarChar(40)
  appCreationDate      DateTime               @default(now(), map: "APPLICATION_DF1") @db.DateTime
  idOrg                Int                    @default(1, map: "APPLICATION_DF2")
  idAllocPrinciple     Int
  guidApplication      String                 @unique(map: "APPLICATION_UKG") @default(dbgenerated("newid()"), map: "APPLICATION_DFG") @db.UniqueIdentifier
  appDescription       String?                @db.NVarChar(100)
  appIcon              Bytes?                 @db.Image
  dplyApplication      Int                    @default(0, map: "APPLICATION_DFY") @db.TinyInt
  idEntityPV           Int
  guidCustomizedResult String?                @db.UniqueIdentifier
  deleted              Boolean                @default(false, map: "DF__APPLICATI__delet__5A6F5FCC")
  ALLOCPRINCIPLE       ALLOCPRINCIPLE         @relation(fields: [idAllocPrinciple], references: [idAllocPrinciple], onUpdate: NoAction, map: "APPLICATION_ALLOCPRINCIPLE_FK1")
  ENTITY               ENTITY                 @relation(fields: [idEntityPV], references: [idEnt], onUpdate: NoAction, map: "APPLICATION_ENTITY_FK1")
  ORG                  ORG                    @relation(fields: [idOrg], references: [idOrg], onUpdate: NoAction, map: "APPLICATION_ORG_FK1")
  BAWPQUERY            BAWPQUERY[]
  BAWPQUERYPROCESSDATA BAWPQUERYPROCESSDATA[]
  CATEGORY             CATEGORY[]

  @@index([idAllocPrinciple], map: "APPLICATION_FK_IDX_1")
  @@index([idEntityPV], map: "APPLICATION_FK_IDX_3")
  @@index([idOrg], map: "APPLICATION_FK_IDX_4")
}

model ARCHIVINGLOG {
  idArchivingLog String   @id(map: "ARCHIVINGLOG_PK") @default(dbgenerated("newid()"), map: "ARCHIVINGLOG_DFD2") @db.UniqueIdentifier
  idPackage      String   @db.UniqueIdentifier
  idCase         String?  @db.UniqueIdentifier
  isSuccess      Boolean
  logData        DateTime @default(now(), map: "ARCHIVINGLOG_DFD") @db.DateTime
  logMessage     String?  @db.Text

  @@index([idPackage, idCase], map: "ARCHIVINGLOG_IDX1")
}

model AREA {
  idArea          Int              @id(map: "AREA_PK") @default(autoincrement())
  areaName        String           @unique(map: "AREA_UK1") @db.NVarChar(26)
  guidArea        String           @unique(map: "AREA_UKG") @default(dbgenerated("newid()"), map: "AREA_DFG") @db.UniqueIdentifier
  areaDisplayName String?          @unique(map: "AREA_UK2") @db.NVarChar(40)
  areaDescription String?          @db.NVarChar(100)
  costArea        Decimal?         @db.Decimal(11, 2)
  dplyArea        Int              @default(0, map: "AREA_DFY") @db.TinyInt
  finalEnt        Int              @default(3, map: "AREADEF")
  ALARMRECIPIENT  ALARMRECIPIENT[]
  WFUSER          WFUSER[]
}

model ASSIGNATIONLOG {
  idAssigLog           BigInt   @id(map: "ASSIGNATIONLOG_PK") @default(autoincrement())
  idWorkflow           Int
  idCase               Int
  idTask               Int
  idWorkItem           BigInt
  idUser               Int
  alEntryDate          DateTime @default(now(), map: "ASSIGNATIONLOG_DF1") @db.DateTime
  idAssignationLogType Int?     @db.TinyInt

  @@index([idCase], map: "ASSIGNATIONLOG_IX2")
  @@index([idWorkItem], map: "ASSIGNATIONLOG_IX3")
  @@index([idTask, idUser, idCase], map: "IX_ALIDTASKIDUSERIDCASE")
}

model ASYNCECMJOB {
  idAsyncECMJob      BigInt       @id(map: "ASYNCECMJOB_PK")
  runningState       Int
  pending            Boolean      @default(true, map: "ASYNCECMJOB_DF3")
  currentRetries     Int          @default(0, map: "ASYNCECMJOB_DF2")
  creationDate       DateTime     @default(now(), map: "ASYNCECMJOB_DF1") @db.DateTime
  lastProcessingDate DateTime?    @db.DateTime
  parentEntityName   String       @db.NVarChar(50)
  parentEntityId     BigInt
  fileName           String?      @db.NVarChar(100)
  contentMetadata    Bytes?       @db.Image
  failureMessage     String?      @db.NVarChar(4000)
  idFileUpload       BigInt       @unique(map: "ASYNCECMJOB_UK1")
  backgroundJobId    String?      @db.VarChar(100)
  BAFILEUPLOAD       BAFILEUPLOAD @relation(fields: [idFileUpload], references: [idFileUpload], onUpdate: NoAction, map: "ASYNCECMJOB_BAFILEUPLOAD_FK1")
}

model ASYNCHWIRETRY {
  idAsynchWIRetry  BigInt         @id(map: "ASYNCHWIRETRY_PK")
  idAsynchWorkitem BigInt
  awrMessage       String         @db.NVarChar(4000)
  awrRetryDate     DateTime       @default(now(), map: "ASYNCHWIRETRY_DF1") @db.DateTime
  ASYNCHWORKITEM   ASYNCHWORKITEM @relation(fields: [idAsynchWorkitem], references: [idAsynchWorkitem], onUpdate: NoAction, map: "ASYNCHWIRETRY_ASYNCHWORKIT_FK1")

  @@index([idAsynchWorkitem], map: "ASYNCHWIRETRY_FK_IDX_1")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ASYNCHWIRETRYLOG {
  idAsynchWIRetryLog Int       @default(autoincrement())
  idWorkitem         Int?
  idAsynchWorkitem   Int?
  awCurrentRetries   Int?
  idAsynchWIRetry    Int?
  awSchedulerId      Int?
  awEnqueuedDate     DateTime? @db.DateTime
  awProcessingDate   DateTime? @db.DateTime
  awrMessage         String?   @db.NVarChar(4000)
  awrRetryDate       DateTime? @db.DateTime

  @@ignore
}

model ASYNCHWORKITEM {
  idAsynchWorkitem      BigInt                 @id(map: "ASYNCHWORKITEM_PK")
  idWorkitem            BigInt?
  awCurrentRetries      Int                    @default(0, map: "ASYNCHWORKITEM_DF1")
  awEnabled             Boolean                @default(true, map: "ASYNCHWORKITEM_DF2")
  awCreationDate        DateTime               @default(now(), map: "ASYNCHWORKITEM_DF3") @db.DateTime
  awLastProcessDate     DateTime?              @db.DateTime
  awState               Int                    @db.SmallInt
  awProcessing          Boolean                @default(false, map: "ASYNCHWORKITEM_DF4")
  idCase                Int?
  idTask                Int?
  idWorkItemScope       BigInt?
  bAsynchSubProcess     Boolean                @default(false, map: "ASYNCHWORKITEM_DF5")
  awSubProcessContext   Bytes?                 @db.Image
  idWfClass             Int?
  awCaseCreationContext Bytes?                 @db.Image
  idWorkflow            Int?
  awNextProcessDate     DateTime?              @db.DateTime
  awEnqueuedDate        DateTime?              @db.DateTime
  awProcessingDate      DateTime?              @db.DateTime
  awSchedulerId         String?                @db.VarChar(50)
  awPriority            Int?                   @db.TinyInt
  backgroundJobId       String?                @db.VarChar(100)
  ASYNCHWIRETRY         ASYNCHWIRETRY[]
  TASK                  TASK?                  @relation(fields: [idTask], references: [idTask], onDelete: NoAction, onUpdate: NoAction, map: "ASYNCHWORKITEM_TASK_FK1")
  ASYNCHWORKITEMRUNNING ASYNCHWORKITEMRUNNING?

  @@index([awEnabled, awState], map: "ASYNCHWORKITEM_IX1")
  @@index([idWorkitem], map: "ASYNCHWORKITEM_IX3")
  @@index([idCase], map: "ASYNCHWORKITEM_IX4")
  @@index([awPriority(sort: Desc), idAsynchWorkitem], map: "ASYNCHWORKITEM_IX5")
  @@index([awEnabled, awState, awProcessing, awNextProcessDate], map: "ASYNCHWORKITEM_IX6")
}

model ASYNCHWORKITEMRUNNING {
  idAsynchWorkitemRunning BigInt         @id(map: "ASYNCHWORKITEMRUNNING_PK") @default(autoincrement())
  idAsynchWorkitem        BigInt         @unique(map: "ASYNCHWORKITEMRUNNING_UK1")
  awCreationDate          DateTime       @db.DateTime
  runningState            Int            @default(0, map: "ASYNCHWORKITEMRUNNING_DF2") @db.TinyInt
  awStartRunTime          DateTime?      @default(now(), map: "ASYNCHWORKITEMRUNNING_DF1") @db.DateTime
  ASYNCHWORKITEM          ASYNCHWORKITEM @relation(fields: [idAsynchWorkitem], references: [idAsynchWorkitem], onUpdate: NoAction, map: "ASYNCHWIRUNNING_ASYNCHWI_FK1")

  @@index([idAsynchWorkitem], map: "ASYNCHWORKITEMRUNNING_IX1")
}

model ASYNCSTATE {
  ID         Int    @id(map: "ASYNCSTATE_PK")
  State      Int
  idWorkitem BigInt
  idCase     Int

  @@index([idWorkitem], map: "IX_ASYNCSTATE_IDWORKITEM")
}

model ATTRIB {
  idAttrib                              Int                       @id(map: "ATTRIB_PK") @default(autoincrement())
  attribName                            String                    @db.VarChar(26)
  attribDisplayName                     String                    @db.NVarChar(40)
  attribDescription                     String?                   @db.NVarChar(100)
  attribHelpText                        String?                   @db.NVarChar(100)
  attribType                            Int
  attribSrc                             String                    @db.VarChar(26)
  idEnt                                 Int
  idEntRelated                          Int?
  guidAttrib                            String                    @unique(map: "ATTRIB_UKG") @default(dbgenerated("newid()"), map: "ATTRIB_DFG") @db.UniqueIdentifier
  attribExtSrc                          String?                   @db.NVarChar(128)
  attribExclExtSrc                      Int                       @default(0, map: "ATTRIB_DF1")
  attribAutoExtSrc                      Int                       @default(0, map: "ATTRIB_DF2")
  dplyAttrib                            Int                       @default(0, map: "ATTRIB_DFY") @db.TinyInt
  attribDisplayOrder                    Int?
  attribAttributeType                   Int                       @default(0, map: "ATTRIB_DF3")
  attribSize                            Int                       @default(0, map: "ATTRIB_DF4")
  hasDefaultValue                       Boolean?
  defaultValue                          String?                   @db.Text
  dataType                              String?                   @db.NVarChar(106)
  numericPrecision                      Int?
  numericScale                          Int?
  idContentType                         String?                   @db.UniqueIdentifier
  automapped                            Boolean                   @default(true, map: "DF__ATTRIB__automapp__619B8048")
  deleted                               Boolean                   @default(false, map: "DF__ATTRIB__deleted__628FA481")
  ENTITY_ATTRIB_idEntToENTITY           ENTITY                    @relation("ATTRIB_idEntToENTITY", fields: [idEnt], references: [idEnt], onUpdate: NoAction, map: "ATTRIB_ENTITY_FK1")
  ENTITY_ATTRIB_idEntRelatedToENTITY    ENTITY?                   @relation("ATTRIB_idEntRelatedToENTITY", fields: [idEntRelated], references: [idEnt], onDelete: NoAction, onUpdate: NoAction, map: "ATTRIB_ENTITY_FK2")
  BAFILEUPLOAD                          BAFILEUPLOAD[]
  BAMULTIINSTANCEPROPERTY               BAMULTIINSTANCEPROPERTY[]
  BAWFCLASS_ENTITY                      BAWFCLASS_ENTITY[]
  ENTITYBIZKEY                          ENTITYBIZKEY[]
  ENTITYKEY                             ENTITYKEY[]
  RENDER_RENDER_idAttribToATTRIB        RENDER[]                  @relation("RENDER_idAttribToATTRIB")
  RENDER_RENDER_idDisplayAttribToATTRIB RENDER[]                  @relation("RENDER_idDisplayAttribToATTRIB")
  RENDER_RENDER_idOrderByAttribToATTRIB RENDER[]                  @relation("RENDER_idOrderByAttribToATTRIB")
  TASK                                  TASK[]

  @@index([attribName], map: "ATTRIB_IX1")
  @@index([attribSrc], map: "ATTRIB_IX2")
  @@index([idEnt], map: "ATTRIB_IX3")
  @@index([idEntRelated], map: "ATTRIB_IX4")
}

model ATTRIBCHARLOG {
  idAttribCharLog BigInt    @id(map: "ATTRIBCHARLOG_PK") @default(autoincrement())
  idEntityLog     BigInt
  idAttrib        Int
  aclNewValue     String?   @db.NVarChar(500)
  ENTITYLOG       ENTITYLOG @relation(fields: [idEntityLog], references: [idEntityLog], onUpdate: NoAction, map: "ATTRIBCHARLOG_ENTITYLOG_FK1")

  @@index([idEntityLog], map: "ATTRIBCHARLOG_F1")
}

model ATTRIBLOG {
  idAttribLog BigInt    @id(map: "ATTRIBLOG_PK") @default(autoincrement())
  idEntityLog BigInt
  idAttrib    Int
  alNewValue  String?   @db.NVarChar(32)
  ENTITYLOG   ENTITYLOG @relation(fields: [idEntityLog], references: [idEntityLog], onUpdate: NoAction, map: "ATTRIBLOG_ENTITYLOG_FK1")

  @@index([idEntityLog], map: "ATTRIBLOG_IX1")
}

model AUTHEVENTSUBTYPE {
  idAuthEventSubType   Int       @id(map: "AUTHEVENTSUBTYPE_PK")
  AuthEventSubTypeName String    @db.NVarChar(50)
  AUTHLOG              AUTHLOG[]
}

model AUTHEVENTTYPE {
  idAuthEventType   Int       @id(map: "AUTHEVENTTYPE_PK")
  AuthEventTypeName String    @db.NVarChar(25)
  AUTHLOG           AUTHLOG[]
}

model AUTHLOG {
  idAuthLog           BigInt            @id(map: "AUTHLOG_PK") @default(autoincrement())
  idUser              Int?
  domain              String?           @db.NVarChar(50)
  userName            String?           @db.VarChar(100)
  idAuthEventType     Int
  idAuthEventSubType  Int?
  ipAddress           String?           @db.NVarChar(30)
  awSubProcessContext Bytes?            @db.Image
  alEntryDate         DateTime?         @default(now(), map: "AUTHLOG_DF1") @db.DateTime
  AUTHEVENTSUBTYPE    AUTHEVENTSUBTYPE? @relation(fields: [idAuthEventSubType], references: [idAuthEventSubType], onDelete: NoAction, onUpdate: NoAction, map: "AUTHLOG_AUTHEVENTSUBTYPE_FK1")
  AUTHEVENTTYPE       AUTHEVENTTYPE     @relation(fields: [idAuthEventType], references: [idAuthEventType], onUpdate: NoAction, map: "AUTHLOG_AUTHEVENTTYPE_FK1")
}

model BAACTIVITY {
  name                String?   @db.NVarChar(100)
  description         String?
  guidActivity        String    @id(clustered: false, map: "BAACTIVITY_PK") @db.UniqueIdentifier
  allowEdition        Boolean
  guidPlan            String    @db.UniqueIdentifier
  idUser              Int
  duration            Int?
  progress            Int?
  startDate           DateTime? @db.DateTime
  finishDate          DateTime? @db.DateTime
  items               String?   @db.NText
  estimatedFinishDate DateTime? @db.DateTime
  sendNotification    Boolean   @default(false, map: "DF__BAACTIVIT__sendN__69B1A35C")

  @@index([guidPlan], map: "BAACTIVITY_IX1")
}

model BAASSERTIONSAMLREQUEST {
  idAssertionSamlRequest Int    @id(map: "BAASSERTIONSAMLREQUEST_PK") @default(autoincrement())
  samlRequestId          String @db.NVarChar(250)
  entityId               String @db.NVarChar(250)
  creationTime           BigInt
  expirationTime         BigInt

  @@index([entityId], map: "BAASSERTIONSAMLREQUEST_X1")
}

model BAASSERTIONSESSIONHANDLER {
  idAssertionSessionHandler Int     @id(map: "BAASSERTIONSESSIONHANDLER_PK") @default(autoincrement())
  httpSessionId             String  @db.NVarChar(250)
  sessionIndex              String? @db.NVarChar(250)
  idSamlRequest             String? @db.NVarChar(250)
  expirationTimeAssertion   BigInt
  logoutVerificationCode    String? @db.NVarChar(250)
  entityId                  String? @db.NVarChar(250)
  username                  String? @db.NVarChar(250)
  relayState                String? @db.NVarChar(250)
  assertionId               String? @db.NVarChar(250)
  creationTime              BigInt
  assertion                 Bytes?  @db.Image
  request                   Bytes?  @db.Image

  @@index([assertionId], map: "BAASSERTIONSESSIONHANDLER_X1")
  @@index([relayState], map: "BAASSERTIONSESSIONHANDLER_X2")
  @@index([httpSessionId], map: "BAASSERTIONSESSIONHANDLER_X3")
}

model BAASSIGNATIONLOGTYPE {
  idAssignationLogType Int    @id(map: "BAASSIGNATIONLOGTYPE_PK") @db.TinyInt
  assigLogType         String @db.NVarChar(26)
}

model BAAUDITLOG {
  idBAAuditLog Int       @id(map: "BAAUDITLOG_PK") @default(autoincrement())
  actionType   String?   @db.Char(1)
  tableName    String?   @db.NVarChar(30)
  pKField      String?   @db.NVarChar(30)
  pKValue      String?   @db.NVarChar(30)
  fieldName    String?   @db.NVarChar(30)
  updateDate   DateTime? @default(now(), map: "BAAUDITLOG_DF1") @db.DateTime
  oldValue     String?   @db.NVarChar(4000)
  newValue     String?   @db.NVarChar(4000)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BABIZAGICATALOG {
  guidObject         String?   @db.UniqueIdentifier
  guidObjectParent   String?   @db.UniqueIdentifier
  objName            String    @db.VarChar(256)
  objContent         Bytes?
  objType            Int
  objTypeName        String?   @db.VarChar(50)
  deployOnParent     Boolean
  modifiedDate       DateTime? @default(now(), map: "BABIZAGICATALOG_DF1") @db.DateTime
  modifiedByUser     String?   @db.VarChar(100)
  mtdVersion         Int?      @default(0, map: "BABIZAGICATALOG_DF5")
  rootObject         String?   @db.UniqueIdentifier
  changeSetId        Int?
  objContentResolved Bytes?
  deleted            Boolean   @default(false, map: "BABIZAGICATALOG_DF3")
  contentFormat      Int?      @default(0, map: "BABIZAGICATALOG_DF2") @db.TinyInt
  mtdState           Int       @default(0, map: "BABIZAGICATALOG_DF4")

  @@index([rootObject, guidObject], map: "BABIZAGICATALOG_CIDX", clustered: true)
  @@index([rootObject, changeSetId], map: "BABIZAGICATALOG_IDX2")
  @@index([guidObject], map: "BABIZAGICATALOG_IDX3")
  @@index([objType], map: "BABIZAGICATALOG_IDX4")
  @@index([guidObjectParent], map: "BABIZAGICATALOG_IDX5")
  @@index([deleted], map: "BABIZAGICATALOG_IDX6")
  @@index([objTypeName, rootObject, deleted], map: "BABIZAGICATALOG_IDX7")
  @@index([rootObject, deleted], map: "BABIZAGICATALOG_IDX8")
  @@ignore
}

model BABIZRULEAUDITLOG {
  idBABizRuleAuditLog Int       @id(map: "BABIZRULEAUDITLOG_PK") @default(autoincrement())
  actionType          String?   @db.Char(1)
  fieldName           String?   @db.NVarChar(30)
  oldValue            String?   @db.NText
  newValue            String?   @db.NText
  updateDate          DateTime? @default(now(), map: "BABIZRULEAUDITLOG_DF1") @db.DateTime
  Login               String?   @db.NVarChar(200)
  idRule              Int?
}

model BACACHESYNC {
  idBACacheSync Int      @id(map: "BACACHESYNC_PK") @default(autoincrement())
  cscommand     String   @db.NVarChar(10)
  csprefix      String?  @db.NVarChar(100)
  cskey         String?  @db.NVarChar(100)
  deleted       Boolean? @default(false, map: "BACACHESYNC_DF1")
  csMachineId   String?  @db.UniqueIdentifier
}

model BACASEACCESS {
  idCaseAccess Int
  idUser       Int
  WFUSER       WFUSER @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "BACASEACCESS_WFUSER_FK1")

  @@id([idCaseAccess, idUser], map: "BACASEACCESS_PK")
}

model BACASEACCESSOPEN {
  idCaseAccess Int
  idUser       Int
  WFUSER       WFUSER @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "BACASEACCESSOPEN_WFUSER_FK1")

  @@id([idCaseAccess, idUser], map: "BACASEACCESSOPEN_PK")
}

model BACASEACCESSTYPE {
  caType     Int        @id(map: "BACASEACCESSTYPE_PK")
  caTypeName String     @unique(map: "BACASEACCESSTYPE_UK1") @db.NVarChar(25)
  WORKFLOW   WORKFLOW[]
}

model BACASEATTACHMENT {
  idCaseAttach   String  @id(map: "BACASEATTACHMENT_PK") @db.UniqueIdentifier
  caseAttachFile Bytes?  @db.Image
  storage        Int
  caseAttachPath String? @db.NVarChar(100)
  caseAttachDate BigInt
  isDeleted      Boolean

  @@index([caseAttachDate], map: "BACASEATTACHMENT_IDX_1")
  @@index([isDeleted], map: "BACASEATTACHMENT_IDX_2")
}

model BACASERESOURCE {
  idCaseRes      String  @id(map: "BACASERESOURCE_PK") @db.UniqueIdentifier
  caseResType    Int
  caseResContent String  @db.NText
  caseResDate    BigInt
  globalParent   String? @db.NVarChar(40)
  idParent       String? @db.UniqueIdentifier
  isDeleted      Boolean

  @@index([caseResType], map: "BACASERESOURCE_IDX_1")
  @@index([caseResDate], map: "BACASERESOURCE_IDX_2")
  @@index([globalParent], map: "BACASERESOURCE_IDX_3")
  @@index([idParent], map: "BACASERESOURCE_IDX_4")
  @@index([isDeleted], map: "BACASERESOURCE_IDX_5")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BACASESEMAPHORE {
  idCase  Int
  csState Int @default(0, map: "BACASEMAPHORE_DF1")

  @@index([idCase], map: "BACASESEMAPHORE_IX1")
  @@ignore
}

model BACATALOGDEFINITIONS {
  hashValue        String   @unique(map: "UQ__BACATALO__91819E3CF8114A69") @db.VarChar(256)
  objectDefinition String   @db.NVarChar(Max)
  dataVersion      DateTime @db.DateTime
}

model BACATALOGI18NDEFINITION {
  objType Int
  type    String @db.NVarChar(36)
  name    String @db.NVarChar(250)

  @@id([objType, name], map: "BACATALOGI18NDEFINITION_PK")
}

model BACATALOGINDEXDEFINITION {
  indexName        String @db.VarChar(36)
  objectType       Int
  sourceObjectType Int

  @@id([indexName, objectType], map: "BACATALOGINDEXDEFINITION_PK")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BACATALOGINDEXEDOBJECTS {
  rootObject String? @db.UniqueIdentifier
  name       String  @db.VarChar(36)
  sourceGuid String  @db.UniqueIdentifier
  targetGuid String  @db.UniqueIdentifier
  deleted    Boolean @default(false, map: "DF_BACATALOGINDEXEDOBJECTS_DELETED")

  @@index([rootObject, targetGuid], map: "BACATALOGINDEXEDOBJECTS_CIDX", clustered: true)
  @@index([sourceGuid], map: "BACATALOGINDEXEDOBJECTS_IDX")
  @@index([targetGuid, sourceGuid], map: "BACATALOGINDEXEDOBJECTS_IDX2")
  @@index([targetGuid, deleted], map: "BACATALOGINDEXEDOBJECTS_IDX3")
  @@index([deleted], map: "BACATALOGINDEXEDOBJECTS_IDX4")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BACATALOGREFERENCE {
  rootObject       String? @db.UniqueIdentifier
  guidPointer      String? @db.UniqueIdentifier
  guidObjectRef    String? @db.UniqueIdentifier
  guidObjectTarget String  @db.UniqueIdentifier
  deleted          Boolean @default(false, map: "BACATALOGREFERENCE_DF1")

  @@index([guidObjectRef, guidPointer, guidObjectTarget], map: "BACATALOGREF_GUIDOBJREF_IDX")
  @@index([rootObject, guidObjectRef], map: "BACATALOGREFERENCE_CIDX", clustered: true)
  @@index([guidPointer, guidObjectRef], map: "BACATALOGREFERENCE_IDX")
  @@index([guidObjectTarget], map: "BACATALOGREFERENCE_IDX2")
  @@index([deleted], map: "BACATALOGREFERENCE_IDX3")
  @@ignore
}

model BACATALOGTAGDEFINITION {
  id       String @id(map: "BACATALOGTAGDEFINITION_PK") @db.UniqueIdentifier
  name     String @db.NVarChar(50)
  source   String @db.NVarChar(100)
  type     String @db.NVarChar(36)
  dataType String @db.NVarChar(36)
  objType  Int

  @@index([name, objType], map: "IX_BACATALOGTAGDEFINITION")
}

model BACOLLABDIAGRAM {
  idCollabDiagram    Int             @id(map: "BACOLLABDIAGRAM_PK") @default(autoincrement())
  guidCollabDiagram  String          @unique(map: "BACOLLABDIAGRAM_UKG") @default(dbgenerated("newid()"), map: "BACOLLABDIAGRAM_DFG") @db.UniqueIdentifier
  diagramName        String          @db.NVarChar(255)
  messageAttribs     Bytes           @db.Image
  idContainingFolder Int?
  dplyCollabDiagram  Int             @default(0, map: "BACOLLABDIAGRAM_DFY") @db.TinyInt
  BACOLLABFOLDER     BACOLLABFOLDER? @relation(fields: [idContainingFolder], references: [idCollabFolder], onDelete: NoAction, onUpdate: NoAction, map: "COLDIAGRAM_COLFOLDER_FK1")

  @@unique([idContainingFolder, diagramName], map: "BACOLLABDIAGRAM_UK1")
}

model BACOLLABFOLDER {
  idCollabFolder       Int               @id(map: "BACOLLABFOLDER_PK") @default(autoincrement())
  guidCollabFolder     String            @unique(map: "BACOLLABFOLDER_UKG") @default(dbgenerated("newid()"), map: "BACOLLABFOLDER_DFG") @db.UniqueIdentifier
  folderName           String            @db.NVarChar(255)
  idParentFolder       Int?
  dplyCollabFolder     Int               @default(0, map: "BACOLLABFOLDER_DFY") @db.TinyInt
  BACOLLABDIAGRAM      BACOLLABDIAGRAM[]
  BACOLLABFOLDER       BACOLLABFOLDER?   @relation("BACOLLABFOLDERToBACOLLABFOLDER", fields: [idParentFolder], references: [idCollabFolder], onDelete: NoAction, onUpdate: NoAction, map: "COLFOLDER_COLFOLDER_FK1")
  other_BACOLLABFOLDER BACOLLABFOLDER[]  @relation("BACOLLABFOLDERToBACOLLABFOLDER")

  @@unique([idParentFolder, folderName], map: "BACOLLABFOLDER_UK1")
}

model BACONFIGFILESCATALOG {
  objTypeName String @id(map: "BACONFIGFILESCATALOG_PK") @db.VarChar(256)
  fileHash    String @db.VarChar(256)
}

model BADATACATALOG {
  OwnerId        String @db.VarChar(50)
  SettingName    String @db.VarChar(50)
  SettingContent Bytes

  @@id([OwnerId, SettingName], map: "BADATACATALOG_PK")
}

model BADATATRIGGEREXECUTIONLOG {
  idJobLog           Int       @id(map: "BADATATRIGGEREXECUTIONLOG_PK")
  guidEntity         String    @db.UniqueIdentifier
  entitySurrogateKey Int
  guidDataTrigger    String    @db.UniqueIdentifier
  guidAction         String    @db.UniqueIdentifier
  executionDate      DateTime? @default(now(), map: "BADATATRIGGEREXECUTIONLOG_DF3") @db.DateTime
  executionResult    Boolean
  executionMessage   String    @db.NVarChar(500)
  eventType          Int       @db.SmallInt
}

model BADATATRIGGERJOB {
  idJob                   Int                      @id(map: "BADATATRIGGERJOB_PK")
  createdOn               DateTime                 @db.DateTime
  guidEntity              String                   @db.UniqueIdentifier
  entitySurrogateKey      Int
  guidDataTrigger         String?                  @db.UniqueIdentifier
  eventType               Int                      @db.SmallInt
  status                  Boolean
  triggerType             Int                      @default(1, map: "DF__BADATATRI__trigg__79E80B25") @db.SmallInt
  data                    String?                  @db.NText
  backgroundJobId         String?                  @db.VarChar(100)
  BADATATRIGGERJOBRUNNING BADATATRIGGERJOBRUNNING?

  @@index([status, triggerType], map: "BADATATRIGGERJOB_IX1")
}

model BADATATRIGGERJOBRUNNING {
  idJob             Int               @id(map: "BADATATRIGGERJOBRUNNING_PK")
  runningState      Int               @default(0, map: "DF__BADATATRI__runni__7ADC2F5E") @db.TinyInt
  startRunTime      DateTime?         @default(now(), map: "BADATATRIGGERJOBRUNNING_DF3") @db.DateTime
  endRunTime        DateTime?         @default(now(), map: "BADATATRIGGERJOBRUNNING_DF4") @db.DateTime
  retryingCount     Int
  BADATATRIGGERJOB  BADATATRIGGERJOB  @relation(fields: [idJob], references: [idJob], onUpdate: NoAction, map: "BADTRUNNING_BADTJOB_FK")
  SCHEDRUNNINGSTATE SCHEDRUNNINGSTATE @relation(fields: [runningState], references: [idSchedRunningState], onUpdate: NoAction, map: "BADTRUNNING_SCHRUNNING_FK")

  @@index([runningState, retryingCount], map: "BADATATRIGGERJOBRUNNING_IX1")
}

model BADELEGATE {
  idBaDelegate                             Int      @id(map: "BADELEGATE_PK") @default(autoincrement())
  guidBaDelegate                           String   @default(dbgenerated("newid()"), map: "DFG_GUIDBADELEGATE") @db.UniqueIdentifier
  idUser                                   Int
  idDelegateUser                           Int
  idWfClass                                Int
  enableSubDelegate                        Boolean? @default(false, map: "DF_BADELEGATE_ENABLESUBDELEGATE")
  startDate                                DateTime @default(now(), map: "DF_BADELEGATE_STARTDATE") @db.DateTime
  endDate                                  DateTime @db.DateTime
  WFCLASS                                  WFCLASS  @relation(fields: [idWfClass], references: [idWfClass], onUpdate: NoAction, map: "BADEL_WFCLASS_FK1")
  WFUSER_BADELEGATE_idUserToWFUSER         WFUSER   @relation("BADELEGATE_idUserToWFUSER", fields: [idUser], references: [idUser], onUpdate: NoAction, map: "BADELEGATE_WFUSER_FK1")
  WFUSER_BADELEGATE_idDelegateUserToWFUSER WFUSER   @relation("BADELEGATE_idDelegateUserToWFUSER", fields: [idDelegateUser], references: [idUser], onUpdate: NoAction, map: "BADELEGATE_WFUSER_FK2")

  @@index([idUser, idWfClass], map: "BADELEGATE_IX1")
}

model BADPLENVOPTION {
  idEnvOption Int      @id(map: "BADPLENVOPTION_PK")
  eoName      String   @db.VarChar(100)
  eoIntValue  Int
  eoStrValue  String   @db.NVarChar(4000)
  eoDateValue DateTime @db.DateTime
}

model BADPLYCONFIG {
  idBaDplyConfig   Int    @id(map: "BADPLYCONFIG_PK") @default(autoincrement())
  baDplyConfigFile Bytes  @db.Image
  guidBADplyConfig String @unique(map: "BADPLYCONFIG_UKG") @default(dbgenerated("newid()"), map: "BADPLYCONFIG_DFG") @db.UniqueIdentifier
  dplyBADplyConfig Int    @default(0, map: "BADPLYCONFIG_DFY") @db.TinyInt
  dcFileVersion    Int    @db.TinyInt
  dcMapType        Int    @db.TinyInt
}

model BADPLYDATABLOBS {
  idDplyDataBlob Int   @id(map: "BADPLYDATABLOBS_PK") @default(autoincrement())
  bContents      Bytes @db.Image
}

model BADPLYPACKAGE {
  idDeploymentPackage   Int                 @id(map: "BADPLYPACKAGE_PK") @default(autoincrement())
  guidDeploymentPackage String              @unique(map: "BADPLYPACKAGE_UKG") @default(dbgenerated("newid()"), map: "BADPLYPACKAGE_DFG") @db.UniqueIdentifier
  dpkName               String              @unique(map: "BADPLYPACKAGE_UK1") @db.VarChar(100)
  dpkCreationDate       DateTime            @unique(map: "BADPLYPACKAGE_UK2") @default(now(), map: "BADPLYPACKAGE_DF1") @db.DateTime
  dpkOptions            Bytes?              @db.Image
  dplyDeploymentPackage Int                 @default(0, map: "BADPLYPACKAGE_DFY") @db.TinyInt
  BADPLYPACKAGEDATA     BADPLYPACKAGEDATA[]
}

model BADPLYPACKAGEDATA {
  idDeploymentPackageData Int           @id(map: "BADPLYPACKAGEDATA_PK") @default(autoincrement())
  idDeploymentPackage     Int
  dpkContent              Bytes         @db.Image
  contentType             Int
  BADPLYPACKAGE           BADPLYPACKAGE @relation(fields: [idDeploymentPackage], references: [idDeploymentPackage], onUpdate: NoAction, map: "BADPLYPKGDTA_BADPLYPKG_FK1")

  @@index([idDeploymentPackage], map: "BADPLYPACKAGEDATA_FK_IDX_1")
}

model BADSCLOSEDCASEACTIVITIES {
  idWorkitem              BigInt
  guidWorkitem            String    @id(map: "BADSCLOSEDCASEACTIVITIES_PK") @db.UniqueIdentifier
  idEntryDate             BigInt?
  idEstimatedSolutionDate BigInt?
  idSolutionDate          BigInt?
  wiEntryDate             DateTime? @db.DateTime
  wiEstimatedSolutionDate DateTime? @db.DateTime
  wiSolutionDate          DateTime? @db.DateTime
  idWorkflow              Int?
  guidWorkflow            String?   @db.UniqueIdentifier
  idUser                  Int?
  guidUser                String?   @db.UniqueIdentifier
  idCase                  Int?
  guidCase                String?   @db.UniqueIdentifier
  idTask                  Int?
  guidTask                String?   @db.UniqueIdentifier
  idState                 Int?
  wiDuration              Int?
  durationHours           Int?
  durationDays            Int?

  @@index([idWorkitem], map: "BADSCLOSEDCASEACTIVITIES_IDX1")
  @@index([guidCase], map: "BADSCLOSEDCASEACTIVITIES_IDX10")
  @@index([idTask], map: "BADSCLOSEDCASEACTIVITIES_IDX11")
  @@index([guidTask], map: "BADSCLOSEDCASEACTIVITIES_IDX12")
  @@index([wiEntryDate], map: "BADSCLOSEDCASEACTIVITIES_IDX2")
  @@index([wiEstimatedSolutionDate], map: "BADSCLOSEDCASEACTIVITIES_IDX3")
  @@index([wiSolutionDate], map: "BADSCLOSEDCASEACTIVITIES_IDX4")
  @@index([idUser], map: "BADSCLOSEDCASEACTIVITIES_IDX5")
  @@index([guidUser], map: "BADSCLOSEDCASEACTIVITIES_IDX6")
  @@index([idWorkflow], map: "BADSCLOSEDCASEACTIVITIES_IDX7")
  @@index([guidWorkflow], map: "BADSCLOSEDCASEACTIVITIES_IDX8")
  @@index([idCase], map: "BADSCLOSEDCASEACTIVITIES_IDX9")
}

model BADSCLOSEDCASES {
  idCase                   Int
  guidCase                 String    @id(map: "BADSCLOSEDCASES_PK") @db.UniqueIdentifier
  idCreationDate           BigInt?
  idSolutionDate           BigInt?
  idEstimatedSolutionDate  BigInt?
  casCreationDate          DateTime? @db.DateTime
  casSolutionDate          DateTime? @db.DateTime
  casEstimatedSolutionDate DateTime? @db.DateTime
  idCreatorUser            Int?
  guidCreatorUser          String?   @db.UniqueIdentifier
  idWorkflow               Int?
  guidWorkflow             String?   @db.UniqueIdentifier
  idCaseState              Int?
  duration                 Int?
  durationHours            Int?
  durationDays             Int?
  radNumber                String?   @db.NVarChar(40)
  caseClosed               Int?      @db.TinyInt
  hasCaseNumber            Boolean?

  @@index([idCase], map: "BADSCLOSEDCASES_X1")
  @@index([casCreationDate], map: "BADSCLOSEDCASES_X2")
  @@index([casSolutionDate], map: "BADSCLOSEDCASES_X3")
  @@index([casEstimatedSolutionDate], map: "BADSCLOSEDCASES_X4")
  @@index([idCreatorUser], map: "BADSCLOSEDCASES_X5")
  @@index([guidCreatorUser], map: "BADSCLOSEDCASES_X6")
  @@index([idWorkflow], map: "BADSCLOSEDCASES_X7")
  @@index([guidWorkflow], map: "BADSCLOSEDCASES_X8")
  @@index([radNumber], map: "BADSCLOSEDCASES_X9")
}

model BADSDATE {
  id          BigInt
  guid        String   @id(map: "BADSDATE_PK") @default(dbgenerated("newid()"), map: "DF__BADSDATE__guid__43EBED27") @db.UniqueIdentifier
  fullDate    DateTime @db.DateTime
  day         Int
  week        Int
  monthNumber Int
  monthName   String   @db.NVarChar(30)
  quarter     Int
  third       Int
  semester    Int
  year        Int

  @@index([id], map: "BADSDATE_X1")
}

model BADSTRANSITIONHISTORY {
  idTransitionHistory   Int
  guidTransitionHistory String   @id(map: "BADSTRANSITIONHISTORY_PK") @default(dbgenerated("newid()"), map: "BADSTRANSITIONHISTORY_DFG") @db.UniqueIdentifier
  guidTransition        String   @db.UniqueIdentifier
  guidCase              String   @db.UniqueIdentifier
  guidUser              String   @db.UniqueIdentifier
  guidWorkitemFrom      String   @db.UniqueIdentifier
  guidWorkitemTo        String   @db.UniqueIdentifier
  entryDate             DateTime @db.DateTime
  idTransition          Int
  idTransitionType      Int?

  @@index([guidTransition], map: "BADSTRANSITIONHISTORY_X1")
  @@index([guidUser], map: "BADSTRANSITIONHISTORY_X2")
  @@index([entryDate], map: "BADSTRANSITIONHISTORY_X3")
  @@index([guidWorkitemFrom], map: "BADSTRANSITIONHISTORY_X4")
  @@index([guidWorkitemTo], map: "BADSTRANSITIONHISTORY_X5")
  @@index([idTransition], map: "BADSTRANSITIONHISTORY_X6")
}

model BADSUSERCOST {
  guidCost     String    @id(map: "BADSUSERCOST_PK") @default(dbgenerated("newid()"), map: "DF__BADSUSERC__guidC__532E30B7") @db.UniqueIdentifier
  fromDate     DateTime? @db.DateTime
  toDate       DateTime? @db.DateTime
  normalCost   Float?    @db.Money
  overtimeCost Float?    @db.Money
  idUser       Int?
  guidUser     String?   @db.UniqueIdentifier

  @@index([guidUser], map: "BADSUSERCOST_X1")
  @@index([idUser], map: "BADSUSERCOST_X2")
  @@index([fromDate], map: "BADSUSERCOST_X3")
  @@index([toDate], map: "BADSUSERCOST_X4")
}

model BADSWORKFLOW {
  idWorkflow          Int
  guidWorkflow        String    @id(map: "BADSWORKFLOW_PK") @db.UniqueIdentifier
  wfActive            Boolean?
  wfVersion           String?   @db.NVarChar(20)
  idCreationDate      BigInt?
  wfCreationDate      DateTime? @db.DateTime
  wfEstimatedDuration Int?
  idWfClass           Int
  guidWfClass         String    @db.UniqueIdentifier
  wfClsDisplayName    String?   @db.NVarChar(80)

  @@index([idWorkflow], map: "BADSWORKFLOW_X1")
  @@index([idWfClass], map: "BADSWORKFLOW_X2")
  @@index([guidWfClass], map: "BADSWORKFLOW_X3")
  @@index([wfActive], map: "BADSWORKFLOW_X4")
}

model BAECMMETADATA {
  idBAECMMetadata   Int     @id(map: "BAECMMETADATA_PK") @default(autoincrement())
  metadataName      String? @db.NVarChar(200)
  metadataId        String  @db.NVarChar(200)
  idRender          Int
  xpath             String?
  guidBAECMMetadata String  @unique(map: "BAECMMETADATA_UKG") @default(dbgenerated("newid()"), map: "BAECMMETADATA_DFG") @db.UniqueIdentifier
  dplyBAECMMetadata Int     @default(0, map: "BAECMMETADATA_DFY") @db.TinyInt
  RENDER            RENDER  @relation(fields: [idRender], references: [idRender], onUpdate: NoAction, map: "BAECMMETADATA_RENDER_FK1")

  @@unique([idRender, metadataId], map: "BAECMMETADATA_UK1")
}

model BAEMAILINTEGRATIONDATA {
  idEmail         Int      @id(map: "BAEMAILINTEGRATIONDATA_PK") @default(autoincrement())
  body            Bytes?   @db.Image
  subject         String?
  fromAddress     String?  @db.NVarChar(200)
  readDate        DateTime @default(now(), map: "BAEMAILINTEGRATIONDATA_DF1") @db.DateTime
  processingTries Int      @default(0, map: "BAEMAILINTEGRATIONDATA_DF2")
  status          Int      @default(0, map: "BAEMAILINTEGRATIONDATA_DF3")
  mailId          String?  @db.NVarChar(11)
  backgroundJobId String?  @db.VarChar(100)
}

model BAENTITYFORMLOG {
  idEntityFormLog Int      @id(map: "BAENTITYFORMLOG_PK") @default(autoincrement())
  entFrmLogKey    String   @db.VarChar(500)
  entFrmLogValue  String   @db.VarChar(7400)
  idEnt           Int
  idSurrogateKey  Int
  idWorkItem      BigInt
  idCase          Int
  idTask          Int
  idUser          Int
  entryDateTime   DateTime @db.DateTime
}

model BAENVIRONMENT {
  idBAEnvironment         Int                       @id(map: "BAENVIRONMENT_PK") @default(autoincrement())
  envName                 String?                   @unique(map: "BAENVIRONMENT_UK1") @db.VarChar(100)
  idEnvType               Int?                      @db.TinyInt
  isCurrentEnv            Boolean
  connString              String?                   @db.NVarChar(4000)
  guidBAEnvironment       String                    @unique(map: "BAENVIRONMENT_UKG") @default(dbgenerated("newid()"), map: "BAENVIRONMENT_DFG") @db.UniqueIdentifier
  dplyBAEnvironment       Int                       @default(0, map: "BAENVIRONMENT_DFY") @db.TinyInt
  ENVIRONMENTTYPE         ENVIRONMENTTYPE?          @relation(fields: [idEnvType], references: [idEnvType], onDelete: NoAction, onUpdate: NoAction, map: "BAENVIRONME_ENVIRONMENTTYP_FK1")
  BAENVPARAMVALUEENTITYEX BAENVPARAMVALUEENTITYEX[]

  @@index([idEnvType], map: "BAENVIRONMENT_FK_IDX_1")
}

model BAENVPARAMENTITYEX {
  idEnvParamEntityEx      Int                       @id(map: "BAENVPARAMENTITYEX_PK") @default(autoincrement())
  paramName               String                    @unique(map: "BAENVPARAMENTITYEX_UK1") @db.VarChar(50)
  paramDefaultValue       String?                   @db.NVarChar(4000)
  CommonToAllEnvsDefault  Boolean
  guidEnvParamEntityEx    String                    @unique(map: "BAENVPARAMENTITYEX_UKG") @default(dbgenerated("newid()"), map: "BAENVPARAMENTITYEX_DFG") @db.UniqueIdentifier
  dplyEnvParamEntityEx    Int                       @default(0, map: "BAENVPARAMENTITYEX_DFY") @db.TinyInt
  paramRequired           Boolean
  displayOrder            Int                       @db.TinyInt
  BAENVPARAMENTITYEXFLAGS BAENVPARAMENTITYEXFLAGS[]
  BAENVPARAMVALUEENTITYEX BAENVPARAMVALUEENTITYEX[]
}

model BAENVPARAMENTITYEXFLAGS {
  idEnvParamEntityExFlags   Int                @id(map: "BAENVPARAMENTITYEXFLAGS_PK") @default(autoincrement())
  idEnt                     Int
  idEnvParamEntityEx        Int
  CommonToAllEnvs           Boolean
  guidEnvParamEntityExFlags String             @unique(map: "BAENVPARAMENTITYEXFLAGS_UKG") @default(dbgenerated("newid()"), map: "BAENVPARAMENTITYEXFLAGS_DFG") @db.UniqueIdentifier
  dplyEnvParamEntityExFlags Int                @default(0, map: "BAENVPARAMENTITYEXFLAGS_DFY") @db.TinyInt
  BAENVPARAMENTITYEX        BAENVPARAMENTITYEX @relation(fields: [idEnvParamEntityEx], references: [idEnvParamEntityEx], onUpdate: NoAction, map: "BAENVPARENTFLG_BAENVPARENT_FK1")
  ENTITY                    ENTITY             @relation(fields: [idEnt], references: [idEnt], onUpdate: NoAction, map: "BAENVPARENTFLG_ENTITY_FK1")

  @@unique([idEnvParamEntityEx, idEnt], map: "BAENVPARAMENTITYEXFLAGS_UK1")
}

model BAENVPARAMVALUEENTITYEX {
  idEnvParamValueEntityEx     Int                @id(map: "BAENVPARAMVALUEENTITYEX_PK") @default(autoincrement())
  idEnvParamEntityEx          Int
  idBAEnvironment             Int
  idEnt                       Int
  paramValue                  String?            @db.VarChar(4000)
  guidBAEnvParamValueEntityEx String             @unique(map: "BAENVPARAMVALUEENTITYEX_UKG") @default(dbgenerated("newid()"), map: "BAENVPARAMVALUEENTITYEX_DFG") @db.UniqueIdentifier
  dplyBAEnvParamValueEntityEx Int                @default(0, map: "BAENVPARAMVALUEENTITYEX_DFY") @db.TinyInt
  BAENVIRONMENT               BAENVIRONMENT      @relation(fields: [idBAEnvironment], references: [idBAEnvironment], onUpdate: NoAction, map: "BAEPARAMVALENT_BAENVIRONME_FK1")
  BAENVPARAMENTITYEX          BAENVPARAMENTITYEX @relation(fields: [idEnvParamEntityEx], references: [idEnvParamEntityEx], onUpdate: NoAction, map: "BAEPARAMVALENT_BAEPARAMENT_FK1")
  ENTITY                      ENTITY             @relation(fields: [idEnt], references: [idEnt], onUpdate: NoAction, map: "BAEPARAMVALENT_ENTITY_FK1")

  @@unique([idEnvParamEntityEx, idBAEnvironment, idEnt], map: "BAENVPARAMVALUEENTITYEX_UK1")
}

model BAERRORCODE {
  idErrorCode     Int          @id(map: "BAERRORCODE_PK") @default(autoincrement())
  ercdName        String       @db.VarChar(26)
  ercdDisplayName String       @db.NVarChar(40)
  ercdDescription String?      @db.NVarChar(100)
  guidErrorCode   String       @unique(map: "BAERRORCODE_UKG") @default(dbgenerated("newid()"), map: "BAERRORCODE_DFG") @db.UniqueIdentifier
  dplyErrorCode   Int          @default(0, map: "BAERRORCODE_DFY") @db.TinyInt
  TASK            TASK[]
  TRANSITION      TRANSITION[]
}

model BAEXTENDEDLOG {
  idExtendedLog Int       @id(map: "BAEXTENDEDLOG_PK") @default(autoincrement())
  idCase        Int?
  elEntryDate   DateTime? @db.DateTime
  elEntry       String?   @db.Text
}

model BAFARMNODE {
  IdBAFarmNode      Int      @id(map: "BAFARMNODE_PK") @default(autoincrement())
  NodeIdentifier    String?  @unique(map: "BAFARMNODE_UK1") @db.NVarChar(100)
  IsMasterNode      Boolean?
  LicenseKey        String?  @db.NVarChar(2048)
  ClusterKey        String?  @db.NVarChar(2048)
  ClusterManagerKey String?  @db.NVarChar(2048)
}

model BAFAVORITES {
  idFavorite            Int    @id(map: "BAFAVORITES_PK")
  guidFavorite          String @default(dbgenerated("newid()"), map: "BAFAVORITES_DFG") @db.UniqueIdentifier
  xmlFavoriteDefinition Bytes  @db.Image

  @@index([guidFavorite], map: "BAFAVORITES_IX1")
}

model BAFILECONT {
  idFileCont   BigInt       @id(map: "BAFILECONT_PK")
  idFileUpload BigInt
  fcContent    Bytes?       @db.Image
  BAFILEUPLOAD BAFILEUPLOAD @relation(fields: [idFileUpload], references: [idFileUpload], onUpdate: NoAction, map: "BAFILECONT_BAFILEUPLOAD_FK1")

  @@index([idFileUpload], map: "BAFILECONT_IX1")
}

model BAFILEUPLOAD {
  idFileUpload       BigInt       @id(map: "BAFILEUPLOAD_PK")
  fuIdParent         BigInt?
  idAttrib           Int?
  fuFileName         String?      @db.NVarChar(255)
  ecmFileId          String?      @db.NVarChar(200)
  idCheckoutWorkitem BigInt?
  ASYNCECMJOB        ASYNCECMJOB?
  BAFILECONT         BAFILECONT[]
  ATTRIB             ATTRIB?      @relation(fields: [idAttrib], references: [idAttrib], onDelete: NoAction, onUpdate: NoAction, map: "BAFILEUPLOAD_ATTRIB_FK1")

  @@index([idAttrib], map: "BAFILEUPLOAD_FK_IDX_1")
  @@index([fuIdParent, idAttrib], map: "BAFILEUPLOAD_IX1")
}

model BAFILEUPLOG {
  IDBAFILEUPLOG BigInt  @id(map: "BAFILEUPLOG_PK")
  IDFILEUPLOAD  BigInt
  FULLOG        Bytes   @db.Image
  FULDISABLED   Boolean @default(false, map: "BAFILEUPLOG_DF1")
  FULIDSCOPE    BigInt  @default(0, map: "DF_BAFILEUPLOG_FULIDSCOPE")

  @@index([FULIDSCOPE, IDFILEUPLOAD], map: "IX_BAFILEUPLOG_FULIDESCOPE")
}

model BAGACUBE {
  idCube            Int             @id(map: "BAGACUBE_PK") @default(autoincrement())
  idStoredQuery     Int?
  cubeName          String?         @db.NVarChar(26)
  cubeDescription   String?         @db.NVarChar(255)
  idStoredQueryForm Int?
  BAGADIMENSION     BAGADIMENSION[]
  BAGAMEASURE       BAGAMEASURE[]

  @@index([idStoredQuery], map: "BAGACUBE_FK_IDX_1")
}

model BAGADIMENSION {
  idDimension         Int                   @id(map: "BAGADIMENSION_PK") @default(autoincrement())
  columnName          String                @db.VarChar(250)
  idCube              Int
  BAGACUBE            BAGACUBE              @relation(fields: [idCube], references: [idCube], onUpdate: NoAction, map: "BAGADIMENSION_BAGACUBE_FK1")
  BAGADIMENSIONFILTER BAGADIMENSIONFILTER[]

  @@index([idCube], map: "BAGADIMENSION_FK_IDX_1")
}

model BAGADIMENSIONFILTER {
  idDimensionFilter Int           @id(map: "BAGADIMENSIONFILTER_PK") @default(autoincrement())
  value             String        @db.NVarChar(40)
  idDimension       Int
  BAGADIMENSION     BAGADIMENSION @relation(fields: [idDimension], references: [idDimension], onUpdate: NoAction, map: "BAGADIMFILTER_GADIM_FK1")

  @@index([idDimension], map: "BAGADIMENSIONFILTER_FK_IDX_1")
}

model BAGAMEASURE {
  idMeasure            Int                    @id(map: "BAGAMEASURE_PK") @default(autoincrement())
  columnName           String                 @db.NVarChar(40)
  idCube               Int
  BAGACUBE             BAGACUBE               @relation(fields: [idCube], references: [idCube], onUpdate: NoAction, map: "BAGAMEASURE_BAGACUBE_FK1")
  BAGAMEASUREAGGREGATE BAGAMEASUREAGGREGATE[]

  @@index([idCube], map: "BAGAMEASURE_FK_IDX_1")
}

model BAGAMEASUREAGGREGATE {
  idMeasureAggregate Int         @id(map: "BAGAMEASUREAGGREGATE_PK") @default(autoincrement())
  idMeasure          Int
  sFunctionName      String      @db.NVarChar(10)
  BAGAMEASURE        BAGAMEASURE @relation(fields: [idMeasure], references: [idMeasure], onUpdate: NoAction, map: "BAGAMEASAGG_BAGAMEAS_FK1")

  @@index([idMeasure], map: "BAGAMEASUREAGGREGATE_FK_IDX_1")
}

model BAGENERATORTABLE {
  idBAGeneratorTable Int    @id(map: "BAGENERATORTABLE_PK") @default(autoincrement())
  sequenceName       String @unique(map: "BAGENERATORTABLE_IX1") @db.VarChar(100)
  sequenceValue      BigInt
  stackSize          Int?
}

model Bairro {
  idBairro   BigInt   @id(map: "pk965848645e2801380f6f8a617b3")
  finalEnt   Int      @default(10044, map: "DF__Bairro__finalEnt__6B4FD30B")
  guidBairro String   @unique(map: "Bairro_UKG") @default(dbgenerated("newid()"), map: "DF__Bairro__guidBair__6C43F744") @db.UniqueIdentifier
  dsblBairro Boolean?
  dplyBairro Int?     @db.TinyInt
  Codigo     Int?
  Cidade     BigInt?
  Nome       String?  @db.NVarChar(100)
}

model BALOCALIZATIONOVERRIDE {
  idObject    String @db.UniqueIdentifier
  uri         String @db.VarChar(500)
  objOverride String @db.NText

  @@id([idObject, uri], map: "BALOCALIZATIONOVERRIDE_PK")
}

model BAMAINTENANCEWINDOWLOG {
  idBAMaintenanceWindowLog String    @id(map: "BAMAINTENANCEWINDOWLOG_PK") @db.UniqueIdentifier
  idState                  Int?      @db.TinyInt
  idMode                   Int?      @db.TinyInt
  creationDate             DateTime? @db.DateTime
}

model BAMETADATASTATE {
  objectId String @id(map: "BAMETADATASTATE_PK") @db.UniqueIdentifier
  mtdState Int
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BAMETADATASTATECATALOG {
  guidObject  String   @db.UniqueIdentifier
  rootObject  String   @db.UniqueIdentifier
  changesetId Int?
  markDate    DateTime @db.DateTime

  @@index([rootObject, guidObject], map: "BAMETADATASTATECATALOG_CIDX", clustered: true)
  @@index([rootObject, changesetId], map: "BAMETADATASTATECATALOG_IDX2")
  @@index([guidObject], map: "BAMETADATASTATECATALOG_IDX3")
  @@ignore
}

model BAMETADATAVERSION {
  objectType Int @id(map: "BAMETADATAVERSION_PK")
  mtdVersion Int
}

model BAMFAVERIFICATIONS {
  idVerification   String   @id(map: "BAMFAVERIFICATIONS_PK") @db.UniqueIdentifier
  code             String?  @db.VarChar(256)
  timeStampUtc     BigInt
  validUntilUtc    BigInt?
  wasUsed          Boolean?
  verificationFrom String?  @db.VarChar(256)
  verificationTo   String?  @db.VarChar(256)
  userName         String   @db.VarChar(100)
  domain           String   @db.VarChar(25)
  guidUser         String?  @db.UniqueIdentifier
}

model BAMULTIINSTANCEGROUP {
  idMultiInstanceGroup    Int                     @id(map: "BAMULTIINSTANCEGROUP_PK") @default(autoincrement())
  idMultiInstanceProperty Int
  GroupOrder              Int
  xpath                   String
  guidMultiInstanceGroup  String                  @unique(map: "BAMULTIINSTANCEGROUP_UKG") @default(dbgenerated("newid()"), map: "BAMULTIINSTANCEGROUP_DFG") @db.UniqueIdentifier
  dplyMultiInstanceGroup  Int                     @default(0, map: "BAMULTIINSTANCEGROUP_DFY") @db.TinyInt
  deleted                 Boolean                 @default(false, map: "DF__BAMULTIIN__delet__1960B67E")
  BAMULTIINSTANCEPROPERTY BAMULTIINSTANCEPROPERTY @relation(fields: [idMultiInstanceProperty], references: [idMultiInstanceProperty], onUpdate: NoAction, map: "MIGROUP_MIPROPERTY_FK1")

  @@index([idMultiInstanceProperty], map: "BAMULTIINSTANCEGROUP_FK_IDX_1")
}

model BAMULTIINSTANCEPROPERTY {
  idMultiInstanceProperty   Int                    @id(map: "BAMULTIINSTANCEPROPERTY_PK") @default(autoincrement())
  sequential                Boolean
  loopCardinalityXPath      String?
  loopCardinalityInt        Int?
  loopCardinalityType       Int
  orderByAttrib             Int?
  orderDirection            Int?                   @db.TinyInt
  canClearPrevious          Boolean
  targetXPath               String
  guidMultiInstanceProperty String                 @unique(map: "BAMULTIINSTANCEPROPERTY_UKG") @default(dbgenerated("newid()"), map: "BAMULTIINSTANCEPROPERTY_DFG") @db.UniqueIdentifier
  dplyMultiInstanceProperty Int                    @default(0, map: "BAMULTIINSTANCEPROPERTY_DFY") @db.TinyInt
  deleted                   Boolean                @default(false, map: "DF__BAMULTIIN__delet__1C3D2329")
  BAMULTIINSTANCEGROUP      BAMULTIINSTANCEGROUP[]
  ATTRIB                    ATTRIB?                @relation(fields: [orderByAttrib], references: [idAttrib], onDelete: NoAction, onUpdate: NoAction, map: "MIPROPERTY_ATTRIB_FK1")
  TASK                      TASK[]

  @@index([orderByAttrib], map: "BAMULTIINSTANCEPROPER_FK_IDX_1")
}

model BAOAUTH2SERVERTOKEN {
  id                           String    @id(map: "BAOAUTH2SERVERTOKEN_PK") @db.UniqueIdentifier
  idApplication                String    @db.UniqueIdentifier
  userDomain                   String?   @db.NVarChar(256)
  userName                     String?   @db.VarChar(256)
  accessToken                  String?   @db.VarChar(256)
  authorizationCode            String?   @db.VarChar(256)
  refreshToken                 String?   @db.VarChar(256)
  tokenType                    String?   @db.VarChar(50)
  clientState                  String?   @db.NVarChar(256)
  internalState                String?   @db.VarChar(256)
  accessTokenExpirationTimeUTC DateTime? @db.DateTime
  authCodeExpirationTimeUTC    DateTime? @db.DateTime
  scope                        String?   @db.VarChar(250)
  assertionId                  String?   @db.VarChar(256)
  synchronizationToken         String?   @db.VarChar(256)
  syncTokenExpirationTimeUTC   DateTime? @db.DateTime
  creationTimeUTC              DateTime  @db.DateTime
  accessTokenOriginal          String?   @db.VarChar(4000)
  refreshTokenOriginal         String?   @db.VarChar(4000)
  idToken                      String?   @db.VarChar(4000)
  content                      String?   @db.VarChar(4000)

  @@index([accessToken], map: "BAOAUTH2SERVERTOKEN_ACTOKEN_1")
  @@index([authorizationCode], map: "BAOAUTH2SERVERTOKEN_AUTCODE_1")
  @@index([idApplication], map: "BAOAUTH2SERVERTOKEN_IDAPP_1")
  @@index([internalState], map: "BAOAUTH2SERVERTOKEN_INSTATE_1")
  @@index([refreshToken], map: "BAOAUTH2SERVERTOKEN_RFTOKEN_1")
}

model BAOAUTHAUTHORIZATIONCODE {
  idOAuthAuthorizationCode Int     @id(map: "BAOAUTHAUTHORIZATIONCODE_PK") @default(autoincrement())
  assertionId              String? @db.NVarChar(250)
  authorizationCode        String  @db.NVarChar(250)
  responseType             String? @db.NVarChar(50)
  clientId                 String? @db.NVarChar(512)
  redirectUri              String? @db.NVarChar(512)
  scope                    String? @db.NVarChar(512)
  state                    String? @db.NVarChar(512)
  expirationTime           BigInt
  creationTime             BigInt

  @@index([assertionId], map: "BAOAUTHAUTHORIZATIONCODE_X1")
  @@index([authorizationCode], map: "BAOAUTHAUTHORIZATIONCODE_X2")
}

model BAOAUTHTOKEN {
  idOAuthToken   Int     @id(map: "BAOAUTHTOKEN_PK") @default(autoincrement())
  assertionId    String? @db.NVarChar(250)
  accessToken    String  @db.NVarChar(250)
  refreshToken   String? @db.NVarChar(250)
  grantType      String? @db.NVarChar(250)
  clientId       String? @db.NVarChar(512)
  redirectUri    String? @db.NVarChar(512)
  tokenType      String? @db.NVarChar(50)
  scope          String? @db.NVarChar(512)
  state          String? @db.NVarChar(512)
  expirationTime BigInt
  creationTime   BigInt

  @@index([assertionId], map: "BAOAUTHTOKEN_X1")
  @@index([accessToken], map: "BAOAUTHTOKEN_X2")
}

model BAOFFACCESS {
  idBAOffAccess        Int                @id(map: "BAOFFACCESS_PK") @default(autoincrement())
  idBaOfflineChangeSet Int
  idWFClass            Int
  idWorkFlow           Int?
  active               Boolean
  timeStamp            DateTime?          @db.DateTime
  BAOFFLINECHANGESET   BAOFFLINECHANGESET @relation(fields: [idBaOfflineChangeSet], references: [idBaOfflineChangeSet], onUpdate: NoAction, map: "BAOFFACESS_OFFCHG_FK2")
}

model BAOFFLINECHANGESET {
  idBaOfflineChangeSet Int           @id(map: "BAOFFLINECHANGESET_PK") @default(autoincrement())
  changeSetType        Int?
  changeSet            Int?
  idUser               Int?
  active               Boolean
  BAOFFACCESS          BAOFFACCESS[]
  BAOFFRENDER          BAOFFRENDER[]
}

model BAOFFRENDER {
  idBaOffRender        Int                @id(map: "BAOFFRENDER_PK") @default(autoincrement())
  idBaOfflineChangeSet Int
  idBaRenderData       Int
  BAOFFLINECHANGESET   BAOFFLINECHANGESET @relation(fields: [idBaOfflineChangeSet], references: [idBaOfflineChangeSet], onUpdate: NoAction, map: "BAOFFRENDER_OFFCHG_FK2")
  BARENDERDATA         BARENDERDATA       @relation(fields: [idBaRenderData], references: [idBaRenderData], onUpdate: NoAction, map: "BAOFFRENDER_RNDDTA_FK1")
}

model BAOPERATION {
  idOperation  Int      @id(map: "BAOPERATION_PK") @default(autoincrement())
  idUser       Int
  opType       Int
  state        Int      @default(0, map: "DF__BAOPERATI__state__1D314762")
  percentage   Int      @default(0, map: "DF__BAOPERATI__perce__1E256B9B")
  result       String?  @db.NVarChar(4000)
  creationDate DateTime @default(now(), map: "DF__BAOPERATI__creat__1F198FD4") @db.DateTime
  modifiedDate DateTime @default(now(), map: "DF__BAOPERATI__modif__200DB40D") @db.DateTime
  WFUSER       WFUSER   @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "BAOPERATION_WFUSER_FK1")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BAOVERRIDE {
  guidObject         String?   @db.UniqueIdentifier
  guidObjectParent   String?   @db.UniqueIdentifier
  objName            String    @db.VarChar(256)
  objContent         Bytes?
  objType            Int
  objTypeName        String?   @db.VarChar(50)
  deployOnParent     Boolean
  modifiedDate       DateTime? @default(now(), map: "BAOVERRIDE_DF1") @db.DateTime
  modifiedByUser     String?   @db.VarChar(100)
  mtdVersion         Int?      @default(0, map: "BAOVERRIDE_DF4")
  rootObject         String?   @db.UniqueIdentifier
  changeSetId        Int?
  objContentResolved Bytes?
  deleted            Boolean   @default(false, map: "BAOVERRIDE_DF3")
  contentFormat      Int?      @default(0, map: "BAOVERRIDE_DF2") @db.TinyInt

  @@index([rootObject, guidObject], map: "BAOVERRIDE_CIDX", clustered: true)
  @@index([rootObject, changeSetId], map: "BAOVERRIDE_IDX2")
  @@index([guidObject], map: "BAOVERRIDE_IDX3")
  @@index([objType], map: "BAOVERRIDE_IDX4")
  @@index([guidObjectParent], map: "BAOVERRIDE_IDX5")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BAOVERRIDEREFERENCE {
  rootObject       String? @db.UniqueIdentifier
  guidPointer      String? @db.UniqueIdentifier
  guidObjectRef    String? @db.UniqueIdentifier
  guidObjectTarget String  @db.UniqueIdentifier
  deleted          Boolean @default(false, map: "BAOVERRIDEREFERENCE_DF1")

  @@index([rootObject, guidObjectRef], map: "BAOVERRIDEREFERENCE_CIDX", clustered: true)
  @@index([guidPointer, guidObjectRef], map: "BAOVERRIDEREFERENCE_IDX")
  @@index([guidObjectTarget], map: "BAOVERRIDEREFERENCE_IDX2")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BAOVERRIDETAGVALUE {
  rootObject   String? @db.UniqueIdentifier
  tagType      String  @db.UniqueIdentifier
  tagName      String  @db.VarChar(50)
  taggedObject String  @db.UniqueIdentifier
  value        String? @db.NVarChar(4000)
  deleted      Boolean @default(false, map: "DF_BAOVERRIDETAGVALUE_DELETED")

  @@index([rootObject, taggedObject], map: "BAOVERRIDETAGVALUE_CIDX", clustered: true)
  @@index([taggedObject, deleted], map: "BAOVERRIDETAGVALUE_IDX")
  @@index([taggedObject, tagType], map: "BAOVERRIDETAGVALUE_IDX2")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BAPLANTEMPLATE {
  idPlanTemplate   String  @db.UniqueIdentifier
  name             String? @db.NVarChar(100)
  objectPlan       String? @db.NText
  idTask           String? @db.UniqueIdentifier
  isContextualized Boolean
  description      String?

  @@ignore
}

model BAPOLICYCHANGES {
  idBAPolicyChanges Int      @id(map: "BAPOLICYCHANGES_PK") @default(autoincrement())
  changeType        Int
  idUser            Int
  changeDate        DateTime @db.DateTime
  xmlCodeBefore     Bytes    @db.Image
  xmlCodeAfter      Bytes    @db.Image
  idBAPolicyRule    Int?
  idBADecisionTable Int?
  idBAPolicy        Int?
  idBAPolicyVersion Int?
  idBADefinition    Int?
}

model BARENDERCACHE {
  idRenderCache Int         @id(map: "BARENDERCACHE_PK") @default(autoincrement())
  guidForm      String      @db.UniqueIdentifier
  data          Bytes?      @db.Image
  idLanguage    Int?
  LGLANGUAGE    LGLANGUAGE? @relation(fields: [idLanguage], references: [idLgLanguage], onDelete: NoAction, onUpdate: NoAction, map: "BARENDERCACHE_LGLANGUAGE_FK1")

  @@index([idLanguage], map: "BARENDERCACHE_FK_IDX_1")
}

model BARENDERDATA {
  idBaRenderData Int           @id(map: "BARENDERDATA_PK") @default(autoincrement())
  idForm         String?       @db.UniqueIdentifier
  data           Bytes?        @db.Image
  crc            String?       @db.VarChar(64)
  frmTimeStamp   DateTime?     @db.DateTime
  idWfClass      Int
  idWorkflow     Int
  idLanguage     Int?
  idUser         Int?
  active         Boolean
  BAOFFRENDER    BAOFFRENDER[]
  LGLANGUAGE     LGLANGUAGE?   @relation(fields: [idLanguage], references: [idLgLanguage], onDelete: NoAction, onUpdate: NoAction, map: "BARENDERDATA_LGLNG_FK1")
  WFCLASS        WFCLASS       @relation(fields: [idWfClass], references: [idWfClass], onUpdate: NoAction, map: "BARENDERDATA_WFCLASS_FK2")

  @@index([idForm], map: "BARENDERDATA_IX")
}

model BAREPDATA {
  idRepData       Int       @id(map: "BAREPDATA_PK") @default(autoincrement())
  repNextRunTime  DateTime? @db.DateTime
  guidReplication String?   @db.UniqueIdentifier
  backgroundJobId String?   @db.VarChar(100)
}

model BAREPLOG {
  idRepLog            Int      @id(map: "BAREPLOG_PK") @default(autoincrement())
  repExecutionDate    DateTime @db.DateTime
  repExecutionResult  Boolean
  repExecutionMessage String?  @db.VarChar(7600)
  guidReplication     String?  @db.UniqueIdentifier
}

model BARETURNURL {
  idBAReturnURL Int    @id(map: "BARETURNURL_PK") @default(autoincrement())
  ReturnURL     Bytes? @db.Image
}

model BASCHEDULEDATA {
  idSchedData      Int       @id(map: "BASCHEDULEDATA_PK") @default(autoincrement())
  schedNextRunTime DateTime? @db.DateTime
  guidSchedule     String?   @db.UniqueIdentifier
  backgroundJobId  String?   @db.VarChar(100)
}

model BASCHEDULELOG {
  idSchedLog            Int      @id(map: "BASCHEDULELOG_PK") @default(autoincrement())
  schedExecutionDate    DateTime @db.DateTime
  schedExecutionResult  Boolean
  schedExecutionMessage String?  @db.NVarChar(4000)
  guidSchedule          String?  @db.UniqueIdentifier
}

model BASCOPE {
  idScope       BigInt  @id(map: "BASCOPE_PK")
  speScopeType  Int     @db.TinyInt
  speContent    Bytes   @db.Image
  idCase        Int?
  SPESCOPEVER   Int     @default(1, map: "BASCOPE_DF1")
  DISABLED      Boolean @default(false, map: "BASCOPE_DF2")
  idParentScope BigInt?

  @@index([idCase, speScopeType], map: "BASCOPE_IX1")
  @@index([idParentScope], map: "IX_BASCOPE_IDPARENTSCOPE")
}

model BASCOPEDEF {
  idScopeDef     Int     @id(map: "BASCOPEDEF_PK") @default(autoincrement())
  sdScopeDefName String? @db.NVarChar(40)
  guidScopeDef   String  @unique(map: "BASCOPEDEF_UKG") @default(dbgenerated("newid()"), map: "BASCOPEDEF_DFG") @db.UniqueIdentifier
  dplyScopeDef   Int     @default(0, map: "BASCOPEDEF_DFY") @db.TinyInt
  deleted        Boolean @default(false, map: "DF__BASCOPEDE__delet__2A8B4280")
}

model BASCOPEITEMDEF {
  idScopeItemDef   Int     @id(map: "BASCOPEITEMDEF_PK") @default(autoincrement())
  sidName          String? @db.NVarChar(255)
  sidItemType      Int
  sidDataType      Int?
  idEnt            Int?
  idScopeDef       Int?
  sidDisplayName   String? @db.NVarChar(40)
  sidDescription   String? @db.NVarChar(100)
  sidHelpText      String? @db.NVarChar(100)
  sidDisplayType   Int?
  guidScopeItemDef String  @unique(map: "BASCOPEITEMDEF_UKG") @default(dbgenerated("newid()"), map: "BASCOPEITEMDEF_DFG") @db.UniqueIdentifier
  dplyScopeItemDef Int     @default(0, map: "BASCOPEITEMDEF_DFY") @db.TinyInt
  deleted          Boolean @default(false, map: "DF__BASCOPEIT__delet__2D67AF2B")
  ENTITY           ENTITY? @relation(fields: [idEnt], references: [idEnt], onDelete: NoAction, onUpdate: NoAction, map: "BASCOPEITEMDEF_ENTITY_FK1")

  @@index([idScopeDef], map: "BASCOPEITEMDEF_FK_IDX_1")
  @@index([idEnt], map: "BASCOPEITEMDEF_FK_IDX_2")
}

model BASCOPELOG {
  id         BigInt   @id(map: "BASCOPELOG_PK")
  idScope    BigInt?
  disabled   Boolean?
  historyLog Bytes?   @db.Image
  version    Int      @default(1, map: "BASCOPELOG_DF1")
  slOrder    Int?

  @@index([idScope], map: "IX_BASCOPELOG_IDSCOPE")
}

model BASTAKEHOLDERUSER {
  idEnt         Int
  idStakeHolder Int
  idUser        Int
  autoMapping   Boolean @default(false, map: "DF__BASTAKEHO__autoM__2F4FF79D")
  disabled      Boolean @default(false, map: "DF__BASTAKEHO__disab__30441BD6")

  @@id([idEnt, idUser], map: "BASTAKEHOLDERUSER_PK")
  @@index([idEnt, disabled], map: "BASTAKEHOLDERUSER_IDX")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BASYSTEMCATALOG {
  guidObject         String?   @db.UniqueIdentifier
  guidObjectParent   String?   @db.UniqueIdentifier
  objName            String    @db.VarChar(256)
  objContent         Bytes?
  objType            Int
  objTypeName        String?   @db.VarChar(50)
  deployOnParent     Boolean
  modifiedDate       DateTime? @default(now(), map: "BASYSTEMCATALOG_DF1") @db.DateTime
  modifiedByUser     String?   @db.VarChar(100)
  mtdVersion         Int?      @default(0, map: "BASYSTEMCATALOG_DF4")
  rootObject         String?   @db.UniqueIdentifier
  changeSetId        Int?
  objContentResolved Bytes?
  deleted            Boolean   @default(false, map: "BASYSTEMCATALOG_DF3")
  contentFormat      Int?      @default(0, map: "BASYSTEMCATALOG_DF2") @db.TinyInt

  @@index([rootObject, guidObject], map: "BASYSTEMCATALOG_CIDX", clustered: true)
  @@index([rootObject, changeSetId], map: "BASYSTEMCATALOG_IDX2")
  @@index([guidObject], map: "BASYSTEMCATALOG_IDX3")
  @@index([objType], map: "BASYSTEMCATALOG_IDX4")
  @@index([guidObjectParent], map: "BASYSTEMCATALOG_IDX5")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BASYSTEMTAGVALUE {
  rootObject   String? @db.UniqueIdentifier
  tagType      String  @db.UniqueIdentifier
  tagName      String  @db.VarChar(50)
  taggedObject String  @db.UniqueIdentifier
  value        String? @db.NVarChar(4000)
  deleted      Boolean @default(false, map: "DF_BASYSTEMTAGVALUE_DELETED")

  @@index([rootObject, taggedObject], map: "BASYSTEMTAGVALUE_CIDX", clustered: true)
  @@index([taggedObject, deleted], map: "BASYSTEMTAGVALUE_IDX")
  @@index([taggedObject, tagType], map: "BASYSTEMTAGVALUE_IDX2")
  @@ignore
}

model BATAGS {
  IdBATag          Int     @id(map: "BATAGS_PK") @default(autoincrement())
  IdTagDefinition  Int?
  guidTaggedObject String? @db.UniqueIdentifier
  TagValue         String? @db.VarChar(150)

  @@index([IdTagDefinition], map: "BATAGS_IX1")
  @@index([IdTagDefinition, TagValue], map: "BATAGS_IX2")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BATAGVALUE {
  rootObject   String? @db.UniqueIdentifier
  tagType      String  @db.UniqueIdentifier
  tagName      String  @db.VarChar(50)
  taggedObject String  @db.UniqueIdentifier
  value        String? @db.NVarChar(4000)
  deleted      Boolean @default(false, map: "DF_BATAGVALUE_DELETED")

  @@index([rootObject, taggedObject], map: "BATAGVALUE_CIDX", clustered: true)
  @@index([taggedObject, deleted], map: "BATAGVALUE_IDX")
  @@index([taggedObject, tagType], map: "BATAGVALUE_IDX2")
  @@index([deleted], map: "BATAGVALUE_IDX3")
  @@index([tagType], map: "BATAGVALUE_IX1")
  @@ignore
}

model BATESTASSERTIONTYPE {
  idTestAssertionType Int    @id(map: "BATESTASSERTIONTYPE_PK") @db.TinyInt
  testAssertionType   String @db.NVarChar(26)
}

model BATESTWFCASE {
  idBaTestWfCase Int @id(map: "BATESTWFCASE_PK") @default(autoincrement())
  idCase         Int
  idTestCase     Int

  @@unique([idCase, idTestCase], map: "BATESTWFCASE_UK1")
}

model BATIMEZONE {
  idBATimeZone   Int        @id(map: "BATIMEZONE_PK") @default(autoincrement())
  tzName         String     @db.NVarChar(50)
  tzDisplayName  String     @db.NVarChar(100)
  guidBATimeZone String     @unique(map: "BATIMEZONE_UKG") @default(dbgenerated("newid()"), map: "BATIMEZONE_DFG") @db.UniqueIdentifier
  dplyBATimeZone Int        @default(0, map: "BATIMEZONE_DFY") @db.TinyInt
  finalEnt       Int        @default(10, map: "BATIMEZONEDEF")
  LOCATION       LOCATION[]
  ORG            ORG[]
  WFUSER         WFUSER[]
}

model BATRACE {
  idBATrace   Int    @id(map: "BaTrace_PK") @default(autoincrement())
  BaTraceFile Bytes? @db.Image
}

model BATRACEAUDITLOG {
  idBATraceAuditLog String    @id(map: "BATRACEAUDITLOG_PK") @db.UniqueIdentifier
  client            String?   @db.NVarChar(100)
  idEventType       Int?
  idEventSubType    Int?
  eventContent      String?   @db.NVarChar(4000)
  userName          String?   @db.VarChar(100)
  domain            String?   @db.VarChar(25)
  creationDate      DateTime? @db.DateTime
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model BATRANSITIONPLAN {
  guidTransitionPlan String @db.UniqueIdentifier
  guidActivityFrom   String @db.UniqueIdentifier
  guidActivityTo     String @db.UniqueIdentifier
  guidPlan           String @db.UniqueIdentifier

  @@ignore
}

model BAUNICODEEXCEPTION {
  idUnicodeException Int    @id(map: "BAUNICODEEXCEPTION_PK")
  tableName          String @db.VarChar(100)
  columnName         String @db.VarChar(100)
  fixedDataType      String @db.VarChar(50)

  @@unique([tableName, columnName], map: "BAUNICODEEXCEPTION_UK1")
}

model BAUSERACCESSLOG {
  idUserAccessLog Int       @id(map: "BAUSERACCESSLOG_PK") @default(autoincrement())
  accessedPage    String
  idUser          Int
  ualEntryDate    DateTime? @default(now(), map: "BAUSERACCESSLOG_DF1") @db.DateTime
  WFUSER          WFUSER    @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "BAUSERACCESSLOG_WFUSER_FK1")

  @@index([idUser], map: "BAUSERACCESSLOG_FK_IDX_1")
}

model BAUSERDEFAULTWFCLASS {
  idUser         Int
  idWfClass      Int
  idOrganization Int
  ORG            ORG     @relation(fields: [idOrganization], references: [idOrg], onUpdate: NoAction, map: "BAUSERWFCLASS_ORG_FK1")
  WFCLASS        WFCLASS @relation(fields: [idWfClass], references: [idWfClass], onUpdate: NoAction, map: "BAUSERWFCLASS_WFCLASS_FK1")
  WFUSER         WFUSER  @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "BAUSERWFCLASS_WFUSER_FK1")

  @@id([idUser, idWfClass, idOrganization], map: "BAUSERDEFAULTWFCLASS_PK")
}

model BAUSERGROUPUSER {
  idBAUserGroupUser    Int     @id(map: "BAUSERGROUPUSER_PK") @default(autoincrement())
  idUser               Int
  userGroupUserInclude Boolean
  guidUserGroup        String? @db.UniqueIdentifier
  WFUSER               WFUSER  @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "BAUSERGROUPUSER_WFUSER_FK1")

  @@index([idUser], map: "BAUSERGROUPUSER_FK_IDX_2")
}

model BAUSERSACTIVITY {
  entryDate    DateTime @id(map: "BAUSERSACTIVITY_PK") @db.DateTime
  UserActivity Bytes    @db.Image
}

model BAUSERSTATISTICS_CASE {
  idUSCase               Int                      @id(map: "BAUSERSTATISTICS_CASE_PK")
  idUser                 Int                      @unique(map: "ID_USER_UQ1")
  lastDate               DateTime                 @default(now(), map: "BAUSERSTATISTICS_CASE_DF1") @db.DateTime
  WFUSER                 WFUSER                   @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "BAUSRSTATS_CASE_WFUSER_FK1")
  BAUSERSTATISTICS_CCASE BAUSERSTATISTICS_CCASE[]
}

model BAUSERSTATISTICS_CCASE {
  idUSCC                Int                   @id(map: "BAUSERSTATISTICS_CCASE_PK")
  idUSCase              Int
  idWFClass             Int
  weight                Int
  lastCreationDate      DateTime?             @db.DateTime
  BAUSERSTATISTICS_CASE BAUSERSTATISTICS_CASE @relation(fields: [idUSCase], references: [idUSCase], onUpdate: NoAction, map: "BAUSRSTATS_CCASE_STATSCASE_FK2")
  WFCLASS               WFCLASS               @relation(fields: [idWFClass], references: [idWfClass], onUpdate: NoAction, map: "BAUSRSTATS_CCASE_WFCLASS_FK1")

  @@index([idUSCase], map: "BAUSERSTATISTICS_CCAS_FK_IDX_1")
  @@index([idWFClass], map: "BAUSERSTATISTICS_CCAS_FK_IDX_2")
}

model BAWFCASELOG {
  idWfCaseLog        Int      @id(map: "BAWFCASELOG_PK") @default(autoincrement())
  idCase             Int
  radNumber          String   @db.NVarChar(40)
  wfCaseLogEntryDate DateTime @default(now(), map: "BAWFCASELOG_DF1") @db.DateTime
}

model BAWFCLASS_ENTITY {
  idWfClassEntity   Int     @id(map: "BAWFCLASS_ENTITY_PK") @default(autoincrement())
  idWfClass         Int     @unique(map: "BAWFCLASS_ENTITY_UK1")
  idEnt             Int
  guidWfClassEntity String  @unique(map: "BAWFCLASS_ENTITY_UKG") @default(dbgenerated("newid()"), map: "BAWFCLASS_ENTITY_DFG") @db.UniqueIdentifier
  dplyWfClassEntity Int     @default(0, map: "BAWFCLASS_ENTITY_DFY") @db.TinyInt
  idAttrib          Int?
  deleted           Boolean @default(false, map: "DF__BAWFCLASS__delet__3BB5CE82")
  ATTRIB            ATTRIB? @relation(fields: [idAttrib], references: [idAttrib], onDelete: NoAction, onUpdate: NoAction, map: "BAWFCLASS_ATTRIB_FK1")
  ENTITY            ENTITY  @relation(fields: [idEnt], references: [idEnt], onUpdate: NoAction, map: "BAWFCLASS_ENTITY_ENTITY_FK1")
  WFCLASS           WFCLASS @relation(fields: [idWfClass], references: [idWfClass], onUpdate: NoAction, map: "BAWFCLASS_ENTITY_WFCLASS_FK1")

  @@index([idAttrib], map: "BAWFCLASS_ENTITY_FK_IDX_1")
  @@index([idWfClass, idEnt], map: "BAWFCLASS_ENTITY_IX1")
}

model BAWICLOSED {
  idWIClosed       BigInt @id(map: "BAWICLOSED_PK")
  idWorkItem       BigInt
  idParentWorkitem BigInt
}

model BAWPFOLDER {
  idBAWPFolder       Int              @id(map: "BAWPFOLDER_PK") @default(autoincrement())
  idBAWPParentFolder Int?
  WPFolderName       String?          @db.NVarChar(50)
  idUser             Int
  BAWPFOLDER         BAWPFOLDER?      @relation("BAWPFOLDERToBAWPFOLDER", fields: [idBAWPParentFolder], references: [idBAWPFolder], onDelete: NoAction, onUpdate: NoAction, map: "BAWPFOLDER_BAWPFOLDER_FK1")
  other_BAWPFOLDER   BAWPFOLDER[]     @relation("BAWPFOLDERToBAWPFOLDER")
  WFUSER             WFUSER           @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "BAWPFOLDER_WFUSER_FK1")
  BAWPFOLDERCASE     BAWPFOLDERCASE[]

  @@index([idBAWPParentFolder], map: "BAWPFOLDER_FK_IDX_1")
  @@index([idUser], map: "BAWPFOLDER_FK_IDX_2")
}

model BAWPFOLDERCASE {
  idBAWPFolderCase Int        @id(map: "BAWPFOLDERCASE_PK") @default(autoincrement())
  idBAWPFolder     Int
  idCase           Int?
  BAWPFOLDER       BAWPFOLDER @relation(fields: [idBAWPFolder], references: [idBAWPFolder], onUpdate: NoAction, map: "BAWPFOLDERCASE_BAWPFOLDER_FK1")

  @@index([idBAWPFolder], map: "BAWPFOLDERCASE_FK_IDX_1")
}

model BAWPQUERY {
  idBAWPQuery                                        Int                     @id(map: "BAWPQUERY_PK") @default(autoincrement())
  idParentQuery                                      Int?
  idApplication                                      Int?
  WPQueryName                                        String?                 @db.NVarChar(50)
  idUser                                             Int?
  WPQueryCurrentCases                                Boolean?
  WPQueryOpenCases                                   Boolean?
  WPQueryMonths                                      Int?
  idSystemQuery                                      Int?
  deleted                                            Boolean                 @default(false, map: "DF_BAWPQUERY_DELETED")
  WPQueryDays                                        Int?
  APPLICATION                                        APPLICATION?            @relation(fields: [idApplication], references: [idApplication], onDelete: NoAction, onUpdate: NoAction, map: "BAWPQUERY_APP_FK1")
  BAWPQUERY_BAWPQUERY_idParentQueryToBAWPQUERY       BAWPQUERY?              @relation("BAWPQUERY_idParentQueryToBAWPQUERY", fields: [idParentQuery], references: [idBAWPQuery], onDelete: NoAction, onUpdate: NoAction, map: "BAWPQUERY_BAWPQUERY_FK1")
  other_BAWPQUERY_BAWPQUERY_idParentQueryToBAWPQUERY BAWPQUERY[]             @relation("BAWPQUERY_idParentQueryToBAWPQUERY")
  BAWPQUERY_BAWPQUERY_idSystemQueryToBAWPQUERY       BAWPQUERY?              @relation("BAWPQUERY_idSystemQueryToBAWPQUERY", fields: [idSystemQuery], references: [idBAWPQuery], onDelete: NoAction, onUpdate: NoAction, map: "BAWPQUERY_BAWPQUERY_FK2")
  other_BAWPQUERY_BAWPQUERY_idSystemQueryToBAWPQUERY BAWPQUERY[]             @relation("BAWPQUERY_idSystemQueryToBAWPQUERY")
  WFUSER                                             WFUSER?                 @relation(fields: [idUser], references: [idUser], onDelete: NoAction, onUpdate: NoAction, map: "BAWPQUERY_WFUSER_FK1")
  BAWPQUERYBUSINESSDATA                              BAWPQUERYBUSINESSDATA[]
  BAWPQUERYPROCESSDATA                               BAWPQUERYPROCESSDATA[]

  @@index([idApplication], map: "BAWPQUERY_FK_IDX_1")
  @@index([idParentQuery], map: "BAWPQUERY_FK_IDX_2")
  @@index([idSystemQuery], map: "BAWPQUERY_FK_IDX_3")
  @@index([idUser], map: "BAWPQUERY_FK_IDX_4")
}

model BAWPQUERYBUSINESSDATA {
  idBAWPQueryBusinessData Int       @id(map: "BAWPQUERYBUSINESSDATA_PK") @default(autoincrement())
  idBAWPQuery             Int
  CustomValue             String?   @db.NVarChar(400)
  idBADefinition          String?   @db.UniqueIdentifier
  BAWPQUERY               BAWPQUERY @relation(fields: [idBAWPQuery], references: [idBAWPQuery], onUpdate: NoAction, map: "BAWPQUERYBDATA_BAWPQUERY_FK1")

  @@index([idBAWPQuery], map: "BAWPQUERYBUSINESSDATA_FK_IDX_1")
}

model BAWPQUERYPROCESSDATA {
  idBAWPQueryProcessData Int          @id(map: "BAWPQUERYPROCESSDATA_PK") @default(autoincrement())
  idBAWPQuery            Int
  internalName           String       @db.NVarChar(50)
  idApplication          Int?
  idWfClass              Int?
  idCategory             Int?
  CustomData             String       @db.NVarChar(200)
  APPLICATION            APPLICATION? @relation(fields: [idApplication], references: [idApplication], onDelete: NoAction, onUpdate: NoAction, map: "BAWPBAQUERYPRDATA_APP_FK1")
  BAWPQUERY              BAWPQUERY    @relation(fields: [idBAWPQuery], references: [idBAWPQuery], onUpdate: NoAction, map: "BAWPQUERYPRDATA_BAWPQUERY_FK1")
  CATEGORY               CATEGORY?    @relation(fields: [idCategory], references: [idCategory], onDelete: NoAction, onUpdate: NoAction, map: "BAWPQUERYPRDATA_CATEG_FK1")
  WFCLASS                WFCLASS?     @relation(fields: [idWfClass], references: [idWfClass], onDelete: NoAction, onUpdate: NoAction, map: "BAWPQUERYPRDATA_WFCLASS_FK1")

  @@index([idApplication], map: "BAWPQUERYPROCESSDATA_FK_IDX_1")
  @@index([idBAWPQuery], map: "BAWPQUERYPROCESSDATA_FK_IDX_2")
  @@index([idCategory], map: "BAWPQUERYPROCESSDATA_FK_IDX_3")
  @@index([idWfClass], map: "BAWPQUERYPROCESSDATA_FK_IDX_4")
}

model BAXPATHLOG {
  idXPathLog   Int       @id(map: "BAXPATHLOG_PK") @default(autoincrement())
  xlBeanClass  String?   @db.NVarChar(100)
  xlBeanId     Int?
  xlXPath      String?   @db.NVarChar(255)
  xlOldValue   String?   @db.Text
  xlNewValue   String?   @db.Text
  xlEntryDate  DateTime? @db.DateTime
  idWorkItem   BigInt?
  xlPBeanClass String?   @db.NVarChar(100)
  xlPBeanId    Int?
  xlXpTarget   String?   @db.NVarChar(100)
  xlFormData   Boolean?
}

model BIZAGIINFO {
  BAInfo  String  @id(map: "BIZAGIINFO_PK") @db.VarChar(20)
  BAValue String? @db.VarChar(40)
}

model BIZLETTER {
  idBizLetter        Int                  @id(map: "BIZLETTER_PK") @default(autoincrement())
  blTemplateName     String               @db.NVarChar(26)
  guidBizLetter      String               @unique(map: "BIZLETTER_UKG") @default(dbgenerated("newid()"), map: "BIZLETTER_DFG") @db.UniqueIdentifier
  blTemplateFile     Bytes?               @db.Image
  idContextEnt       Int?
  dplyBizLetter      Int                  @default(0, map: "BIZLETTER_DFY") @db.TinyInt
  ENTITY             ENTITY?              @relation(fields: [idContextEnt], references: [idEnt], onDelete: NoAction, onUpdate: NoAction, map: "BIZLETTER_ENTITY_FK1")
  BIZLETTERCONDITION BIZLETTERCONDITION[]

  @@index([idContextEnt], map: "BIZLETTER_FK_IDX_1")
}

model BIZLETTERBINDING {
  idBizLetterBinding   Int                  @id(map: "BIZLETTERBINDING_PK") @default(autoincrement())
  blbName              String               @db.NVarChar(26)
  blbDisplayName       String?              @db.NVarChar(100)
  blbDescription       String?              @db.NVarChar(100)
  blbXPath             String               @db.NVarChar(500)
  guidBizLetterBinding String               @unique(map: "BIZLETTERBINDING_UKG") @default(dbgenerated("newid()"), map: "BIZLETTERBINDING_DFG") @db.UniqueIdentifier
  idWorkflow           Int
  dplyBizLetterBinding Int                  @default(0, map: "BIZLETTERBINDING_DFY") @db.TinyInt
  BIZLETTERCONDITION   BIZLETTERCONDITION[]

  @@unique([idWorkflow, blbName], map: "BIZLETTERBINDING_UK1")
  @@unique([idWorkflow, blbDisplayName], map: "BIZLETTERBINDING_UK2")
}

model BIZLETTERCONDITION {
  idBizLetterCondition   Int              @id(map: "BIZLETTERCONDITION_PK") @default(autoincrement())
  idBizLetter            Int
  idBizLetterBinding     Int
  guidBizLetterCondition String           @unique(map: "BIZLETTERCONDITION_UKG") @default(dbgenerated("newid()"), map: "BIZLETTERCONDITION_DFG") @db.UniqueIdentifier
  dplyBizLetterCondition Int              @default(0, map: "BIZLETTERCONDITION_DFY") @db.TinyInt
  guidRule               String?          @db.UniqueIdentifier
  BIZLETTERBINDING       BIZLETTERBINDING @relation(fields: [idBizLetterBinding], references: [idBizLetterBinding], onUpdate: NoAction, map: "LETTERCONDITION_BINDING_FK1")
  BIZLETTER              BIZLETTER        @relation(fields: [idBizLetter], references: [idBizLetter], onUpdate: NoAction, map: "LETTERCONDITION_BIZLETTER_FK1")

  @@index([idBizLetterBinding], map: "BIZLETTERCONDITION_FK_IDX_1")
  @@index([idBizLetter], map: "BIZLETTERCONDITION_FK_IDX_2")
}

model BIZSEQUENCEVALUE {
  idSequenceValue      Int     @id(map: "BIZSEQUENCEVALUE_PK") @default(autoincrement())
  sequenceCurrentValue Int
  guidSequence         String? @db.UniqueIdentifier
}

model CASEPATH {
  idCasePath      Int      @id(map: "CASEPATH_PK") @default(autoincrement())
  PathName        String   @db.NVarChar(15)
  PathDisplayName String?  @db.NVarChar(30)
  PathDescription String?  @db.NVarChar(80)
  idWorkflow      Int
  guidCasePath    String   @unique(map: "CASEPATH_UKG") @default(dbgenerated("newid()"), map: "CASEPATH_DFG") @db.UniqueIdentifier
  dplyCasePath    Int      @default(0, map: "CASEPATH_DFY") @db.TinyInt
  WORKFLOW        WORKFLOW @relation(fields: [idWorkflow], references: [idWorkflow], onUpdate: NoAction, map: "CASEPATH_WORKFLOW_FK1")
  WFCASE          WFCASE[]

  @@index([idWorkflow], map: "CASEPATH_FK_IDX_1")
}

model CASESTATE {
  idCaseState Int      @id(map: "CASESTATE_PK")
  csName      String   @db.NVarChar(26)
  WFCASE      WFCASE[]
}

model CASESTATELOG {
  idCaseStateLog BigInt   @id(map: "CASESTATELOG_PK") @default(autoincrement())
  idCase         Int
  idState        Int
  idUser         Int
  cslEntryDate   DateTime @default(now(), map: "CASESTATELOG_DF1") @db.DateTime
  duration       Int?

  @@index([idCase], map: "IX_CSLIDCASECLSENTRYDATE")
}

model CATEGORY {
  idCategory           Int                    @id(map: "CATEGORY_PK") @default(autoincrement())
  catName              String                 @db.NVarChar(26)
  catDisplayName       String                 @db.NVarChar(40)
  catDescription       String?                @db.NVarChar(100)
  catHelpText          String?                @db.NVarChar(100)
  catDisplayOrder      Int?                   @default(1, map: "CATEGORY_DF2") @db.SmallInt
  catCreationDate      DateTime               @default(now(), map: "CATEGORY_DF1") @db.DateTime
  idParentCategory     Int?
  idApplication        Int
  guidCategory         String                 @unique(map: "CATEGORY_UKG") @default(dbgenerated("newid()"), map: "CATEGORY_DFG") @db.UniqueIdentifier
  dplyCategory         Int                    @default(0, map: "CATEGORY_DFY") @db.TinyInt
  deleted              Boolean                @default(false, map: "DF__CATEGORY__delete__4A03EDD9")
  BAWPQUERYPROCESSDATA BAWPQUERYPROCESSDATA[]
  APPLICATION          APPLICATION            @relation(fields: [idApplication], references: [idApplication], onUpdate: NoAction, map: "CATEGORY_APPLICATION_FK1")
  CATEGORY             CATEGORY?              @relation("CATEGORYToCATEGORY", fields: [idParentCategory], references: [idCategory], onDelete: NoAction, onUpdate: NoAction, map: "CATEGORY_CATEGORY_FK1")
  other_CATEGORY       CATEGORY[]             @relation("CATEGORYToCATEGORY")
  WFCLASS              WFCLASS[]

  @@index([idParentCategory], map: "CATEGORY_FK_IDX_1")
  @@index([idApplication], map: "IX_CATEGORY")
}

model CEDDemanda {
  idCEDDemanda             BigInt   @id(map: "pk29159f1442c98bbbfa9c9f454db")
  finalEnt                 Int      @default(10042, map: "DF__CEDDemand__final__61C668D1")
  baCreatedTime            BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_CEDDemanda_baCreatedTime")
  baGuid                   String   @default(dbgenerated("newid()"), map: "DF_CEDDemanda_baGuid") @db.UniqueIdentifier
  CMDCredenciadasEscolhida BigInt?
  VeioChamada              Boolean? @default(false, map: "DF__CEDDemand__VeioC__72F0F4D3")
  RevisaoSolicitada        Boolean? @default(false, map: "DF__CEDDemand__Revis__73E5190C")
  Chamada                  BigInt?
  Edital                   BigInt?
  Credenciada              BigInt?
  NivelAtual               Int?     @default(1, map: "DF__CEDDemand__Nivel__74D93D45")
  DadosPadrao              BigInt?
}

model CEDDocumentacaoComumCred {
  idCEDDocumentacaoComumCred BigInt   @id(map: "pkd4b3e474a1796b812920c6914b0")
  finalEnt                   Int      @default(10039, map: "DF__CEDDocume__final__5378497A")
  baCreatedTime              BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_CEDDocumentacaoComumCred_baCreatedTime")
  baGuid                     String   @default(dbgenerated("newid()"), map: "DF_CEDDocumentacaoComumCred_baGuid") @db.UniqueIdentifier
  Nome                       String?  @db.NVarChar(100)
  Aprovado                   Boolean?
  Justificativa              String?  @db.NVarChar(200)
  Documentacao               Int?     @db.TinyInt
  CEDDemanda                 BigInt?

  @@index([CEDDemanda], map: "CEDDocumentacaoComumCred_F1")
}

model CEDDocumentacoesExigidas {
  idCEDDocumentacoesExigidas BigInt   @id(map: "pke8219f9466aa98839cbdd3d3de3")
  finalEnt                   Int      @default(10019, map: "DF__CEDDocume__final__6F556E19")
  baCreatedTime              BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_CEDDocumentacoesExigidas_baCreatedTime")
  baGuid                     String   @default(dbgenerated("newid()"), map: "DF_CEDDocumentacoesExigidas_baGuid") @db.UniqueIdentifier
  Nome                       String?  @db.NVarChar(100)
  Justificativa              String?  @db.NVarChar(200)
  Anexo                      Int?     @db.TinyInt
  CEDDemanda                 BigInt?
  Aprovado                   Boolean?

  @@index([CEDDemanda], map: "CEDDocumentacoesExigidas_F1")
}

model CEDDocumentacoesMembro {
  idCEDDocumentacoesMembro BigInt   @id(map: "pk86d75404ed9a464391f9baf38da")
  finalEnt                 Int      @default(10027, map: "DF__CEDDocume__final__157B1701")
  baCreatedTime            BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_CEDDocumentacoesMembro_baCreatedTime")
  baGuid                   String   @default(dbgenerated("newid()"), map: "DF_CEDDocumentacoesMembro_baGuid") @db.UniqueIdentifier
  CEDEscolhasNivel         BigInt?
  Documento                Int?     @db.TinyInt
  NomeDocumentacao         String?  @db.NVarChar(50)
  Aprovado                 Boolean?

  @@index([CEDEscolhasNivel], map: "CEDDocumentacoesMembro_F1")
}

model CEDDocumentoComumMembro {
  idCEDDocumentoComumMembro BigInt   @id(map: "pk6ff6d63477b8bc2a47e3c3b9583")
  finalEnt                  Int      @default(10040, map: "DF__CEDDocume__final__583CFE97")
  baCreatedTime             BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_CEDDocumentoComumMembro_baCreatedTime")
  baGuid                    String   @default(dbgenerated("newid()"), map: "DF_CEDDocumentoComumMembro_baGuid") @db.UniqueIdentifier
  Nome                      String?  @db.NVarChar(100)
  Documentacao              Int?     @db.TinyInt
  CEDEscolhasNivel          BigInt?
  Aprovado                  Boolean?

  @@index([CEDEscolhasNivel], map: "CEDDocumentoComumMembro_F1")
}

model CEDEscolhasNivel {
  idCEDEscolhasNivel      BigInt   @id(map: "pka0a84b84e0bb63e08afcd0081d4")
  finalEnt                Int      @default(10030, map: "DF__CEDEscolh__final__23C93658")
  baCreatedTime           BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_CEDEscolhasNivel_baCreatedTime")
  baGuid                  String   @default(dbgenerated("newid()"), map: "DF_CEDEscolhasNivel_baGuid") @db.UniqueIdentifier
  Nivel2Parametrizacao    BigInt?
  MembroTecnicoIndicado   BigInt?
  Nivel6Parametrizacao    BigInt?
  CEDDemanda2             BigInt?
  CEDDemanda1             BigInt?
  Nivel5Parametrizacao    BigInt?
  CEDDemanda6             BigInt?
  DocumentacaodoMembroApr Boolean? @default(false, map: "DF__CEDEscolh__Docum__70148828")
  Justificativa           String?  @db.NVarChar(200)
  Nivel4Parametrizacao    BigInt?
  CEDDemanda5             BigInt?
  Nivel3Parametrizacao    BigInt?
  CEDDemanda4             BigInt?
  Nivel7Parametrizacao    BigInt?
  CEDDemanda3             BigInt?
  Nivel1Parametrizacao    BigInt?
  CEDDemanda              BigInt?
  Cadastrar               Boolean? @default(false, map: "DF__CEDEscolh__Cadas__7108AC61")

  @@index([CEDDemanda1], map: "CEDEscolhasNivel_F1")
  @@index([CEDDemanda2], map: "CEDEscolhasNivel_F2")
  @@index([CEDDemanda3], map: "CEDEscolhasNivel_F3")
  @@index([CEDDemanda5], map: "CEDEscolhasNivel_F4")
  @@index([CEDDemanda], map: "CEDEscolhasNivel_F5")
  @@index([CEDDemanda6], map: "CEDEscolhasNivel_F6")
  @@index([CEDDemanda4], map: "CEDEscolhasNivel_F7")
}

model CEDLocalidades {
  idCEDLocalidades BigInt  @id(map: "pk545de714beeb78cb5bcdaf83186")
  finalEnt         Int     @default(10043, map: "DF__CEDLocali__final__668B1DEE")
  baCreatedTime    BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_CEDLocalidades_baCreatedTime")
  baGuid           String  @default(dbgenerated("newid()"), map: "DF_CEDLocalidades_baGuid") @db.UniqueIdentifier
  Nome             String? @db.NVarChar(100)
  CEDDemanda       BigInt?
  Prioridade       Int?

  @@index([CEDDemanda], map: "CEDLocalidades_F1")
}

model Cidade {
  idCidade   BigInt   @id(map: "pka7309cb496aae7c5662063a3bac")
  finalEnt   Int      @default(10013, map: "DF__Cidade__finalEnt__52B92F6B")
  guidCidade String   @unique(map: "Cidade_UKG") @default(dbgenerated("newid()"), map: "DF__Cidade__guidCida__53AD53A4") @db.UniqueIdentifier
  dsblCidade Boolean?
  dplyCidade Int?     @db.TinyInt
  UF         BigInt?
  Codigo     Int?
  Nome       String?  @db.NVarChar(100)
}

model CMDCredenciadasEscolhida {
  idCMDCredenciadasEscolhida BigInt   @id(map: "pk8c4f7924662aad4cebdfdcf5972")
  finalEnt                   Int      @default(10022, map: "DF__CMDCreden__final__7DA38D70")
  baCreatedTime              BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_CMDCredenciadasEscolhida_baCreatedTime")
  baGuid                     String   @default(dbgenerated("newid()"), map: "DF_CMDCredenciadasEscolhida_baGuid") @db.UniqueIdentifier
  Escolhido                  Boolean? @default(true, map: "DF__CMDCreden__Escol__6F2063EF")
  CMDDemandas                BigInt?
  Credenciada                BigInt?

  @@index([CMDDemandas], map: "CMDCredenciadasEscolhida_F1")
}

model CMDDemandas {
  idCMDDemandas BigInt  @id(map: "pk3770fd6445ea5c9c59dbd2d455b")
  finalEnt      Int     @default(10023, map: "DF__CMDDemand__final__0268428D")
  baCreatedTime BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_CMDDemandas_baCreatedTime")
  baGuid        String  @default(dbgenerated("newid()"), map: "DF_CMDDemandas_baGuid") @db.UniqueIdentifier
  Edital        BigInt?
  DadosPadrao   BigInt?
  Credenciadora BigInt?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model CQL_INDEXINGDELETEINPUT {
  guidObject  String? @db.UniqueIdentifier
  executionId String? @db.UniqueIdentifier

  @@index([executionId], map: "CQL_INDEXINGDELETEINPUT_IX1")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model CQL_INDEXINGDELETERESOLVED {
  IndexName   String? @db.VarChar(36)
  sourceGuid  String? @db.UniqueIdentifier
  targetGuid  String? @db.UniqueIdentifier
  executionId String? @db.UniqueIdentifier

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model CQL_INDEXINGDELETESTAGING {
  IndexName   String? @db.VarChar(36)
  sourceGuid  String? @db.UniqueIdentifier
  targetGuid  String? @db.UniqueIdentifier
  executionId String? @db.UniqueIdentifier

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model CQL_INDEXINGINSERTINPUT {
  IndexName   String? @db.VarChar(36)
  sourceGuid  String? @db.UniqueIdentifier
  targetGuid  String? @db.UniqueIdentifier
  executionId String? @db.UniqueIdentifier

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model CQL_INDEXINGINSERTRESOLVED {
  IndexName   String? @db.VarChar(36)
  sourceGuid  String? @db.UniqueIdentifier
  targetGuid  String? @db.UniqueIdentifier
  executionId String? @db.UniqueIdentifier

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model CQL_INDEXINGINSERTSTAGING {
  IndexName   String? @db.VarChar(36)
  sourceGuid  String? @db.UniqueIdentifier
  targetGuid  String? @db.UniqueIdentifier
  executionId String? @db.UniqueIdentifier

  @@ignore
}

model Credenciada {
  idCredenciada Int     @id(map: "pk7e6b5e94a9d8d96d478bb658060")
  finalEnt      Int     @default(10007, map: "DF__Credencia__final__361CF0BD")
  baCreatedTime BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_Credenciada_baCreatedTime")
  baGuid        String  @default(dbgenerated("newid()"), map: "DF_Credenciada_baGuid") @db.UniqueIdentifier
  RazaoSocial   String? @db.NVarChar(50)
}

model Credenciadora {
  idCredenciadora Int     @id(map: "pkeb9ea624180b025c828029c12cd")
  finalEnt        Int     @default(10029, map: "DF__Credencia__final__1F04813B")
  baCreatedTime   BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_Credenciadora_baCreatedTime")
  baGuid          String  @default(dbgenerated("newid()"), map: "DF_Credenciadora_baGuid") @db.UniqueIdentifier
  Nome            String? @db.NVarChar(50)
}

model CURRENTASSIGNEE {
  idWorkItem BigInt
  idUser     Int
  Deleted    Int?     @default(0, map: "CURRENTASSIGNEE_DF1") @db.TinyInt
  idTaskType Int?
  WFUSER     WFUSER   @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "CURRENTASSIGNEE_WFUSER_FK1")
  WORKITEM   WORKITEM @relation(fields: [idWorkItem], references: [idWorkItem], onDelete: Cascade, onUpdate: NoAction, map: "CURRENTASSIGNEE_WORKITEM_FK1")

  @@id([idWorkItem, idUser], map: "CURRENTASSIGNEE_PK")
  @@index([idWorkItem], map: "CURRENTASSIGNEE_IX1")
}

model CUSTOMJOBDATA {
  idJobData       Int       @id(map: "CUSTOMJOBDATA_PK") @default(autoincrement())
  jobNextRunTime  DateTime? @db.DateTime
  guidJob         String?   @db.UniqueIdentifier
  backgroundJobId String?   @db.VarChar(100)
}

model CUSTOMJOBLOG {
  idJobLog            Int      @id(map: "CUSTOMJOBLOG_PK") @default(autoincrement())
  jobExecutionDate    DateTime @db.DateTime
  jobExecutionResult  Boolean
  jobExecutionMessage String?  @db.VarChar(8000)
  guidJob             String?  @db.UniqueIdentifier
}

model CUSTOMJOBRUNNING {
  idJobRunning    Int       @id(map: "CUSTOMJOBRUNNING_PK") @default(autoincrement())
  jobNextRunTime  DateTime  @db.DateTime
  runningState    Int       @default(0, map: "CUSTOMJOBRUNNING_DF2") @db.TinyInt
  jobStartRunTime DateTime? @default(now(), map: "CUSTOMJOBRUNNING_DF1") @db.DateTime
  guidJob         String?   @db.UniqueIdentifier

  @@index([runningState], map: "CUSTOMJOBRUNNING_FK_IDX_1")
}

model DadosEndereco {
  idDadosEndereco BigInt  @id(map: "pk022462243c6bd1a6686d622a130")
  finalEnt        Int     @default(10016, map: "DF__DadosEnde__final__61074EC2")
  baCreatedTime   BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_DadosEndereco_baCreatedTime")
  baGuid          String  @default(dbgenerated("newid()"), map: "DF_DadosEndereco_baGuid") @db.UniqueIdentifier
  Complemento     String? @db.NVarChar(100)
  CEP             String? @db.NVarChar(50)
  Bairro          BigInt?
  Endereco        String? @db.NVarChar(50)
  Numero          Int?
}

model DadosPadrao {
  idDadosPadrao           BigInt    @id(map: "pkfa8d9d74f68aa71e032d175ad6e")
  finalEnt                Int       @default(10037, map: "DF__DadosPadr__final__49EEDF40")
  baCreatedTime           BigInt    @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_DadosPadrao_baCreatedTime")
  baGuid                  String    @default(dbgenerated("newid()"), map: "DF_DadosPadrao_baGuid") @db.UniqueIdentifier
  NumeroCaso              Int?
  CaseId                  Int?
  JustificativaAcaoTarefa String?   @db.NVarChar(50)
  AcaoTarefa              BigInt?
  Requerente              BigInt?
  NumeroProcesso          String?   @db.NVarChar(50)
  DataCriacao             DateTime? @db.DateTime
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model DropCreateFks {
  sSqlDrop   String?   @db.VarChar(2000)
  sSqlCreate String?   @db.VarChar(2000)
  gExecGuid  String?   @db.UniqueIdentifier
  dExecDate  DateTime? @db.DateTime

  @@ignore
}

model DWEVALUATIONTYPE {
  idEvaluationType  Int               @id(map: "DWEVALUATIONTYPE_PK") @db.TinyInt
  evTypeDisplayName String?           @db.NVarChar(50)
  DWUSERSEMAPHORE   DWUSERSEMAPHORE[]
}

model DWKPI {
  idKpi          Int            @id(map: "DWKPI_PK") @default(autoincrement())
  idUser         Int
  kpiDisplayName String         @db.NVarChar(50)
  WFUSER         WFUSER         @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "DWKPI_WFUSER_FK1")
  DWKPICONTEXT   DWKPICONTEXT[]

  @@index([idUser], map: "DWKPI_FK_IDX_1")
}

model DWKPICONTEXT {
  idKpiContext           Int     @id(map: "DWKPICONTEXT_PK") @default(autoincrement())
  idKpi                  Int
  idMeasureQualifier     Int
  kctDisplayName         String? @db.NVarChar(50)
  kctFilters             String? @db.Text
  kctTimeFilter          String? @db.NVarChar(100)
  kct_cdLevel            Int?    @db.TinyInt
  kct_cdOffset           Int?
  kctUsesCustomQualifier Boolean @default(false, map: "DWKPICONTEXT_DF1")
  DWKPI                  DWKPI   @relation(fields: [idKpi], references: [idKpi], onUpdate: NoAction, map: "DWKPICONTEXT_DWKPI_FK1")

  @@index([idKpi], map: "DWKPICONTEXT_FK_IDX_1")
}

model DWUSERSEMAPHORE {
  idUserSemaphore  Int              @id(map: "DWUSERSEMAPHORE_PK") @default(autoincrement())
  semName          String           @db.NVarChar(50)
  idReport         Int
  idMeasure        Int
  idUser           Int
  idEvaluationType Int              @db.TinyInt
  goalValue        Float
  evThres1         Float
  evThres2         Float
  evThres3         Float?
  evThres4         Float?
  requiredContext  String?          @db.Text
  semDisplayName   String?          @db.NVarChar(50)
  DWEVALUATIONTYPE DWEVALUATIONTYPE @relation(fields: [idEvaluationType], references: [idEvaluationType], onUpdate: NoAction, map: "DWUSERSEMAP_DWEVALUATIO_FK1")

  @@index([idEvaluationType], map: "DWUSERSEMAPHORE_FK_IDX_1")
  @@index([idMeasure], map: "DWUSERSEMAPHORE_FK_IDX_2")
  @@index([idReport], map: "DWUSERSEMAPHORE_FK_IDX_3")
}

model ENTITY {
  idEnt                              Int                       @id(map: "ENTITY_PK") @default(autoincrement())
  entName                            String                    @db.VarChar(50)
  entDisplayName                     String?                   @db.NVarChar(50)
  entType                            Int                       @db.TinyInt
  entSrc                             String                    @db.VarChar(26)
  entSrcType                         Int                       @db.TinyInt
  entSurrogateKey                    String?                   @db.NVarChar(28)
  entDisplayAttrib                   String?                   @db.NVarChar(26)
  guidEnt                            String                    @unique(map: "ENTITY_UKG") @default(dbgenerated("newid()"), map: "ENTITY_DFG") @db.UniqueIdentifier
  idParentEnt                        Int?
  AllowDelete                        Boolean                   @default(false, map: "ENTITY_DF1")
  entSrcCacheTimeOut                 Int?
  idSrcAssembly                      Int?
  entDescription                     String?                   @db.NVarChar(100)
  entAdministrable                   Boolean                   @default(false, map: "ENTITY_DF2")
  entSrcSystem                       String?                   @db.NVarChar(128)
  entContentType                     Int                       @db.TinyInt
  entExtSrc                          String?                   @db.NVarChar(128)
  entSrcGlobalTimeOut                Int?
  entLogged                          Int                       @default(0, map: "ENTITY_DF3") @db.TinyInt
  entReplicated                      Boolean                   @default(false, map: "ENTITY_DF4")
  dplyEnt                            Int                       @default(0, map: "ENTITY_DFY") @db.TinyInt
  entEKSrc                           String?                   @db.NVarChar(26)
  formsVersion                       Int?
  idAddForm                          String?                   @db.UniqueIdentifier
  idDisplayForm                      String?                   @db.UniqueIdentifier
  idEditForm                         String?                   @db.UniqueIdentifier
  pkName                             String?                   @db.NVarChar(30)
  hasIdentity                        Boolean?                  @default(false, map: "ENTITY_DF5")
  guidSystem                         String?                   @db.UniqueIdentifier
  extend                             Int?
  guidReplication                    String?                   @db.UniqueIdentifier
  guidSrcClass                       String?                   @db.UniqueIdentifier
  guidSrcProvider                    String?                   @db.UniqueIdentifier
  deleted                            Boolean                   @default(false, map: "DF__ENTITY__deleted__7B264821")
  APPLICATION                        APPLICATION[]
  ATTRIB_ATTRIB_idEntToENTITY        ATTRIB[]                  @relation("ATTRIB_idEntToENTITY")
  ATTRIB_ATTRIB_idEntRelatedToENTITY ATTRIB[]                  @relation("ATTRIB_idEntRelatedToENTITY")
  BAENVPARAMENTITYEXFLAGS            BAENVPARAMENTITYEXFLAGS[]
  BAENVPARAMVALUEENTITYEX            BAENVPARAMVALUEENTITYEX[]
  BASCOPEITEMDEF                     BASCOPEITEMDEF[]
  BAWFCLASS_ENTITY                   BAWFCLASS_ENTITY[]
  BIZLETTER                          BIZLETTER[]
  ENTITY                             ENTITY?                   @relation("ENTITYToENTITY", fields: [idParentEnt], references: [idEnt], onDelete: NoAction, onUpdate: NoAction, map: "ENTITY_ENTITY_FK1")
  other_ENTITY                       ENTITY[]                  @relation("ENTITYToENTITY")
  ENTITYBIZKEY                       ENTITYBIZKEY[]
  ENTITYEX                           ENTITYEX?
  ENTITYKEY                          ENTITYKEY[]
  ENTITYSCHEMA                       ENTITYSCHEMA[]
  FACT_FACT_idLeftEntityToENTITY     FACT[]                    @relation("FACT_idLeftEntityToENTITY")
  FACT_FACT_idRightEntityToENTITY    FACT[]                    @relation("FACT_idRightEntityToENTITY")
  FORMCLASS                          FORMCLASS[]
  FORMMD                             FORMMD[]
  USERCACHE                          USERCACHE[]
  USERFIELD                          USERFIELD[]

  @@index([idSrcAssembly], map: "ENTITY_FK_IDX_2")
  @@index([idParentEnt], map: "ENTITY_FK_IDX_3")
}

model ENTITYBIZKEY {
  idEntityBizKey   Int     @id(map: "ENTITYBIZKEY_PK") @default(autoincrement())
  idEnt            Int
  idAttrib         Int
  guidEntityBizKey String  @unique(map: "ENTITYBIZKEY_UKG") @default(dbgenerated("newid()"), map: "ENTITYBIZKEY_DFG") @db.UniqueIdentifier
  dplyEntityBizKey Int     @default(0, map: "ENTITYBIZKEY_DFY") @db.TinyInt
  deleted          Boolean @default(false, map: "DF__ENTITYBIZ__delet__50B0EB68")
  ATTRIB           ATTRIB  @relation(fields: [idAttrib], references: [idAttrib], onUpdate: NoAction, map: "ENTITYBIZKEY_ATTRIB_FK1")
  ENTITY           ENTITY  @relation(fields: [idEnt], references: [idEnt], onUpdate: NoAction, map: "ENTITYBIZKEY_ENTITY_FK1")

  @@unique([idEnt, idAttrib], map: "ENTITYBIZKEY_UK1")
}

model ENTITYEX {
  idEnt        Int     @unique(map: "ENTITYEX_UK1")
  entXML       String  @db.NVarChar(4000)
  guidEntityEx String  @unique(map: "ENTITYEX_UKG") @default(dbgenerated("newid()"), map: "ENTITYEX_DFG") @db.UniqueIdentifier
  dplyEntityEx Int     @default(0, map: "ENTITYEX_DFY") @db.TinyInt
  idEntityEx   Int     @id(map: "ENTITYEX_PK") @default(autoincrement())
  deleted      Boolean @default(false, map: "DF__ENTITYEX__delete__538D5813")
  ENTITY       ENTITY  @relation(fields: [idEnt], references: [idEnt], onUpdate: NoAction, map: "ENTITYEX_ENTITY_FK1")
}

model ENTITYKEY {
  idEntityKey   Int     @id(map: "ENTITYKEY_PK") @default(autoincrement())
  idEnt         Int
  guidEntityKey String  @unique(map: "ENTITYKEY_UKG") @default(dbgenerated("newid()"), map: "ENTITYKEY_DFG") @db.UniqueIdentifier
  idAttrib      Int
  dplyEntityKey Int     @default(0, map: "ENTITYKEY_DFY") @db.TinyInt
  deleted       Boolean @default(false, map: "DF__ENTITYKEY__delet__5669C4BE")
  ATTRIB        ATTRIB  @relation(fields: [idAttrib], references: [idAttrib], onUpdate: NoAction, map: "ENTITYKEY_ATTRIB_FK1")
  ENTITY        ENTITY  @relation(fields: [idEnt], references: [idEnt], onUpdate: NoAction, map: "ENTITYKEY_ENTITY_FK1")

  @@unique([idEnt, idAttrib], map: "ENTITYKEY_UK1")
}

model ENTITYLOG {
  idEntityLog    BigInt          @id(map: "ENTITYLOG_PK") @default(autoincrement())
  idEnt          Int
  idSurrogateKey BigInt
  idWorkItem     BigInt
  idUser         Int
  idEntLogOpType Int             @db.TinyInt
  elNewDisabled  Boolean?
  elEntryDate    DateTime?       @default(now(), map: "ENTITYLOG_DF1") @db.DateTime
  ATTRIBCHARLOG  ATTRIBCHARLOG[]
  ATTRIBLOG      ATTRIBLOG[]
  ENTLOGOPTYPE   ENTLOGOPTYPE    @relation(fields: [idEntLogOpType], references: [idEntLogOpType], onUpdate: NoAction, map: "ENTITYLOG_ENTLOGOPTYPE_FK1")
  WFUSER         WFUSER          @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "ENTITYLOG_WFUSER_FK1")

  @@index([idWorkItem, idUser], map: "ENTITYLOG_IX1")
}

model ENTITYSCHEMA {
  idEntitySchema    Int               @id(map: "ENTITYSCHEMA_PK") @default(autoincrement())
  idEnt             Int?
  entSchName        String            @db.NVarChar(26)
  entSchDescription String?           @db.NVarChar(100)
  entSchXml         Bytes?            @db.Image
  entSchDefault     Boolean?
  guidEntitySchema  String            @unique(map: "ENTITYSCHEMA_UKG") @default(dbgenerated("newid()"), map: "ENTITYSCHEMA_DFG") @db.UniqueIdentifier
  dplyEntitySchema  Int               @default(0, map: "ENTITYSCHEMA_DFY") @db.TinyInt
  deleted           Boolean           @default(false, map: "DF__ENTITYSCH__delet__5A3A55A2")
  ENTITY            ENTITY?           @relation(fields: [idEnt], references: [idEnt], onDelete: NoAction, onUpdate: NoAction, map: "ENTITYSCHEMA_ENTITY_FK1")
  ENTITYSCHEMAXSL   ENTITYSCHEMAXSL[]

  @@index([idEnt], map: "ENTITYSCHEMA_FK_IDX_1")
}

model ENTITYSCHEMAXSL {
  idEntitySchemaXsl   Int          @id(map: "ENTITYSCHEMAXSL_PK") @default(autoincrement())
  idEntitySchema      Int
  xslName             String       @db.NVarChar(26)
  xslDescription      String?      @db.NVarChar(100)
  xslFile             Bytes        @db.Image
  xslDirection        Int          @db.TinyInt
  guidEntitySchemaXsl String       @unique(map: "ENTITYSCHEMAXSL_UKG") @default(dbgenerated("newid()"), map: "ENTITYSCHEMAXSL_DFG") @db.UniqueIdentifier
  dplyEntitySchemaXsl Int          @default(0, map: "ENTITYSCHEMAXSL_DFY") @db.TinyInt
  deleted             Boolean      @default(false, map: "DF__ENTITYSCH__delet__5D16C24D")
  ENTITYSCHEMA        ENTITYSCHEMA @relation(fields: [idEntitySchema], references: [idEntitySchema], onUpdate: NoAction, map: "ENTITYSCHEMAXSL_ENTITYSCHE_FK1")

  @@index([idEntitySchema], map: "ENTITYSCHEMAXSL_FK_IDX_1")
}

model ENTLOGOPTYPE {
  idEntLogOpType   Int         @id(map: "ENTLOGOPTYPE_PK") @db.TinyInt
  EntLogOpTypeName String      @db.NVarChar(26)
  ENTITYLOG        ENTITYLOG[]
}

model ENVIRONMENTTYPE {
  idEnvType     Int             @id(map: "ENVIRONMENTTYPE_PK") @db.TinyInt
  envTypeName   String          @db.NVarChar(25)
  BAENVIRONMENT BAENVIRONMENT[]
  WORKFLOW      WORKFLOW[]
}

model EXCEPTIONTRANSITION {
  idExceptionTransition                     Int      @id(map: "EXCEPTIONTRANSITION_PK") @default(autoincrement())
  etName                                    String   @db.NVarChar(26)
  etDisplayName                             String?  @db.NVarChar(40)
  etDescription                             String?  @db.NVarChar(100)
  idTaskFrom                                Int
  idTaskTo                                  Int
  idWorkflow                                Int
  etDefaultOption                           Int?     @db.TinyInt
  guidExceptionTransition                   String   @unique(map: "EXCEPTIONTRANSITION_UKG") @default(dbgenerated("newid()"), map: "EXCEPTIONTRANSITION_DFG") @db.UniqueIdentifier
  dplyExceptionTransition                   Int      @default(0, map: "EXCEPTIONTRANSITION_DFY") @db.TinyInt
  TASK_EXCEPTIONTRANSITION_idTaskFromToTASK TASK     @relation("EXCEPTIONTRANSITION_idTaskFromToTASK", fields: [idTaskFrom], references: [idTask], onUpdate: NoAction, map: "EXCEPTIONTRANSITION_TASK_FK1")
  TASK_EXCEPTIONTRANSITION_idTaskToToTASK   TASK     @relation("EXCEPTIONTRANSITION_idTaskToToTASK", fields: [idTaskTo], references: [idTask], onUpdate: NoAction, map: "EXCEPTIONTRANSITION_TASK_FK2")
  WORKFLOW                                  WORKFLOW @relation(fields: [idWorkflow], references: [idWorkflow], onUpdate: NoAction, map: "EXCEPTIONTRANSITION_WORKFL_FK1")

  @@index([idTaskFrom], map: "EXCEPTIONTRANSITION_FK_IDX_1")
  @@index([idTaskTo], map: "EXCEPTIONTRANSITION_FK_IDX_2")
  @@index([idWorkflow], map: "EXCEPTIONTRANSITION_FK_IDX_3")
}

model FACT {
  idFact                            Int              @id(map: "FACT_PK") @default(autoincrement())
  factName                          String           @db.NVarChar(26)
  factDisplayName                   String           @db.NVarChar(40)
  idFactRelationType                Int              @db.TinyInt
  factSrc                           String?          @db.NVarChar(26)
  idLeftEntity                      Int
  idRightEntity                     Int
  guidFact                          String           @unique(map: "FACT_UKG") @default(dbgenerated("newid()"), map: "FACT_DFG") @db.UniqueIdentifier
  dplyFact                          Int              @default(0, map: "FACT_DFY") @db.TinyInt
  factLogged                        Boolean          @default(false, map: "FACT_DF1")
  bidirectional                     Boolean          @default(false, map: "FACT_DF2")
  idParentRelation                  Int?
  factDisplayOrder                  Int?
  isVisible                         Boolean          @default(false, map: "DF__FACT__isVisible__09746778")
  automapped                        Boolean          @default(true, map: "DF__FACT__automapped__0A688BB1")
  deleted                           Boolean          @default(false, map: "DF__FACT__deleted__0B5CAFEA")
  ENTITY_FACT_idLeftEntityToENTITY  ENTITY           @relation("FACT_idLeftEntityToENTITY", fields: [idLeftEntity], references: [idEnt], onUpdate: NoAction, map: "FACT_ENTITY_FK1")
  ENTITY_FACT_idRightEntityToENTITY ENTITY           @relation("FACT_idRightEntityToENTITY", fields: [idRightEntity], references: [idEnt], onUpdate: NoAction, map: "FACT_ENTITY_FK2")
  FACT                              FACT?            @relation("FACTToFACT", fields: [idParentRelation], references: [idFact], onDelete: NoAction, onUpdate: NoAction, map: "FACT_FACT_FK1")
  other_FACT                        FACT[]           @relation("FACTToFACT")
  FACTRELATIONTYPE                  FACTRELATIONTYPE @relation(fields: [idFactRelationType], references: [idFactRelationType], onUpdate: NoAction, map: "FACT_FACTRELATIONTYPE_FK1")
  RENDER                            RENDER[]
  TASK                              TASK[]

  @@index([idRightEntity], map: "FACT_FK_IDX_1")
  @@index([idFactRelationType], map: "FACT_FK_IDX_2")
  @@index([idParentRelation], map: "FACT_FK_IDX_3")
}

model FACTLOG {
  idFactLog       BigInt    @id(map: "FACTLOG_PK") @default(autoincrement())
  idFact          Int
  idLeftEntityKey Int
  idSurrogateKey  BigInt
  idUser          Int
  idFactLogOpType Int       @db.TinyInt
  flEntryDate     DateTime? @default(now(), map: "FACTLOG_DF1") @db.DateTime
}

model FACTLOGOPTYPE {
  idFactLogOpType   Int    @id(map: "FACTLOGOPTYPE_PK") @db.TinyInt
  factLogOpTypeName String @db.NVarChar(26)
}

model FACTRELATIONTYPE {
  idFactRelationType   Int    @id(map: "FACTRELATIONTYPE_PK") @db.TinyInt
  FactRelationTypeName String @db.NVarChar(26)
  FACT                 FACT[]
}

model FORM {
  idForm                            Int         @id(map: "FORM_PK") @default(autoincrement())
  frmDisplayName                    String      @db.NVarChar(40)
  frmDescription                    String?     @db.NVarChar(100)
  frmHelpText                       String?     @db.NVarChar(100)
  frmJS                             String?     @db.VarChar(7600)
  guidForm                          String      @unique(map: "FORM_UKG") @default(dbgenerated("newid()"), map: "FORM_DFG") @db.UniqueIdentifier
  IsWizard                          Boolean?    @default(false, map: "FORM_DF1")
  frmPromptUsrConf                  Boolean?
  frmTimestamp                      DateTime?   @db.DateTime
  frmVersion                        String?     @db.NVarChar(16)
  idFormClass                       Int
  idFormParentVersion               Int?
  dplyForm                          Int         @default(0, map: "FORM_DFY") @db.TinyInt
  IsAdministrable                   Boolean     @default(false, map: "FORM_DF2")
  IsReusable                        Boolean     @default(true, map: "FORM_DF3")
  qfSearchAllUsers                  Boolean     @default(false, map: "FORM_DF4")
  isQueryForm                       Boolean     @default(false, map: "FORM_DF5")
  idScopeDef                        Int?
  guidScopeDef                      String?     @db.UniqueIdentifier
  FORMCLASS                         FORMCLASS   @relation(fields: [idFormClass], references: [idFormClass], onUpdate: NoAction, map: "FORM_FORMCLASS_FK1")
  FORM                              FORM?       @relation("FORMToFORM", fields: [idFormParentVersion], references: [idForm], onDelete: NoAction, onUpdate: NoAction, map: "FRMPARENT_FORM_FK1")
  other_FORM                        FORM[]      @relation("FORMToFORM")
  FORMMD                            FORMMD[]
  QUERYFORM                         QUERYFORM[]
  RENDER_RENDER_idDisplayFormToFORM RENDER[]    @relation("RENDER_idDisplayFormToFORM")
  RENDER_RENDER_idFormToFORM        RENDER[]    @relation("RENDER_idFormToFORM")

  @@unique([idFormClass, frmVersion], map: "FORM_UK1")
  @@index([idScopeDef], map: "FORM_FK_IDX_1")
  @@index([idFormParentVersion], map: "FORM_FK_IDX_2")
}

model FORMCLASS {
  idFormClass   Int       @id(map: "FORMCLASS_PK") @default(autoincrement())
  frmClsName    String    @db.NVarChar(26)
  guidFormClass String    @unique(map: "FORMCLASS_UKG") @default(dbgenerated("newid()"), map: "FORMCLASS_DFG") @db.UniqueIdentifier
  idEnt         Int?
  frmClsType    Int?      @db.TinyInt
  idScopeDef    Int?
  isScopeForm   Boolean   @default(false, map: "FORMCLASS_DF1")
  dplyFormClass Int       @default(0, map: "FORMCLASS_DFY") @db.TinyInt
  guidScopeDef  String?   @db.UniqueIdentifier
  FORM          FORM[]
  ENTITY        ENTITY?   @relation(fields: [idEnt], references: [idEnt], onDelete: NoAction, onUpdate: NoAction, map: "FORMCLASS_ENTITY_FK1")
  FORMTYPE      FORMTYPE? @relation(fields: [frmClsType], references: [idFormType], onDelete: NoAction, onUpdate: NoAction, map: "FORMCLASS_FORMTYPE_FK1")

  @@index([idScopeDef], map: "FORMCLASS_FK_IDX_1")
  @@index([idEnt], map: "FORMCLASS_FK_IDX_2")
  @@index([frmClsType], map: "FORMCLASS_FK_IDX_3")
}

model FORMMD {
  idFormMD     Int         @id(map: "FORMMD_PK")
  idForm       Int?
  idEnt        Int?
  formXML      String?     @db.Text
  formControl  Bytes?      @db.Image
  idLgLanguage Int?
  guidEntity   String?     @db.UniqueIdentifier
  ENTITY       ENTITY?     @relation(fields: [idEnt], references: [idEnt], onDelete: NoAction, onUpdate: NoAction, map: "FK_FORMMD_ENT")
  FORM         FORM?       @relation(fields: [idForm], references: [idForm], onDelete: NoAction, onUpdate: NoAction, map: "FK_FormMD_FORM")
  LGLANGUAGE   LGLANGUAGE? @relation(fields: [idLgLanguage], references: [idLgLanguage], onDelete: NoAction, onUpdate: NoAction, map: "FORMMD_LGLANGUAGE_FK1")

  @@index([idLgLanguage], map: "FORMMD_FK_IDX_1")
  @@index([idEnt], map: "IX_FormMD_idEnt")
  @@index([idForm], map: "IX_FormMD_idForm")
}

model FORMTYPE {
  idFormType   Int         @id(map: "FORMTYPE_PK") @db.TinyInt
  formTypeName String      @db.NVarChar(25)
  FORMCLASS    FORMCLASS[]
}

model FUNCTIONALAREA {
  idFunctionalArea       Int                      @id(map: "FUNCTIONALAREA_PK") @default(autoincrement())
  faName                 String?                  @db.NVarChar(26)
  faDisplayName          String?                  @db.NVarChar(40)
  faDescription          String?                  @db.NVarChar(4000)
  guidFunctionalArea     String                   @unique(map: "FUNCTIONALAREA_UKG") @default(dbgenerated("newid()"), map: "FUNCTIONALAREA_DFG") @db.UniqueIdentifier
  DiagramYPos            Int?
  dplyFunctionalArea     Int                      @default(0, map: "FUNCTIONALAREA_DFY") @db.TinyInt
  idParentFunctionalArea Int?
  deleted                Boolean                  @default(false, map: "DF__FUNCTIONA__delet__6C5905DD")
  FUNCTIONALAREA         FUNCTIONALAREA?          @relation("FUNCTIONALAREAToFUNCTIONALAREA", fields: [idParentFunctionalArea], references: [idFunctionalArea], onDelete: NoAction, onUpdate: NoAction, map: "FUNCTIONALAREA_FUNCTIONALA_FK1")
  other_FUNCTIONALAREA   FUNCTIONALAREA[]         @relation("FUNCTIONALAREAToFUNCTIONALAREA")
  FUNCTIONALAREAPOSITION FUNCTIONALAREAPOSITION[]
  TASK                   TASK[]

  @@index([idParentFunctionalArea], map: "FUNCTIONALAREA_FK_IDX_1")
}

model FUNCTIONALAREAPOSITION {
  idFunctionalAreaPosition   Int            @id(map: "FUNCTIONALAREAPOSITION_PK") @default(autoincrement())
  idFunctionalArea           Int
  idWorkflow                 Int
  DiagramYPos                Int
  guidFunctionalAreaPosition String         @unique(map: "FUNCTIONALAREAPOSITION_UKG") @default(dbgenerated("newid()"), map: "FUNCTIONALAREAPOSITION_DFG") @db.UniqueIdentifier
  dplyFunctionalAreaPosition Int            @default(0, map: "FUNCTIONALAREAPOSITION_DFY") @db.TinyInt
  deleted                    Boolean        @default(false, map: "DF__FUNCTIONA__delet__6F357288")
  FUNCTIONALAREA             FUNCTIONALAREA @relation(fields: [idFunctionalArea], references: [idFunctionalArea], onUpdate: NoAction, map: "FUNCTIONALAREAPOSITION_FUN_FK1")
  WORKFLOW                   WORKFLOW       @relation(fields: [idWorkflow], references: [idWorkflow], onUpdate: NoAction, map: "FUNCTIONALAREAPOSITION_WOR_FK1")

  @@unique([idWorkflow, idFunctionalArea], map: "FUNCTIONALAREAPOSITION_UK1")
}

model GRCOUNTER {
  idCounter          Int           @id(map: "GRCOUNTER_PK") @default(autoincrement())
  idUser             Int
  counterName        String        @db.NVarChar(50)
  counterDisplayName String        @db.NVarChar(50)
  counterDescription String        @db.NVarChar(200)
  idTask             Int
  TASK               TASK          @relation(fields: [idTask], references: [idTask], onUpdate: NoAction, map: "GRCOUNTER_TASK_FK1")
  WFUSER             WFUSER        @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "GRCOUNTER_WFUSER_FK1")
  GRUSERQUERY        GRUSERQUERY[]

  @@index([idTask], map: "GRCOUNTER_FK_IDX_1")
  @@index([idUser], map: "GRCOUNTER_IX1")
}

model GRCUSTOMPHASE {
  idCustomPhase                       Int               @id(map: "GRCUSTOMPHASE_PK") @default(autoincrement())
  idUser                              Int
  cphName                             String            @db.NVarChar(50)
  cphDescription                      String            @db.NVarChar(200)
  idTaskFrom                          Int
  idTaskTo                            Int
  cphDisplayName                      String?           @db.NVarChar(50)
  cphSLA                              Int               @default(0, map: "GRCUSTOMPHASE_DF1")
  TASK_GRCUSTOMPHASE_idTaskFromToTASK TASK              @relation("GRCUSTOMPHASE_idTaskFromToTASK", fields: [idTaskFrom], references: [idTask], onUpdate: NoAction, map: "GRCUSTOMPHASE_TASK_FK1")
  TASK_GRCUSTOMPHASE_idTaskToToTASK   TASK              @relation("GRCUSTOMPHASE_idTaskToToTASK", fields: [idTaskTo], references: [idTask], onUpdate: NoAction, map: "GRCUSTOMPHASE_TASK_FK2")
  WFUSER                              WFUSER            @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "GRCUSTOMPHASE_WFUSER_FK1")
  GRPHASEINSTANCE                     GRPHASEINSTANCE[]
  GRUSERQUERY                         GRUSERQUERY[]

  @@index([idTaskFrom], map: "GRCUSTOMPHASE_FK_IDX_1")
  @@index([idTaskTo], map: "GRCUSTOMPHASE_FK_IDX_2")
  @@index([idUser], map: "GRCUSTOMPHASE_FK_IDX_3")
}

model GRDATE_OFFSET_TYPE {
  idDateOffsetType                                             Int           @id(map: "GRDATE_OFFSET_TYPE_PK")
  rtName                                                       String        @db.NVarChar(16)
  GRUSERQUERY_GRUSERQUERY_idFromOffsetTypeToGRDATE_OFFSET_TYPE GRUSERQUERY[] @relation("GRUSERQUERY_idFromOffsetTypeToGRDATE_OFFSET_TYPE")
  GRUSERQUERY_GRUSERQUERY_idToOffsetTypeToGRDATE_OFFSET_TYPE   GRUSERQUERY[] @relation("GRUSERQUERY_idToOffsetTypeToGRDATE_OFFSET_TYPE")
}

model GRPHASEINSTANCE {
  idPhaseInstance Int           @id(map: "GRPHASEINSTANCE_PK") @default(autoincrement())
  idCustomPhase   Int
  idCase          Int
  dateFrom        DateTime      @db.DateTime
  dateTo          DateTime      @db.DateTime
  durationMinutes Int?
  GRCUSTOMPHASE   GRCUSTOMPHASE @relation(fields: [idCustomPhase], references: [idCustomPhase], onUpdate: NoAction, map: "GRPHINSTANCE_CUSTPHASE_FK1")

  @@index([idCustomPhase], map: "GRPHASEINSTANCE_FK_IDX_1")
}

model GRREPORTSET {
  idReportSet Int    @id(map: "GRREPORTSET_PK")
  rsName      String @db.NVarChar(50)
}

model GRUSERDIMENSION {
  idUserDimension Int     @id(map: "GRUSERDIMENSION_PK") @default(autoincrement())
  idUser          Int
  idWfClass       Int
  dimName         String  @db.NVarChar(50)
  dimDisplayName  String  @db.NVarChar(50)
  dimDescription  String  @db.NVarChar(100)
  srcEntityPath   String  @db.NVarChar(512)
  WFCLASS         WFCLASS @relation(fields: [idWfClass], references: [idWfClass], onUpdate: NoAction, map: "GRUSERDIMENSION_WFCLASS_FK1")
  WFUSER          WFUSER  @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "GRUSERDIMENSION_WFUSER_FK1")

  @@index([idWfClass], map: "GRUSERDIMENSION_FK_IDX_1")
  @@index([idUser], map: "GRUSERDIMENSION_FK_IDX_2")
}

model GRUSERQUERY {
  idQuery                                                             Int                 @id(map: "GRUSERQUERY_PK") @default(autoincrement())
  idUser                                                              Int
  qryName                                                             String              @db.NVarChar(50)
  qryDescription                                                      String              @db.NVarChar(200)
  idReportSet                                                         Int
  idWorkflow                                                          Int?
  idWfClass                                                           Int?
  idFromOffsetType                                                    Int?
  fromOffsetLength                                                    Int?
  idToOffsetType                                                      Int?
  toOffsetLength                                                      Int?
  dimensionFilters                                                    String?             @db.Text
  idStopwatch                                                         Int?
  idCounter                                                           Int?
  idTask                                                              Int?
  GRCOUNTER                                                           GRCOUNTER?          @relation(fields: [idCounter], references: [idCounter], onDelete: NoAction, onUpdate: NoAction, map: "GRQUERY_GRCOUNTER_FK1")
  GRCUSTOMPHASE                                                       GRCUSTOMPHASE?      @relation(fields: [idStopwatch], references: [idCustomPhase], onDelete: NoAction, onUpdate: NoAction, map: "GRQUERY_GRCUSTOMPHASE_FK1")
  GRDATE_OFFSET_TYPE_GRUSERQUERY_idFromOffsetTypeToGRDATE_OFFSET_TYPE GRDATE_OFFSET_TYPE? @relation("GRUSERQUERY_idFromOffsetTypeToGRDATE_OFFSET_TYPE", fields: [idFromOffsetType], references: [idDateOffsetType], onDelete: NoAction, onUpdate: NoAction, map: "GRQUERY_GRDATEOFSTYPE_FK1")
  GRDATE_OFFSET_TYPE_GRUSERQUERY_idToOffsetTypeToGRDATE_OFFSET_TYPE   GRDATE_OFFSET_TYPE? @relation("GRUSERQUERY_idToOffsetTypeToGRDATE_OFFSET_TYPE", fields: [idToOffsetType], references: [idDateOffsetType], onDelete: NoAction, onUpdate: NoAction, map: "GRQUERY_GRDATEOFSTYPE_FK2")
  TASK                                                                TASK?               @relation(fields: [idTask], references: [idTask], onDelete: NoAction, onUpdate: NoAction, map: "GRQUERY_TASK_FK1")
  WFUSER                                                              WFUSER              @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "GRQUERY_USER_FK1")
  WFCLASS                                                             WFCLASS?            @relation(fields: [idWfClass], references: [idWfClass], onDelete: NoAction, onUpdate: NoAction, map: "GRQUERY_WFCLASS_FK1")
  WORKFLOW                                                            WORKFLOW?           @relation(fields: [idWorkflow], references: [idWorkflow], onDelete: NoAction, onUpdate: NoAction, map: "GRQUERY_WORKFLOW_FK1")

  @@index([idCounter], map: "GRUSERQUERY_FK_IDX_1")
  @@index([idStopwatch], map: "GRUSERQUERY_FK_IDX_2")
  @@index([idFromOffsetType], map: "GRUSERQUERY_FK_IDX_3")
  @@index([idToOffsetType], map: "GRUSERQUERY_FK_IDX_4")
  @@index([idTask], map: "GRUSERQUERY_FK_IDX_5")
  @@index([idUser], map: "GRUSERQUERY_FK_IDX_6")
  @@index([idWfClass], map: "GRUSERQUERY_FK_IDX_7")
  @@index([idWorkflow], map: "GRUSERQUERY_FK_IDX_8")
}

model Historico {
  idHistorico   BigInt    @id(map: "pk7bd5c264922848e71df36b4a714")
  finalEnt      Int       @default(10011, map: "DF__Historico__final__492FC531")
  baCreatedTime BigInt    @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_Historico_baCreatedTime")
  baGuid        String    @default(dbgenerated("newid()"), map: "DF_Historico_baGuid") @db.UniqueIdentifier
  DadosPadrao   BigInt?
  Responsavel   String?   @db.NVarChar(100)
  DataCriacao   DateTime? @db.DateTime
  Descricao     String?   @db.NVarChar(200)
  SCEdital      BigInt?

  @@index([DadosPadrao], map: "Historico_F1")
  @@index([SCEdital], map: "Historico_F2")
}

model HOLIDAYSCHEMA {
  idHolidaySchema   Int     @id(map: "HOLIDAYSCHEMA_PK") @default(autoincrement())
  HolidaySchemaName String? @db.NVarChar(26)
  guidHolidaySchema String  @unique(map: "HOLIDAYSCHEMA_UKG") @default(dbgenerated("newid()"), map: "HOLIDAYSCHEMA_DFG") @db.UniqueIdentifier
  dplyHolidaySchema Int     @default(0, map: "HOLIDAYSCHEMA_DFY") @db.TinyInt
  deleted           Boolean @default(false, map: "DF__HOLIDAYSC__delet__1E6F845E")
  ORG               ORG[]
}

model JOB {
  idJob                 Int           @id(map: "JOB_PK") @default(autoincrement())
  jobName               String        @db.NVarChar(50)
  jobDescription        String?       @db.NVarChar(100)
  jobType               Int           @db.TinyInt
  jobCreationDate       DateTime      @db.DateTime
  jobEnabled            Boolean
  idCreatorUser         Int?
  jobNextRunTime        DateTime?     @db.DateTime
  idCase                Int?
  idWorkItem            BigInt?
  DELETED               Boolean?      @default(false, map: "JOB_DF1")
  jobProcessing         Int           @default(0, map: "DF__JOB__jobProcessi__7211DF33")
  jobLastProcessingTime DateTime?     @db.DateTime
  jbPriority            Int?          @db.TinyInt
  backgroundJobId       String?       @db.VarChar(100)
  JOBTYPE               JOBTYPE       @relation(fields: [jobType], references: [idJobType], onUpdate: NoAction, map: "JOB_JOBTYPE_FK1")
  WFUSER                WFUSER?       @relation(fields: [idCreatorUser], references: [idUser], onDelete: NoAction, onUpdate: NoAction, map: "JOB_WFUSER_FK1")
  JOBLOG                JOBLOG[]
  JOBRUNNING            JOBRUNNING?
  JOBSCHEDULE           JOBSCHEDULE[]
  JOBSTEP               JOBSTEP[]

  @@index([idCase], map: "JOB_IDX_CASE")
  @@index([idWorkItem], map: "JOB_IX1")
  @@index([idCase], map: "JOB_IX2")
  @@index([jobName], map: "JOB_IX3")
  @@index([jbPriority(sort: Desc), idJob], map: "JOB_IX4")
}

model JOBLOG {
  idJobLog            Int           @id(map: "JOBLOG_PK") @default(autoincrement())
  idJob               Int
  jobExecutionDate    DateTime      @db.DateTime
  jobExecutionResult  Boolean
  jobExecutionMessage String?       @db.NVarChar(4000)
  ALARMJOBLOG         ALARMJOBLOG[]
  JOB                 JOB           @relation(fields: [idJob], references: [idJob], onUpdate: NoAction, map: "JOBLOG_JOB_FK1")

  @@index([idJob], map: "JOBLOG_IX1")
}

model JOBRUNNING {
  idJobRunning    Int       @id(map: "JOBRUNNING_PK") @default(autoincrement())
  idJob           Int       @unique(map: "JOBRUNNING_UK1")
  jobNextRunTime  DateTime  @db.DateTime
  runningState    Int       @default(0, map: "JOBRUNNING_DF2") @db.TinyInt
  jobStartRunTime DateTime? @default(now(), map: "JOBRUNNING_DF1") @db.DateTime
  JOB             JOB       @relation(fields: [idJob], references: [idJob], onUpdate: NoAction, map: "JOBRUNNING_JOB_FK1")
}

model JOBSCHEDULE {
  idJobSchedule       Int              @id(map: "JOBSCHEDULE_PK") @default(autoincrement())
  idJob               Int
  schName             String           @db.NVarChar(26)
  schRecurring        Boolean
  schOccurs           Int?
  schStartDate        DateTime         @db.DateTime
  schEndDate          DateTime?        @db.DateTime
  idSchType           Int?
  schTypeValue        Int?
  schWeeklyMask       String?          @db.Char(7)
  schMonthlyFrequency Int?             @db.TinyInt
  idMonthlyWeekday    Int?             @db.TinyInt
  idJobSchFrequency   Int?             @db.TinyInt
  schFrequencyTime    Int?
  JOB                 JOB              @relation(fields: [idJob], references: [idJob], onUpdate: NoAction, map: "JOBSCHEDULE_JOB_FK1")
  JOBSCHFREQUENCY     JOBSCHFREQUENCY? @relation(fields: [idJobSchFrequency], references: [idJobSchFrequency], onDelete: NoAction, onUpdate: NoAction, map: "JOBSCHEDULE_JOBSCHFREQUENC_FK1")
  SCHTYPE             SCHTYPE?         @relation(fields: [idSchType], references: [idSchType], onDelete: NoAction, onUpdate: NoAction, map: "JOBSCHEDULE_SCHTYPE_FK1")
  WEEKDAY             WEEKDAY?         @relation(fields: [idMonthlyWeekday], references: [idWeekDay], onDelete: NoAction, onUpdate: NoAction, map: "JOBSCHEDULE_WEEKDAY_FK1")

  @@index([idJob], map: "IX_JOBSCHEDULEIDJOB")
}

model JOBSCHFREQUENCY {
  idJobSchFrequency Int           @id(map: "JOBSCHFREQUENCY_PK") @db.TinyInt
  jsfName           String        @db.NVarChar(26)
  JOBSCHEDULE       JOBSCHEDULE[]
}

model JOBSTEP {
  idJobStep                                  Int       @id(map: "JOBSTEP_PK") @default(autoincrement())
  idJob                                      Int
  jsOrder                                    Int       @db.TinyInt
  jsName                                     String    @db.NVarChar(26)
  jsDescription                              String?   @db.NVarChar(100)
  jsCode                                     String?   @db.NVarChar(2000)
  idRunAsUser                                Int?
  OnStepSuccess                              Int       @db.TinyInt
  OnStepFailure                              Int       @db.TinyInt
  JOB                                        JOB       @relation(fields: [idJob], references: [idJob], onUpdate: NoAction, map: "JOBSTEP_JOB_FK1")
  ONENDSTEP_JOBSTEP_OnStepFailureToONENDSTEP ONENDSTEP @relation("JOBSTEP_OnStepFailureToONENDSTEP", fields: [OnStepFailure], references: [idOnEndStep], onUpdate: NoAction, map: "JOBSTEP_ONENDSTEP_FK1")
  ONENDSTEP_JOBSTEP_OnStepSuccessToONENDSTEP ONENDSTEP @relation("JOBSTEP_OnStepSuccessToONENDSTEP", fields: [OnStepSuccess], references: [idOnEndStep], onUpdate: NoAction, map: "JOBSTEP_ONENDSTEP_FK2")

  @@index([idJob], map: "IX_JOBSTEPIDJOB")
}

model JOBTYPE {
  idJobType      Int     @id(map: "JOBTYPE_PK") @db.TinyInt
  jobTypeName    String  @db.NVarChar(26)
  jobTypeEnabled Boolean @default(true, map: "JOBTYPE_DF1")
  JOB            JOB[]
}

model LGLANGUAGE {
  idLgLanguage       Int             @id(map: "LGLANGUAGE_PK") @default(autoincrement())
  cultureName        String          @db.NVarChar(10)
  language           String          @db.NVarChar(50)
  country            String          @db.NVarChar(50)
  state              Boolean
  cultureDisplayName String          @db.NVarChar(100)
  guidLGLanguage     String          @unique(map: "LGLANGUAGE_UKG") @default(dbgenerated("newid()"), map: "LGLANGUAGE_DFG") @db.UniqueIdentifier
  dplyLGLanguage     Int             @default(0, map: "LGLANGUAGE_DFY") @db.TinyInt
  finalEnt           Int             @default(11, map: "LGLANGUAGEDEF")
  BARENDERCACHE      BARENDERCACHE[]
  BARENDERDATA       BARENDERDATA[]
  FORMMD             FORMMD[]
  LGMDDATA           LGMDDATA[]
  WFUSER             WFUSER[]
}

model LGMDDATA {
  idLgMdData     Int        @id(map: "LGMDDATA_PK") @default(autoincrement())
  idLgMetadata   Int
  idLgLanguage   Int
  idSurrogateKey Int
  resValue       String     @db.NVarChar(255)
  guidLgMdData   String     @unique(map: "LGMDDATA_UKG") @default(dbgenerated("newid()"), map: "LGMDDATA_DFG") @db.UniqueIdentifier
  dplyLgMdData   Int        @default(0, map: "LGMDDATA_DFY") @db.TinyInt
  LGLANGUAGE     LGLANGUAGE @relation(fields: [idLgLanguage], references: [idLgLanguage], onUpdate: NoAction, map: "LGMDDATA_LGLANGUAGE_FK1")
  LGMETADATA     LGMETADATA @relation(fields: [idLgMetadata], references: [idLgMetadata], onUpdate: NoAction, map: "LGMDDATA_LGMETADATA_FK1")

  @@unique([idLgMetadata, idLgLanguage, idSurrogateKey], map: "LGMDDATA_UK1")
}

model LGMETADATA {
  idLgMetadata  Int        @id(map: "LGMETADATA_PK")
  fieldName     String     @db.NVarChar(50)
  idBizagiTable Int
  nameMetadata  String     @db.NVarChar(50)
  LGMDDATA      LGMDDATA[]

  @@index([idBizagiTable], map: "LGMETADATA_FK_IDX_1")
}

model LOCATION {
  idLocation          Int                @id(map: "LOCATION_PK") @default(autoincrement())
  locName             String             @db.NVarChar(26)
  idParentLocation    Int?
  guidLocation        String             @unique(map: "LOCATION_UKG") @default(dbgenerated("newid()"), map: "LOCATION_DFG") @db.UniqueIdentifier
  locDisplayName      String?            @db.NVarChar(40)
  locDescription      String?            @db.NVarChar(100)
  costLocation        Decimal?           @db.Decimal(11, 2)
  ancestorPath        String?            @db.VarChar(150)
  dplyLocation        Int                @default(0, map: "LOCATION_DFY") @db.TinyInt
  idWorkingTimeSchema Int?
  idOrg               Int
  idTimeZone          Int?
  finalEnt            Int                @default(2, map: "LOCATIONDEF")
  ALARMRECIPIENT      ALARMRECIPIENT[]
  BATIMEZONE          BATIMEZONE?        @relation(fields: [idTimeZone], references: [idBATimeZone], onDelete: NoAction, onUpdate: NoAction, map: "LOCATION_BATIMEZONE_FK1")
  LOCATION            LOCATION?          @relation("LOCATIONToLOCATION", fields: [idParentLocation], references: [idLocation], onDelete: NoAction, onUpdate: NoAction, map: "LOCATION_LOCATION_FK1")
  other_LOCATION      LOCATION[]         @relation("LOCATIONToLOCATION")
  ORG                 ORG                @relation(fields: [idOrg], references: [idOrg], onUpdate: NoAction, map: "LOCATION_ORG_FK1")
  WORKINGTIMESCHEMA   WORKINGTIMESCHEMA? @relation(fields: [idWorkingTimeSchema], references: [idWorkingTimeSchema], onDelete: NoAction, onUpdate: NoAction, map: "LOCATION_WORKINGTIMESCHEMA_FK1")
  WFUSER              WFUSER[]

  @@unique([idOrg, idParentLocation, locName], map: "LOCATION_UK1")
  @@unique([idOrg, idParentLocation, locDisplayName], map: "LOCATION_UK2")
  @@index([idTimeZone], map: "LOCATION_FK_IDX_1")
  @@index([idWorkingTimeSchema], map: "LOCATION_FK_IDX_2")
}

model MULTIINSTANCEEXITMODE {
  idMultiInstanceExitMode Int     @id(map: "MULTIINSTANCEEXITMODE_PK")
  miEmName                String  @db.NVarChar(26)
  deleted                 Boolean @default(false, map: "DF__MULTIINST__delet__318258D2")
  TASK                    TASK[]
}

model ONENDSTEP {
  idOnEndStep                              Int       @id(map: "ONENDSTEP_PK") @db.TinyInt
  oesName                                  String    @db.NVarChar(26)
  JOBSTEP_JOBSTEP_OnStepFailureToONENDSTEP JOBSTEP[] @relation("JOBSTEP_OnStepFailureToONENDSTEP")
  JOBSTEP_JOBSTEP_OnStepSuccessToONENDSTEP JOBSTEP[] @relation("JOBSTEP_OnStepSuccessToONENDSTEP")
}

model ORG {
  idOrg                Int                    @id(map: "ORG_PK") @default(autoincrement())
  orgName              String                 @unique(map: "ORG_UK1") @db.NVarChar(26)
  orgCreationDate      DateTime               @db.DateTime
  guidOrganization     String                 @unique(map: "ORG_UKG") @default(dbgenerated("newid()"), map: "ORG_DFG") @db.UniqueIdentifier
  idHolidaySchema      Int?
  idWorkingTimeSchema  Int?
  dplyOrganization     Int                    @default(0, map: "ORG_DFY") @db.TinyInt
  idTimeZone           Int?
  finalEnt             Int                    @default(9, map: "ORGDEF")
  APPLICATION          APPLICATION[]
  BAUSERDEFAULTWFCLASS BAUSERDEFAULTWFCLASS[]
  LOCATION             LOCATION[]
  BATIMEZONE           BATIMEZONE?            @relation(fields: [idTimeZone], references: [idBATimeZone], onDelete: NoAction, onUpdate: NoAction, map: "ORG_BATIMEZONE_FK1")
  HOLIDAYSCHEMA        HOLIDAYSCHEMA?         @relation(fields: [idHolidaySchema], references: [idHolidaySchema], onDelete: NoAction, onUpdate: NoAction, map: "ORG_HOLIDAYSCHEMA_FK1")
  WORKINGTIMESCHEMA    WORKINGTIMESCHEMA?     @relation(fields: [idWorkingTimeSchema], references: [idWorkingTimeSchema], onDelete: NoAction, onUpdate: NoAction, map: "ORG_WORKINGTIMESCHEMA_FK1")
  ORGPOSITION          ORGPOSITION[]
  USERORG              USERORG[]
  WFCASE               WFCASE[]

  @@index([idTimeZone], map: "ORG_FK_IDX_1")
  @@index([idHolidaySchema], map: "ORG_FK_IDX_2")
  @@index([idWorkingTimeSchema], map: "ORG_FK_IDX_3")
}

model ORGPOSITION {
  idPosition        Int              @id(map: "ORGPOSITION_PK") @default(autoincrement())
  posName           String?          @db.NVarChar(26)
  idParentPosition  Int?
  guidPosition      String           @unique(map: "ORGPOSITION_UKG") @default(dbgenerated("newid()"), map: "ORGPOSITION_DFG") @db.UniqueIdentifier
  posDisplayName    String?          @db.NVarChar(40)
  posDescription    String?          @db.NVarChar(100)
  costPosition      Decimal?         @db.Decimal(11, 2)
  ancestorPath      String?          @db.VarChar(150)
  dplyPosition      Int              @default(0, map: "ORGPOSITION_DFY") @db.TinyInt
  idOrg             Int
  finalEnt          Int              @default(6, map: "ORGPOSITIONDEF")
  ALARMRECIPIENT    ALARMRECIPIENT[]
  ORG               ORG              @relation(fields: [idOrg], references: [idOrg], onUpdate: NoAction, map: "ORGPOSITION_ORG_FK1")
  ORGPOSITION       ORGPOSITION?     @relation("ORGPOSITIONToORGPOSITION", fields: [idParentPosition], references: [idPosition], onDelete: NoAction, onUpdate: NoAction, map: "ORGPOSITION_ORGPOSITION_FK1")
  other_ORGPOSITION ORGPOSITION[]    @relation("ORGPOSITIONToORGPOSITION")
  USERPOSITION      USERPOSITION[]

  @@unique([idOrg, idParentPosition, posName], map: "ORGPOSITION_UK1")
  @@unique([idOrg, idParentPosition, posDisplayName], map: "ORGPOSITION_UK2")
}

model PHASE {
  idPhase          Int       @id(map: "PHASE_PK") @default(autoincrement())
  phaseName        String    @db.NVarChar(26)
  phaseDisplayName String?   @db.NVarChar(40)
  phaseDescription String?   @db.NVarChar(4000)
  phaseHelpText    String?   @db.NVarChar(100)
  idPhaseType      Int
  idWorkflow       Int
  guidPhase        String    @unique(map: "PHASE_UKG") @default(dbgenerated("newid()"), map: "PHASE_DFG") @db.UniqueIdentifier
  DiagramXPos      Int?
  dplyPhase        Int       @default(0, map: "PHASE_DFY") @db.TinyInt
  deleted          Boolean   @default(false, map: "DF__PHASE__deleted__78BEDCC2")
  PHASETYPE        PHASETYPE @relation(fields: [idPhaseType], references: [idPhaseType], onUpdate: NoAction, map: "PHASE_PHASETYPE_FK1")
  WORKFLOW         WORKFLOW  @relation(fields: [idWorkflow], references: [idWorkflow], onUpdate: NoAction, map: "PHASE_WORKFLOW_FK1")
  TASK             TASK[]

  @@index([idPhaseType], map: "PHASE_FK_IDX_1")
}

model PHASETYPE {
  idPhaseType   Int     @id(map: "PHASETYPE_PK")
  phaseTypeName String  @db.NVarChar(26)
  PHASE         PHASE[]
}

model Porte {
  idPorte   BigInt   @id(map: "pk3e1936543a8a1729fd56f96abd8")
  finalEnt  Int      @default(10002, map: "DF__Porte__finalEnt__1E45672C")
  guidPorte String   @unique(map: "Porte_UKG") @default(dbgenerated("newid()"), map: "DF__Porte__guidPorte__1F398B65") @db.UniqueIdentifier
  dsblPorte Boolean?
  dplyPorte Int?     @db.TinyInt
  Codigo    Int?
  Descricao String?  @db.NVarChar(100)
}

model PROCESSTRIGGERREGISTER {
  idProcessTriggerRegister  Int                         @id(map: "PROCESSTRIGGERREGISTER_PK")
  idCase                    Int
  idWorkitem                BigInt
  idScope                   BigInt
  idTask                    Int
  guidTask                  String?                     @db.UniqueIdentifier
  guidProcessTrigger        String?                     @db.UniqueIdentifier
  enabled                   Boolean
  taskType                  Int
  TASK                      TASK                        @relation(fields: [idTask], references: [idTask], onUpdate: NoAction, map: "PROCESSTRIGREG_TASK_FK1")
  PROCESSTRIGGERREGISTERENT PROCESSTRIGGERREGISTERENT[]
}

model PROCESSTRIGGERREGISTERENT {
  idProcessTriggerRegisterEnt Int                    @id(map: "PROCESSTRIGGERREGISTERENT_PK")
  idProcessTriggerRegister    Int
  guidEntity                  String                 @db.UniqueIdentifier
  idSurrogateKey              Int
  PROCESSTRIGGERREGISTER      PROCESSTRIGGERREGISTER @relation(fields: [idProcessTriggerRegister], references: [idProcessTriggerRegister], onUpdate: NoAction, map: "PROTRIGREGENT_PROCTRIGREG_FK1")
}

model PVApp {
  idCase               BigInt @id(map: "pk6a66737461ba81375c2e05db005")
  finalEnt             Int    @default(10036, map: "DF__PVApp__finalEnt__40657506")
  baCreatedTime        BigInt @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_PVApp_baCreatedTime")
  baGuid               String @default(dbgenerated("newid()"), map: "DF_PVApp_baGuid") @db.UniqueIdentifier
  CEDDemanda           Int?
  CMDDemandas          Int?
  SCCredenciadasEdital Int?
  AEEAnalisarEmpEdital Int?
}

model PVCLApp {
  idCase               BigInt @id(map: "pka092db54a4a86ff3960ab1012d9")
  finalEnt             Int    @default(10036, map: "DF__PVCLApp__finalEn__452A2A23")
  baCreatedTime        BigInt @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_PVCLApp_baCreatedTime")
  baGuid               String @default(dbgenerated("newid()"), map: "DF_PVCLApp_baGuid") @db.UniqueIdentifier
  CEDDemanda           Int?
  CMDDemandas          Int?
  SCCredenciadasEdital Int?
  AEEAnalisarEmpEdital Int?
}

model QUERYFORM {
  idQueryForm     Int     @id(map: "QUERYFORM_PK") @default(autoincrement())
  qfName          String  @unique(map: "QUERYFORM_UK1") @db.NVarChar(26)
  qfDisplayName   String  @unique(map: "QUERYFORM_UK2") @db.NVarChar(50)
  qfDescription   String? @db.NVarChar(50)
  qfHelpText      String? @db.NVarChar(250)
  idForm          Int
  qfAllAppsSearch Boolean @default(false, map: "QUERYFORM_DF1")
  guidQueryForm   String  @unique(map: "QUERYFORM_UKG") @default(dbgenerated("newid()"), map: "QUERYFORM_DFG") @db.UniqueIdentifier
  dplyQueryForm   Int     @default(0, map: "QUERYFORM_DFY") @db.TinyInt
  FORM            FORM    @relation(fields: [idForm], references: [idForm], onUpdate: NoAction, map: "QUERYFORM_FORM_FK1")

  @@index([idForm], map: "QUERYFORM_FK_IDX_1")
}

model REASSIGNLOG {
  idReassignLog   BigInt   @id(map: "REASSIGNLOG_PK") @default(autoincrement())
  idWorkflow      Int
  idCase          Int
  idTask          Int
  idWorkItem      BigInt
  idOldUser       Int
  idNewUser       Int
  idAdmonUser     Int
  rlOldAssignDate DateTime @default(now(), map: "REASSIGNLOG_DF1") @db.DateTime

  @@index([idCase, idWorkItem], map: "REASSIGNLOG_IX1")
}

model RENDER {
  idRender                              Int                @id(map: "RENDER_PK") @default(autoincrement())
  idForm                                Int
  idAttrib                              Int?
  idFact                                Int?
  rdrDisplayName                        String?            @db.NVarChar(250)
  rdrDescription                        String?            @db.NVarChar(50)
  rdrHelpText                           String?            @db.NVarChar(250)
  rdrDisplayOrder                       Int                @default(1, map: "RENDER_DF1")
  rdrType                               Int
  idDisplayForm                         Int?
  rdrTypeDisplayField                   Int                @default(1, map: "RENDER_DF4")
  rdrLineBreak                          Int                @default(1, map: "RENDER_DF3")
  rdrSubmitOnChange                     Int?
  idRenderTab                           Int?
  idRenderGroup                         Int?
  idDisplayAttrib                       Int?
  idOrderByAttrib                       Int?
  filterAttrib                          String?
  guidRender                            String             @unique(map: "RENDER_UKG") @default(dbgenerated("newid()"), map: "RENDER_DFG") @db.UniqueIdentifier
  rdrLabelAlign                         Int                @default(1, map: "RENDER_DF2") @db.TinyInt
  rdrValueAlign                         Int                @default(1, map: "RENDER_DF5") @db.TinyInt
  idScopeItemDef                        Int?
  dplyRender                            Int                @default(0, map: "RENDER_DFY") @db.TinyInt
  XPATH                                 String?
  guidBaScopeItemDef                    String?            @db.UniqueIdentifier
  guidRdrEditable                       String?            @db.UniqueIdentifier
  guidRdrRequired                       String?            @db.UniqueIdentifier
  guidRdrVisible                        String?            @db.UniqueIdentifier
  guidButtonRule                        String?            @db.UniqueIdentifier
  guidInterfaceInstance                 String?            @db.UniqueIdentifier
  BAECMMETADATA                         BAECMMETADATA[]
  ATTRIB_RENDER_idAttribToATTRIB        ATTRIB?            @relation("RENDER_idAttribToATTRIB", fields: [idAttrib], references: [idAttrib], onDelete: NoAction, onUpdate: NoAction, map: "RENDER_ATTRIB_FK1")
  ATTRIB_RENDER_idDisplayAttribToATTRIB ATTRIB?            @relation("RENDER_idDisplayAttribToATTRIB", fields: [idDisplayAttrib], references: [idAttrib], onDelete: NoAction, onUpdate: NoAction, map: "RENDER_ATTRIB_FK2")
  ATTRIB_RENDER_idOrderByAttribToATTRIB ATTRIB?            @relation("RENDER_idOrderByAttribToATTRIB", fields: [idOrderByAttrib], references: [idAttrib], onDelete: NoAction, onUpdate: NoAction, map: "RENDER_ATTRIB_FK3")
  FACT                                  FACT?              @relation(fields: [idFact], references: [idFact], onDelete: NoAction, onUpdate: NoAction, map: "RENDER_FACT_FK1")
  FORM_RENDER_idDisplayFormToFORM       FORM?              @relation("RENDER_idDisplayFormToFORM", fields: [idDisplayForm], references: [idForm], onDelete: NoAction, onUpdate: NoAction, map: "RENDER_FORM_FK1")
  FORM_RENDER_idFormToFORM              FORM               @relation("RENDER_idFormToFORM", fields: [idForm], references: [idForm], onUpdate: NoAction, map: "RENDER_FORM_FK2")
  RENDERGROUP                           RENDERGROUP?       @relation(fields: [idRenderGroup], references: [idRenderGroup], onDelete: NoAction, onUpdate: NoAction, map: "RENDER_RENDERGROUP_FK1")
  RENDERTAB                             RENDERTAB?         @relation(fields: [idRenderTab], references: [idRenderTab], onDelete: NoAction, onUpdate: NoAction, map: "RENDER_RENDERTAB_FK1")
  RENDERTYPE                            RENDERTYPE         @relation(fields: [rdrType], references: [rdrType], onUpdate: NoAction, map: "RENDER_RENDERTYPE_FK1")
  RENDERACTION                          RENDERACTION[]
  RENDERBEHAVIOUR                       RENDERBEHAVIOUR[]
  RENDEREX                              RENDEREX?
  RENDERVALIDATION                      RENDERVALIDATION[]
  STOREDQUERYVALUE                      STOREDQUERYVALUE[]
  USERCACHE                             USERCACHE[]

  @@index([idForm], map: "IX_RENDER")
  @@index([idAttrib], map: "RENDER_FK_IDX_1")
  @@index([idDisplayForm], map: "RENDER_FK_IDX_10")
  @@index([idRenderGroup], map: "RENDER_FK_IDX_12")
  @@index([idRenderTab], map: "RENDER_FK_IDX_13")
  @@index([rdrType], map: "RENDER_FK_IDX_14")
  @@index([idDisplayAttrib], map: "RENDER_FK_IDX_2")
  @@index([idOrderByAttrib], map: "RENDER_FK_IDX_3")
  @@index([idScopeItemDef], map: "RENDER_FK_IDX_4")
  @@index([idFact], map: "RENDER_FK_IDX_9")
}

model RENDERACTION {
  idRenderAction        Int                  @id(map: "RENDERACTION_PK") @default(autoincrement())
  idRender              Int
  rdrActDescription     String?              @db.NVarChar(100)
  rdrActExpression      String               @db.NVarChar(500)
  guidRenderAction      String               @unique(map: "RENDERACTION_UKG") @default(dbgenerated("newid()"), map: "RENDERACTION_DFG") @db.UniqueIdentifier
  rdrActResetAppearance Int                  @default(1, map: "RENDERACTION_DF1") @db.TinyInt
  dplyRenderAction      Int                  @default(0, map: "RENDERACTION_DFY") @db.TinyInt
  RENDER                RENDER               @relation(fields: [idRender], references: [idRender], onUpdate: NoAction, map: "RENDERACTION_RENDER_FK1")
  RENDERACTIONTARGET    RENDERACTIONTARGET[]

  @@index([idRender], map: "RENDERACTION_IX1")
}

model RENDERACTIONTARGET {
  idRenderActionTarget   Int          @id(map: "RENDERACTIONTARGET_PK") @default(autoincrement())
  idRenderAction         Int
  rdrActTgtPath          String?      @db.NVarChar(100)
  idGroup                Int?
  rdrActTgtCommand       String       @db.NVarChar(100)
  guidRenderActionTarget String       @unique(map: "RENDERACTIONTARGET_UKG") @default(dbgenerated("newid()"), map: "RENDERACTIONTARGET_DFG") @db.UniqueIdentifier
  dplyRenderActionTarget Int          @default(0, map: "RENDERACTIONTARGET_DFY") @db.TinyInt
  RENDERACTION           RENDERACTION @relation(fields: [idRenderAction], references: [idRenderAction], onUpdate: NoAction, map: "RENDERACTIONTARGET_RENDERA_FK1")

  @@index([idRenderAction], map: "RENDERACTIONTARGET_IX1")
}

model RENDERBEHAVIOUR {
  idRenderBehaviour     Int     @id(map: "RENDERBEHAVIOUR_PK") @default(autoincrement())
  idRender              Int
  rdrBvrDescription     String? @db.NVarChar(100)
  rdrBvrExpression      String  @db.NVarChar(500)
  rdrBvrCommand         String  @db.NVarChar(100)
  guidRenderBehaviour   String  @unique(map: "RENDERBEHAVIOUR_UKG") @default(dbgenerated("newid()"), map: "RENDERBEHAVIOUR_DFG") @db.UniqueIdentifier
  rdrBvrResetAppearance Int     @default(1, map: "RENDERBEHAVIOUR_DF1") @db.TinyInt
  dplyRenderBehaviour   Int     @default(0, map: "RENDERBEHAVIOUR_DFY") @db.TinyInt
  RENDER                RENDER  @relation(fields: [idRender], references: [idRender], onUpdate: NoAction, map: "RENDERBEHAVIOUR_RENDER_FK1")

  @@index([idRender], map: "RENDERBEHAVIOUR_IX1")
}

model RENDEREX {
  idRender     Int    @unique(map: "RENDEREX_UK1")
  rdrXML       String @db.NVarChar(4000)
  guidRenderex String @unique(map: "RENDEREX_UKG") @default(dbgenerated("newid()"), map: "RENDEREX_DFG") @db.UniqueIdentifier
  dplyRenderex Int    @default(0, map: "RENDEREX_DFY") @db.TinyInt
  idRenderEx   Int    @id(map: "RENDEREX_PK") @default(autoincrement())
  RENDER       RENDER @relation(fields: [idRender], references: [idRender], onUpdate: NoAction, map: "RENDEREX_RENDER_FK1")
}

model RENDERGROUP {
  idRenderGroup      Int           @id(map: "RENDERGROUP_PK") @default(autoincrement())
  rdrGrpName         String        @db.NVarChar(50)
  rdrGrpDisplayName  String        @db.NVarChar(100)
  rdrGrpDescription  String?       @db.NVarChar(100)
  rdrGrpHelpText     String?       @db.NVarChar(100)
  rdrGrpDisplayOrder Int?          @default(1, map: "RENDERGROUP_DF1")
  idRdrGrpParent     Int?
  guidRenderGroup    String        @unique(map: "RENDERGROUP_UKG") @default(dbgenerated("newid()"), map: "RENDERGROUP_DFG") @db.UniqueIdentifier
  dplyRenderGroup    Int           @default(0, map: "RENDERGROUP_DFY") @db.TinyInt
  RENDER             RENDER[]
  RENDERGROUP        RENDERGROUP?  @relation("RENDERGROUPToRENDERGROUP", fields: [idRdrGrpParent], references: [idRenderGroup], onDelete: NoAction, onUpdate: NoAction, map: "RENDERGROUP_RENDERGROUP_FK1")
  other_RENDERGROUP  RENDERGROUP[] @relation("RENDERGROUPToRENDERGROUP")

  @@index([idRdrGrpParent], map: "RENDERGROUP_FK_IDX_1")
}

model RENDERTAB {
  idRenderTab        Int      @id(map: "RENDERTAB_PK") @default(autoincrement())
  rdrTabName         String   @db.NVarChar(50)
  rdrTabDisplayName  String   @db.NVarChar(50)
  rdrTabDescription  String?  @db.NVarChar(100)
  rdrTabHelpText     String?  @db.NVarChar(100)
  rdrTabDisplayOrder Int?     @default(1, map: "RENDERTAB_DF1")
  guidRenderTab      String   @unique(map: "RENDERTAB_UKG") @default(dbgenerated("newid()"), map: "RENDERTAB_DFG") @db.UniqueIdentifier
  dplyRenderTab      Int      @default(0, map: "RENDERTAB_DFY") @db.TinyInt
  RENDER             RENDER[]
}

model RENDERTYPE {
  rdrType               Int        @id(map: "RENDERTYPE_PK") @default(autoincrement())
  rdrTypeName           String?    @db.VarChar(25)
  guidRenderType        String     @unique(map: "RENDERTYPE_UKG") @default(dbgenerated("newid()"), map: "RENDERTYPE_DFG") @db.UniqueIdentifier
  dplyRenderType        Int        @default(0, map: "RENDERTYPE_DFY") @db.TinyInt
  idUserField           Int?
  xmlDefinitionTemplate String?    @db.NVarChar(4000)
  RENDER                RENDER[]
  USERFIELD             USERFIELD? @relation(fields: [idUserField], references: [idUserField], onDelete: NoAction, onUpdate: NoAction, map: "RENDERTYPE_USERFIELD_FK1")

  @@index([idUserField], map: "RENDERTYPE_FK_IDX_1")
}

model RENDERVALIDATION {
  idRenderValidation    Int     @id(map: "RENDERVALIDATION_PK") @default(autoincrement())
  idRender              Int
  rdrValDescription     String? @db.NVarChar(100)
  rdrValExpression      String  @db.NVarChar(500)
  rdrValMessage         String  @db.NVarChar(100)
  guidRenderValidation  String  @unique(map: "RENDERVALIDATION_UKG") @default(dbgenerated("newid()"), map: "RENDERVALIDATION_DFG") @db.UniqueIdentifier
  rdrIsServerValidation Boolean @default(false, map: "RENDERVALIDATION_DF1")
  dplyRenderValidation  Int     @default(0, map: "RENDERVALIDATION_DFY") @db.TinyInt
  RENDER                RENDER  @relation(fields: [idRender], references: [idRender], onUpdate: NoAction, map: "RENDERVALIDATION_RENDER_FK1")

  @@index([idRender], map: "RENDERVALIDATION_IX1")
}

model ROLE {
  idRole          Int              @id(map: "ROLE_PK") @default(autoincrement())
  roleName        String           @unique(map: "ROLE_UK1") @db.NVarChar(26)
  guidRole        String           @unique(map: "ROLE_UKG") @default(dbgenerated("newid()"), map: "ROLE_DFG") @db.UniqueIdentifier
  roleDisplayName String?          @unique(map: "ROLE_UK2") @db.NVarChar(40)
  roleDescription String?          @db.NVarChar(100)
  dplyRole        Int              @default(0, map: "ROLE_DFY") @db.TinyInt
  finalEnt        Int              @default(4, map: "ROLEDEF")
  ALARMRECIPIENT  ALARMRECIPIENT[]
  USERROLE        USERROLE[]
}

model ROLLBACKSTACK {
  idRollbackStack Int    @id(map: "ROLLBACKSTACK_PK")
  idCase          Int
  idWorkItem      BigInt
  idUser          Int
}

model SCCategoriaDocumento {
  idSCCategoriaDocumento   BigInt   @id(map: "pkf8966b54e09b3d1348734a2da88")
  finalEnt                 Int      @default(10045, map: "DF__SCCategor__final__2ED0D4B0")
  guidSCCategoriaDocumento String   @unique(map: "SCCategoriaDocumento_UKG") @default(dbgenerated("newid()"), map: "DF__SCCategor__guidS__2FC4F8E9") @db.UniqueIdentifier
  dsblSCCategoriaDocumento Boolean?
  dplySCCategoriaDocumento Int?     @db.TinyInt
  Codigo                   Int?     @unique(map: "SCCategoriaDocumento_EK1")
  Descricao                String?  @db.NVarChar(50)
}

model SCChamadas {
  idSCChamadas  BigInt  @id(map: "pk5e4fcf1477aa4321677228ad25a")
  finalEnt      Int     @default(10035, map: "DF__SCChamada__final__3BA0BFE9")
  baCreatedTime BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCChamadas_baCreatedTime")
  baGuid        String  @default(dbgenerated("newid()"), map: "DF_SCChamadas_baGuid") @db.UniqueIdentifier
  SCEdital      BigInt?
  Descricao     String? @db.NVarChar(100)

  @@index([SCEdital], map: "SCChamadas_F1")
}

model SCConsultoresNivel {
  idSCConsultoresNivel   BigInt  @id(map: "pk2cc65c143278064328d120fbbc6")
  finalEnt               Int     @default(10059, map: "DF__SCConsult__final__3E530F62")
  baCreatedTime          BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCConsultoresNivel_baCreatedTime")
  baGuid                 String  @default(dbgenerated("newid()"), map: "DF_SCConsultoresNivel_baGuid") @db.UniqueIdentifier
  Membro                 BigInt?
  SCParametrizacaoEdital BigInt?

  @@index([SCParametrizacaoEdital], map: "SCConsultoresNivel_F1")
}

model SCCredenciada {
  idSCCredenciada BigInt  @id(map: "pk7a34f6141748eea46d143840482")
  finalEnt        Int     @default(10034, map: "DF__SCCredenc__final__36DC0ACC")
  baCreatedTime   BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCCredenciada_baCreatedTime")
  baGuid          String  @default(dbgenerated("newid()"), map: "DF_SCCredenciada_baGuid") @db.UniqueIdentifier
  NomeFantasia    String? @db.NVarChar(100)
  DadosEndereco   BigInt?
  RazaoSocial     String? @db.NVarChar(50)
  Porte           BigInt?
  SCCredenciadora BigInt?
  Telefone        String? @db.NVarChar(50)
  CNPJ            String? @db.NVarChar(50)
  Email           String? @db.NVarChar(50)
  Whatsapp        String? @db.NVarChar(50)
  Credenciada     BigInt?
  Logo            Int?    @db.TinyInt
  Senha           String? @db.NVarChar(500)

  @@index([SCCredenciadora], map: "SCCredenciada_F1")
  @@index([Credenciada], map: "SCCredenciada_F2")
}

model SCCredenciadasEdital {
  idSCCredenciadasEdital    BigInt   @id(map: "pk97040cb493b8f545efb4389db00")
  finalEnt                  Int      @default(10046, map: "DF__SCCredenc__final__210CC53E")
  baCreatedTime             BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCCredenciadasEdital_baCreatedTime")
  baGuid                    String   @default(dbgenerated("newid()"), map: "DF_SCCredenciadasEdital_baGuid") @db.UniqueIdentifier
  Credenciada               BigInt?
  SCEdital                  BigInt?
  StatusCadastro            BigInt?
  ProcessoAberto            Boolean?
  AcaoTarefa                BigInt?
  JustificativaNaoAprovacao String?
  NumeroCaso                Int?

  @@index([SCEdital], map: "SCCredenciadasEdital_F1")
}

model SCCredenciadora {
  idSCCredenciadora      BigInt  @id(map: "pk62129e446b481450a2c989284cd")
  finalEnt               Int     @default(10006, map: "DF__SCCredenc__final__31583BA0")
  baCreatedTime          BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCCredenciadora_baCreatedTime")
  baGuid                 String  @default(dbgenerated("newid()"), map: "DF_SCCredenciadora_baGuid") @db.UniqueIdentifier
  Email                  String? @db.NVarChar(50)
  Telefone               String? @db.NVarChar(50)
  Credenciadora          BigInt?
  NomeFantasia           String? @db.NVarChar(100)
  RazaoSocial            String? @db.NVarChar(100)
  Whatsapp               String? @db.NVarChar(50)
  DadosEndereco          BigInt?
  Logo                   Int?    @db.TinyInt
  CNPJ                   String? @db.NVarChar(50)
  NomeEditalPesquisa     String? @db.NVarChar(50)
  EditalPesquisa         BigInt?
  PesquisaNomeLocalidade String? @db.NVarChar(100)
  PesquisaLocalidade     BigInt?
  PesquisaNomeDocumentac String? @db.NVarChar(50)
  PesquisaDocumentacao   BigInt?

  @@index([Credenciadora], map: "SCCredenciadora_F1")
}

model SCCronograma {
  idSCCronograma BigInt  @id(map: "pk3ffa31144e3ad13b0468b8e7af1")
  finalEnt       Int     @default(10009, map: "DF__SCCronogr__final__3FA65AF7")
  baCreatedTime  BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCCronograma_baCreatedTime")
  baGuid         String  @default(dbgenerated("newid()"), map: "DF_SCCronograma_baGuid") @db.UniqueIdentifier
  PrazoDias      Int?
  Descricao      String? @db.NVarChar(100)
  SCChamadas     BigInt?

  @@index([SCChamadas], map: "SCCronograma_F1")
}

model SCDocCredenciadaEdital {
  idSCDocCredenciadaEdital BigInt  @id(map: "pk7b9145b42e5a46f86ac119f7365")
  finalEnt                 Int     @default(10047, map: "DF__SCDocCred__final__5674B1B6")
  baCreatedTime            BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCDocCredenciadaEdital_baCreatedTime")
  baGuid                   String  @default(dbgenerated("newid()"), map: "DF_SCDocCredenciadaEdital_baGuid") @db.UniqueIdentifier
  Arquivo                  Int?    @db.TinyInt
  DadosDocumento           BigInt?
  SCCredenciadasEdital     BigInt?

  @@index([SCCredenciadasEdital], map: "SCDocCredenciadaEdital_F1")
}

model SCDocumentacao {
  idSCDocumentacao     BigInt   @id(map: "pk011ffdf42ff91c1ff9224a3a33e")
  finalEnt             Int      @default(10032, map: "DF__SCDocumen__final__2D52A092")
  baCreatedTime        BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCDocumentacao_baCreatedTime")
  baGuid               String   @default(dbgenerated("newid()"), map: "DF_SCDocumentacao_baGuid") @db.UniqueIdentifier
  TipoDocumentacao     BigInt?
  Nome                 String?  @db.NVarChar(100)
  SCDocumentacaoPadrao BigInt?
  Obrigatorio          Boolean? @default(false, map: "DF__SCDocumen__Obrig__71FCD09A")
  SCEdital             BigInt?
  DetalhesDocumentacao String?  @db.NVarChar(500)
  Categoria            BigInt?

  @@index([SCDocumentacaoPadrao], map: "SCDocumentacao_F1")
  @@index([SCEdital], map: "SCDocumentacao_F2")
}

model SCDocumentacaoPadrao {
  idSCDocumentacaoPadrao BigInt    @id(map: "pka22693f49f985b84edce5da9263")
  finalEnt               Int       @default(10017, map: "DF__SCDocumen__final__65CC03DF")
  baCreatedTime          BigInt    @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCDocumentacaoPadrao_baCreatedTime")
  baGuid                 String    @default(dbgenerated("newid()"), map: "DF_SCDocumentacaoPadrao_baGuid") @db.UniqueIdentifier
  DataCriacao            DateTime? @db.DateTime
  ValidoAte              DateTime? @db.DateTime
  Nome                   String?   @db.NVarChar(50)
  SCCredenciadora        BigInt?
  Ativo                  Boolean?
  TAGS                   String?   @db.NVarChar(200)

  @@index([SCCredenciadora], map: "SCDocumentacaoPadrao_F1")
}

model SCDocumentosCredenciada {
  idSCDocumentosCredenciada BigInt  @id(map: "pkdcec9e140698e6720a6bbf03e45")
  finalEnt                  Int     @default(10018, map: "DF__SCDocumen__final__6A90B8FC")
  baCreatedTime             BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCDocumentosCredenciada_baCreatedTime")
  baGuid                    String  @default(dbgenerated("newid()"), map: "DF_SCDocumentosCredenciada_baGuid") @db.UniqueIdentifier
  Anexo                     Int?    @db.TinyInt
  SCCredenciada             BigInt?
  Nome                      String? @db.NVarChar(100)

  @@index([SCCredenciada], map: "SCDocumentosCredenciada_F1")
}

model SCDocumentosEquipe {
  idSCDocumentosEquipe BigInt  @id(map: "pk598cfcc4406bf119da0b955758b")
  finalEnt             Int     @default(10031, map: "DF__SCDocumen__final__288DEB75")
  baCreatedTime        BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCDocumentosEquipe_baCreatedTime")
  baGuid               String  @default(dbgenerated("newid()"), map: "DF_SCDocumentosEquipe_baGuid") @db.UniqueIdentifier
  Nome                 String? @db.NVarChar(100)
  SCTecnico            BigInt?
  Anexo                Int?    @db.TinyInt

  @@index([SCTecnico], map: "SCDocumentosEquipe_F1")
}

model SCEdital {
  idSCEdital                 BigInt    @id(map: "pk0332c7d45f2a903bf91f2fd2988")
  finalEnt                   Int       @default(10015, map: "DF__SCEdital__finalE__5C4299A5")
  baCreatedTime              BigInt    @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCEdital_baCreatedTime")
  baGuid                     String    @default(dbgenerated("newid()"), map: "DF_SCEdital_baGuid") @db.UniqueIdentifier
  QuantidadeMinimaLocalidade Int?
  QuantidadeMaximaLocalidade Int?
  LocalidadePadrao           BigInt?
  DocumentacaoPadrao         BigInt?
  ObjetoEdital               String?   @db.NVarChar(500)
  TipodeCredenciamento       BigInt?
  NomeEdital                 String?   @db.NVarChar(50)
  FimEdital                  DateTime? @db.DateTime
  Credenciadora              BigInt?
  TipoChamadas               BigInt?
  InicioEdital               DateTime? @db.DateTime
  Objetivos                  String?   @db.NVarChar(500)
  EscolhaLocalidades         Boolean?
  Status                     BigInt?
  PesquisaNome               String?   @db.NVarChar(50)
  PesquisaCNPJ               String?   @db.NVarChar(50)
  PesquisaStatusCred         BigInt?
  PesquisaCredenciada        BigInt?

  @@index([Credenciadora], map: "SCEdital_F1")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SCHEDALIVETIMELOG {
  satSchedulerId   String   @db.VarChar(50)
  satLastStartTime DateTime @db.DateTime
  satLastAliveTime DateTime @db.DateTime
  satSchedState    Bytes?

  @@ignore
}

model SCHEDRUNNINGSTATE {
  idSchedRunningState     Int                       @id(map: "SCHEDRUNNINGSTATE_PK") @db.TinyInt
  stateName               String                    @db.NVarChar(100)
  BADATATRIGGERJOBRUNNING BADATATRIGGERJOBRUNNING[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model SCHEDULERCONFIGURATION {
  sccSchedulerId         String @db.VarChar(50)
  sccRefreshConfig       Int    @default(0, map: "DF__SCHEDULER__sccRe__1837881B")
  sccConfigurationValues Bytes?

  @@ignore
}

model SCHTYPE {
  idSchType   Int           @id(map: "SCHTYPE_PK")
  schtName    String        @db.NVarChar(26)
  ALARM       ALARM[]
  JOBSCHEDULE JOBSCHEDULE[]
}

model SCLocalidade {
  idSCLocalidade      BigInt  @id(map: "pk476505f40e598f4fe329ec1820e")
  finalEnt            Int     @default(10041, map: "DF__SCLocalid__final__5D01B3B4")
  baCreatedTime       BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCLocalidade_baCreatedTime")
  baGuid              String  @default(dbgenerated("newid()"), map: "DF_SCLocalidade_baGuid") @db.UniqueIdentifier
  SCEdital            BigInt?
  SCLocalidadesPadrao BigInt?
  Nome                String? @db.NVarChar(200)

  @@index([SCLocalidadesPadrao], map: "SCLocalidade_F1")
  @@index([SCEdital], map: "SCLocalidade_F2")
}

model SCLocalidadesPadrao {
  idSCLocalidadesPadrao BigInt    @id(map: "pk13d4ff345c7abee7a7d9e0e8371")
  finalEnt              Int       @default(10020, map: "DF__SCLocalid__final__741A2336")
  baCreatedTime         BigInt    @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCLocalidadesPadrao_baCreatedTime")
  baGuid                String    @default(dbgenerated("newid()"), map: "DF_SCLocalidadesPadrao_baGuid") @db.UniqueIdentifier
  Ativo                 Boolean?
  TAGS                  String?   @db.NVarChar(200)
  SCCredenciadora       BigInt?
  DataCriacao           DateTime? @db.DateTime
  Nome                  String?   @db.NVarChar(100)
  ValidoAte             DateTime? @db.DateTime

  @@index([SCCredenciadora], map: "SCLocalidadesPadrao_F1")
}

model SCNaturezaConsultor {
  idSCNaturezaConsultor BigInt  @id(map: "pk1c43ab0480f9d17700f0a229135")
  finalEnt              Int     @default(10058, map: "DF__SCNaturez__final__2D288360")
  baCreatedTime         BigInt  @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCNaturezaConsultor_baCreatedTime")
  baGuid                String  @default(dbgenerated("newid()"), map: "DF_SCNaturezaConsultor_baGuid") @db.UniqueIdentifier
  NaturezaPrestacao     BigInt?
  SCConsultoresNivel    BigInt?

  @@index([SCConsultoresNivel], map: "SCNaturezaConsultor_F1")
}

model SCNaturezaPrestacao {
  idSCNaturezaPrestacao   BigInt   @id(map: "pk477ff954adbad1a31c50f65ed2e")
  finalEnt                Int      @default(10057, map: "DF__SCNaturez__final__22AAF4ED")
  guidSCNaturezaPrestacao String   @unique(map: "SCNaturezaPrestacao_UKG") @default(dbgenerated("newid()"), map: "DF__SCNaturez__guidS__239F1926") @db.UniqueIdentifier
  dsblSCNaturezaPrestacao Boolean?
  dplySCNaturezaPrestacao Int?     @db.TinyInt
  Codigo                  Int?
  Descricao               String?  @db.NVarChar(50)
}

model SCNivel1Parametrizacao {
  idSCNivel1Parametrizacao   BigInt   @id(map: "pk0314a4747eeaf1f3d618a2dffc2")
  finalEnt                   Int      @default(10026, map: "DF__SCNivel1P__final__10B661E4")
  guidSCNivel1Parametrizacao String   @unique(map: "SCNivel1Parametrizacao_UKG") @default(dbgenerated("newid()"), map: "DF__SCNivel1P__guidS__11AA861D") @db.UniqueIdentifier
  dsblSCNivel1Parametrizacao Boolean?
  dplySCNivel1Parametrizacao Int?     @db.TinyInt
  TipoCredenciamento         BigInt?
  Codigo                     Int?
  Descricao                  String?  @db.NVarChar(50)
  TipoNivel                  BigInt?
}

model SCNivel2Parametrizacao {
  idSCNivel2Parametrizacao   BigInt   @id(map: "pk2f05c5743e48d1038bf4d80b6ef")
  finalEnt                   Int      @default(10024, map: "DF__SCNivel2P__final__072CF7AA")
  guidSCNivel2Parametrizacao String   @unique(map: "SCNivel2Parametrizacao_UKG") @default(dbgenerated("newid()"), map: "DF__SCNivel2P__guidS__08211BE3") @db.UniqueIdentifier
  dsblSCNivel2Parametrizacao Boolean?
  dplySCNivel2Parametrizacao Int?     @db.TinyInt
  Nivel1                     BigInt?
  TipoNivel                  BigInt?
  Descricao                  String?  @db.NVarChar(50)
  Codigo                     Int?
}

model SCNivel3Parametrizacao {
  idSCNivel3Parametrizacao   BigInt   @id(map: "pk890c870456092df5581f8dc371c")
  finalEnt                   Int      @default(10008, map: "DF__SCNivel3P__final__3AE1A5DA")
  guidSCNivel3Parametrizacao String   @unique(map: "SCNivel3Parametrizacao_UKG") @default(dbgenerated("newid()"), map: "DF__SCNivel3P__guidS__3BD5CA13") @db.UniqueIdentifier
  dsblSCNivel3Parametrizacao Boolean?
  dplySCNivel3Parametrizacao Int?     @db.TinyInt
  Codigo                     Int?
  Descricao                  String?  @db.NVarChar(50)
  TipoNivel                  BigInt?
  Nivel2                     BigInt?
}

model SCNivel4Parametrizacao {
  idSCNivel4Parametrizacao   BigInt   @id(map: "pkf6da9a44190a6fea40f08700c1a")
  finalEnt                   Int      @default(10028, map: "DF__SCNivel4P__final__1A3FCC1E")
  guidSCNivel4Parametrizacao String   @unique(map: "SCNivel4Parametrizacao_UKG") @default(dbgenerated("newid()"), map: "DF__SCNivel4P__guidS__1B33F057") @db.UniqueIdentifier
  dsblSCNivel4Parametrizacao Boolean?
  dplySCNivel4Parametrizacao Int?     @db.TinyInt
  Descricao                  String?  @db.NVarChar(50)
  TipoNivel                  BigInt?
  Codigo                     Int?
  Nivel3                     BigInt?
}

model SCNivel5Parametrizacao {
  idSCNivel5Parametrizacao   BigInt   @id(map: "pk19152ff497fb394d5a22dafc7c0")
  finalEnt                   Int      @default(10000, map: "DF__SCNivel5P__final__14BBFCF2")
  guidSCNivel5Parametrizacao String   @unique(map: "SCNivel5Parametrizacao_UKG") @default(dbgenerated("newid()"), map: "DF__SCNivel5P__guidS__15B0212B") @db.UniqueIdentifier
  dsblSCNivel5Parametrizacao Boolean?
  dplySCNivel5Parametrizacao Int?     @db.TinyInt
  Descricao                  String?  @db.NVarChar(50)
  TipoNivel                  BigInt?
  Nivel4                     BigInt?
  Codigo                     Int?
}

model SCNivel6Parametrizacao {
  idSCNivel6Parametrizacao   BigInt   @id(map: "pkdc8d05842fbaa7bd421f4f56bfc")
  finalEnt                   Int      @default(10014, map: "DF__SCNivel6P__final__577DE488")
  guidSCNivel6Parametrizacao String   @unique(map: "SCNivel6Parametrizacao_UKG") @default(dbgenerated("newid()"), map: "DF__SCNivel6P__guidS__587208C1") @db.UniqueIdentifier
  dsblSCNivel6Parametrizacao Boolean?
  dplySCNivel6Parametrizacao Int?     @db.TinyInt
  TipoNivel                  BigInt?
  Codigo                     Int?
  Descricao                  String?  @db.NVarChar(50)
  Nivel5                     BigInt?
}

model SCNivel7Parametrizacao {
  idSCNivel7Parametrizacao   BigInt   @id(map: "pk19e925e4bfeb881e1fb9e937170")
  finalEnt                   Int      @default(10010, map: "DF__SCNivel7P__final__446B1014")
  guidSCNivel7Parametrizacao String   @unique(map: "SCNivel7Parametrizacao_UKG") @default(dbgenerated("newid()"), map: "DF__SCNivel7P__guidS__455F344D") @db.UniqueIdentifier
  dsblSCNivel7Parametrizacao Boolean?
  dplySCNivel7Parametrizacao Int?     @db.TinyInt
  Nivel6                     BigInt?
  Codigo                     Int?
  Descricao                  String?  @db.NVarChar(50)
  TipoNivel                  BigInt?
}

model SCParamEditalNv1 {
  idSCParamEditalNv1   BigInt   @id(map: "pkbb2a9304664ace59e31f98e1315")
  finalEnt             Int      @default(10048, map: "DF__SCParamEd__final__1A2ABD85")
  baCreatedTime        BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCParamEditalNv1_baCreatedTime")
  baGuid               String   @default(dbgenerated("newid()"), map: "DF_SCParamEditalNv1_baGuid") @db.UniqueIdentifier
  Escolhido            Boolean?
  Nivel1Parametrizacao BigInt?
  IdNivel              Int?
  SCEdital             BigInt?

  @@index([SCEdital], map: "SCParamEditalNv1_F1")
}

model SCParamEditalNv2 {
  idSCParamEditalNv2   BigInt   @id(map: "pke9e8c934ac9a97385d6de3cb1c7")
  finalEnt             Int      @default(10049, map: "DF__SCParamEd__final__2B554987")
  baCreatedTime        BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCParamEditalNv2_baCreatedTime")
  baGuid               String   @default(dbgenerated("newid()"), map: "DF_SCParamEditalNv2_baGuid") @db.UniqueIdentifier
  Nivel2Parametrizacao BigInt?
  IdNivel              Int?
  Escolhido            Boolean?
  SCEdital             BigInt?

  @@index([SCEdital], map: "SCParamEditalNv2_F1")
}

model SCParamEditalNv3 {
  idSCParamEditalNv3   BigInt   @id(map: "pke10166049b180e9110ed6940993")
  finalEnt             Int      @default(10050, map: "DF__SCParamEd__final__34DEB3C1")
  baCreatedTime        BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCParamEditalNv3_baCreatedTime")
  baGuid               String   @default(dbgenerated("newid()"), map: "DF_SCParamEditalNv3_baGuid") @db.UniqueIdentifier
  IdNivel              Int?
  Nivel3Parametrizacao BigInt?
  Escolhido            Boolean?
  SCEdital             BigInt?

  @@index([SCEdital], map: "SCParamEditalNv3_F1")
}

model SCParamEditalNv4 {
  idSCParamEditalNv4   BigInt   @id(map: "pk898ab8c4dfa9a0c23a0d291fff5")
  finalEnt             Int      @default(10051, map: "DF__SCParamEd__final__3B8BB150")
  baCreatedTime        BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCParamEditalNv4_baCreatedTime")
  baGuid               String   @default(dbgenerated("newid()"), map: "DF_SCParamEditalNv4_baGuid") @db.UniqueIdentifier
  IdNivel              Int?
  Nivel4Parametrizacao BigInt?
  Escolhido            Boolean?
  SCEdital             BigInt?

  @@index([SCEdital], map: "SCParamEditalNv4_F1")
}

model SCParamEditalNv5 {
  idSCParamEditalNv5   BigInt   @id(map: "pk38ebc6f419e9f7da4f8af7c9009")
  finalEnt             Int      @default(10052, map: "DF__SCParamEd__final__4238AEDF")
  baCreatedTime        BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCParamEditalNv5_baCreatedTime")
  baGuid               String   @default(dbgenerated("newid()"), map: "DF_SCParamEditalNv5_baGuid") @db.UniqueIdentifier
  IdNivel              Int?
  Escolhido            Boolean?
  Nivel5Parametrizacao BigInt?
  SCEdital             BigInt?

  @@index([SCEdital], map: "SCParamEditalNv5_F1")
}

model SCParamEditalNv6 {
  idSCParamEditalNv6   BigInt   @id(map: "pkebbc4234b62863d5bd3baeca2b0")
  finalEnt             Int      @default(10053, map: "DF__SCParamEd__final__48E5AC6E")
  baCreatedTime        BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCParamEditalNv6_baCreatedTime")
  baGuid               String   @default(dbgenerated("newid()"), map: "DF_SCParamEditalNv6_baGuid") @db.UniqueIdentifier
  IdNivel              Int?
  Escolhido            Boolean?
  Nivel6Parametrizacao BigInt?
  SCEdital             BigInt?

  @@index([SCEdital], map: "SCParamEditalNv6_F1")
}

model SCParamEditalNv7 {
  idSCParamEditalNv7   BigInt   @id(map: "pk09d24a545b48adc847f31d3c018")
  finalEnt             Int      @default(10054, map: "DF__SCParamEd__final__4F92A9FD")
  baCreatedTime        BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCParamEditalNv7_baCreatedTime")
  baGuid               String   @default(dbgenerated("newid()"), map: "DF_SCParamEditalNv7_baGuid") @db.UniqueIdentifier
  Escolhido            Boolean?
  IdNivel              Int?
  Nivel7Parametrizacao BigInt?
  SCEdital             BigInt?

  @@index([SCEdital], map: "SCParamEditalNv7_F1")
}

model SCParametrizacaoEdital {
  idSCParametrizacaoEdital BigInt   @id(map: "pkf8dea48424b85f41cff342d766b")
  finalEnt                 Int      @default(10025, map: "DF__SCParamet__final__0BF1ACC7")
  baCreatedTime            BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCParametrizacaoEdital_baCreatedTime")
  baGuid                   String   @default(dbgenerated("newid()"), map: "DF_SCParametrizacaoEdital_baGuid") @db.UniqueIdentifier
  Nivel2Parametrizacao     BigInt?
  Escolhido                Boolean?
  Nivel4Parametrizacao     BigInt?
  Nivel3Parametrizacao     BigInt?
  Nivel6Parametrizacao     BigInt?
  Nivel1Parametrizacao     BigInt?
  Nivel5Parametrizacao     BigInt?
  Nivel7Parametrizacao     BigInt?
  IdNivel                  Int?
  SCCredenciadasEdital     BigInt?
  Parametrizacao           String?
  PesquisaNomeMembro       String?  @db.NVarChar(50)
  PesquisaCPFMembro        String?  @db.NVarChar(50)
  PesquisaMembroIndicado   BigInt?

  @@index([SCCredenciadasEdital], map: "SCParametrizacaoEdital_F2")
}

model SCStatusCredEdital {
  idSCStatusCredEdital   BigInt   @id(map: "pk88ee600431ebafe5de088556e76")
  finalEnt               Int      @default(10055, map: "DF__SCStatusC__final__3E88198C")
  guidSCStatusCredEdital String   @unique(map: "SCStatusCredEdital_UKG") @default(dbgenerated("newid()"), map: "DF__SCStatusC__guidS__3F7C3DC5") @db.UniqueIdentifier
  dsblSCStatusCredEdital Boolean?
  dplySCStatusCredEdital Int?     @db.TinyInt
  Codigo                 Int?     @unique(map: "SCStatusCredEdital_EK1")
  Descricao              String?  @db.NVarChar(50)
}

model SCStatusEdital {
  idSCStatusEdital   BigInt   @id(map: "pkd80a6f84379818a08af1b2301d5")
  finalEnt           Int      @default(10056, map: "DF__SCStatusE__final__565FA31D")
  guidSCStatusEdital String   @unique(map: "SCStatusEdital_UKG") @default(dbgenerated("newid()"), map: "DF__SCStatusE__guidS__5753C756") @db.UniqueIdentifier
  dsblSCStatusEdital Boolean?
  dplySCStatusEdital Int?     @db.TinyInt
  Codigo             Int?     @unique(map: "SCStatusEdital_EK1")
  Descricao          String?  @db.NVarChar(50)
}

model SCTecnico {
  idSCTecnico           BigInt   @id(map: "pkb4be4974c349078f23286cd1fba")
  finalEnt              Int      @default(10004, map: "DF__SCTecnico__final__27CED166")
  baCreatedTime         BigInt   @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_SCTecnico_baCreatedTime")
  baGuid                String   @default(dbgenerated("newid()"), map: "DF_SCTecnico_baGuid") @db.UniqueIdentifier
  Whatsapp              String?  @db.NVarChar(50)
  Telefone              String?  @db.NVarChar(50)
  Nome                  String?  @db.NVarChar(50)
  Assinante             Boolean?
  SCCredenciada         BigInt?
  Email                 String?  @db.NVarChar(50)
  EResponsavelLegal     Boolean?
  CPF                   String?  @db.NVarChar(50)
  DocumentosPessoais    Int?     @db.TinyInt
  ComprovanteVinculoPJ  Int?     @db.TinyInt
  CompFormacaoAcademica Int?     @db.TinyInt
  RegistroProfissional  Int?     @db.TinyInt

  @@index([SCCredenciada], map: "SCTecnico_F1")
}

model SCTipoChamadas {
  idSCTipoChamadas   BigInt   @id(map: "pk3727f204bd3b527d0348164adcc")
  finalEnt           Int      @default(10038, map: "DF__SCTipoCha__final__4EB3945D")
  guidSCTipoChamadas String   @unique(map: "SCTipoChamadas_UKG") @default(dbgenerated("newid()"), map: "DF__SCTipoCha__guidS__4FA7B896") @db.UniqueIdentifier
  dsblSCTipoChamadas Boolean?
  dplySCTipoChamadas Int?     @db.TinyInt
  Codigo             Int?
  Descricao          String?  @db.NVarChar(50)
}

model SCTipoCredenciame {
  idSCTipoCredenciame   BigInt   @id(map: "pkad13e7a4bd7a3be3a96a86f6105")
  finalEnt              Int      @default(10005, map: "DF__SCTipoCre__final__2C938683")
  guidSCTipoCredenciame String   @unique(map: "SCTipoCredenciame_UKG") @default(dbgenerated("newid()"), map: "DF__SCTipoCre__guidS__2D87AABC") @db.UniqueIdentifier
  dsblSCTipoCredenciame Boolean?
  dplySCTipoCredenciame Int?     @db.TinyInt
  Codigo                Int?
  Descricao             String?  @db.NVarChar(100)
}

model SCTipodeParametriza {
  idSCTipodeParametriza   BigInt   @id(map: "pke34bb5346f4aa44f37e2ff74b88")
  finalEnt                Int      @default(10021, map: "DF__SCTipodeP__final__78DED853")
  guidSCTipodeParametriza String   @unique(map: "SCTipodeParametriza_UKG") @default(dbgenerated("newid()"), map: "DF__SCTipodeP__guidS__79D2FC8C") @db.UniqueIdentifier
  dsblSCTipodeParametriza Boolean?
  dplySCTipodeParametriza Int?     @db.TinyInt
  Codigo                  Int?
  Descricao               String?  @db.NVarChar(100)
}

model SCTipoDocumentacao {
  idSCTipoDocumentacao   BigInt   @id(map: "pkec7dda94a17910fc2e13dfa1251")
  finalEnt               Int      @default(10001, map: "DF__SCTipoDoc__final__1980B20F")
  guidSCTipoDocumentacao String   @unique(map: "SCTipoDocumentacao_UKG") @default(dbgenerated("newid()"), map: "DF__SCTipoDoc__guidS__1A74D648") @db.UniqueIdentifier
  dsblSCTipoDocumentacao Boolean?
  dplySCTipoDocumentacao Int?     @db.TinyInt
  Codigo                 Int?
  Descricao              String?  @db.NVarChar(50)
}

model SECUENTIALASSIG {
  idSecuentialAssig Int    @id(map: "SECUENTIALASSIG_PK")
  idTask            Int
  idLastUser        Int
  TASK              TASK   @relation(fields: [idTask], references: [idTask], onUpdate: NoAction, map: "SECUENTIALASSIG_TASK_FK1")
  WFUSER            WFUSER @relation(fields: [idLastUser], references: [idUser], onUpdate: NoAction, map: "SECUENTIALASSIG_WFUSER_FK1")

  @@index([idTask], map: "SECUENTIALASSIG_FK_IDX_1")
  @@index([idLastUser], map: "SECUENTIALASSIG_FK_IDX_2")
}

model SKILL {
  idSkill          Int              @id(map: "SKILL_PK") @default(autoincrement())
  skillName        String           @unique(map: "SKILL_UK1") @db.NVarChar(26)
  guidSkill        String           @unique(map: "SKILL_UKG") @default(dbgenerated("newid()"), map: "SKILL_DFG") @db.UniqueIdentifier
  skillDisplayName String?          @unique(map: "SKILL_UK2") @db.NVarChar(40)
  skillDescription String?          @db.NVarChar(100)
  dplySkill        Int              @default(0, map: "SKILL_DFY") @db.TinyInt
  finalEnt         Int              @default(5, map: "SKILLDEF")
  ALARMRECIPIENT   ALARMRECIPIENT[]
  USERSKILL        USERSKILL[]
}

model SPLITEXITCOUNTER {
  idWorkItem BigInt @id(map: "SPLITEXITCOUNTER_PK")
  exitCount  Int
  idCase     Int    @default(0, map: "SPLITEXITCOUNTER_DF1")
  idTask     Int    @default(0, map: "SPLITEXITCOUNTER_DF2")

  @@index([idCase, idTask], map: "SPLITEXITCOUNTER_IX1")
}

model STOREDQUERY {
  idStoredQuery    Int                @id(map: "STOREDQUERY_PK") @default(autoincrement())
  sqName           String             @db.NVarChar(26)
  sqDescription    String?            @db.NVarChar(250)
  idUser           Int?
  idQueryForm      Int?
  sqSearchAllUsers Boolean?
  sqProcessState   Int?               @db.TinyInt
  WFUSER           WFUSER?            @relation(fields: [idUser], references: [idUser], onDelete: NoAction, onUpdate: NoAction, map: "STOREDQUERY_WFUSER_FK1")
  STOREDQUERYGROUP STOREDQUERYGROUP[]
  STOREDQUERYUSER  STOREDQUERYUSER[]
  STOREDQUERYVALUE STOREDQUERYVALUE[]

  @@index([idUser], map: "STOREDQUERY_FK_IDX_1")
}

model STOREDQUERYFORM {
  idStoredQueryForm    Int                    @id(map: "STOREDQUERYFORM_PK") @default(autoincrement())
  queryFormGuid        String                 @db.UniqueIdentifier
  idUser               Int?
  definitionQueryForm  String?                @db.Text
  WFUSER               WFUSER?                @relation(fields: [idUser], references: [idUser], onDelete: NoAction, onUpdate: NoAction, map: "STOREDQUERYFORMWFUSER_FK1")
  STOREDQUERYFORMGROUP STOREDQUERYFORMGROUP[]
  STOREDQUERYFORMUSER  STOREDQUERYFORMUSER[]

  @@index([idUser], map: "STOREDQUERYFORM_FK_IDX_1")
  @@index([queryFormGuid], map: "STOREDQUERYFORM_FK_IDX_2")
}

model STOREDQUERYFORMGROUP {
  idStoredQueryFormGroup Int             @id(map: "STOREDQUERYFORMGROUP_PK") @default(autoincrement())
  idStoredQueryForm      Int
  guidUserGroup          String?         @db.UniqueIdentifier
  STOREDQUERYFORM        STOREDQUERYFORM @relation(fields: [idStoredQueryForm], references: [idStoredQueryForm], onUpdate: NoAction, map: "STOREDQUERYFORMGROUP_FK2")
}

model STOREDQUERYFORMUSER {
  idStoredQueryFormUser Int             @id(map: "STOREDQUERYFORMUSER_PK") @default(autoincrement())
  idStoredQueryForm     Int
  idUser                Int
  WFUSER                WFUSER          @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "STOREDQUERYFORMUSER_FK1")
  STOREDQUERYFORM       STOREDQUERYFORM @relation(fields: [idStoredQueryForm], references: [idStoredQueryForm], onUpdate: NoAction, map: "STOREDQUERYFORMUSER_FK2")

  @@index([idUser], map: "STOREDQUERYFORMUSER_FK_IDX_1")
  @@index([idStoredQueryForm], map: "STOREDQUERYFORMUSER_FK_IDX_2")
}

model STOREDQUERYGROUP {
  idStoredQueryGroup Int         @id(map: "STOREDQUERYGROUP_PK") @default(autoincrement())
  idStoredQuery      Int
  guidUserGroup      String?     @db.UniqueIdentifier
  STOREDQUERY        STOREDQUERY @relation(fields: [idStoredQuery], references: [idStoredQuery], onUpdate: NoAction, map: "SQGROUP_STOREDQUERY_FK1")
}

model STOREDQUERYUSER {
  idStoredQueryUser Int         @id(map: "STOREDQUERYUSER_PK") @default(autoincrement())
  idStoredQuery     Int
  idUser            Int
  STOREDQUERY       STOREDQUERY @relation(fields: [idStoredQuery], references: [idStoredQuery], onUpdate: NoAction, map: "SQUSER_STOREDQUERY_FK1")
  WFUSER            WFUSER      @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "SQUSER_WFUSER_FK1")

  @@index([idStoredQuery], map: "STOREDQUERYUSER_FK_IDX_1")
  @@index([idUser], map: "STOREDQUERYUSER_FK_IDX_2")
}

model STOREDQUERYVALUE {
  idStoredQueryValue Int         @id(map: "STOREDQUERYVALUE_PK") @default(autoincrement())
  idStoredQuery      Int
  idRender           Int
  sqvValue           String?     @db.NVarChar(50)
  idRuleforValue     Int?
  sqvOutputOrder     Int         @db.TinyInt
  sqvSortOrder       Int         @db.TinyInt
  sqvInclude         Boolean     @default(true, map: "STOREDQUERYVALUE_DF1")
  RENDER             RENDER      @relation(fields: [idRender], references: [idRender], onUpdate: NoAction, map: "STOREDQUERYVALUE_RENDER_FK1")
  STOREDQUERY        STOREDQUERY @relation(fields: [idStoredQuery], references: [idStoredQuery], onUpdate: NoAction, map: "STOREDQUERYVALUE_STOREDQUE_FK1")

  @@index([idRender], map: "STOREDQUERYVALUE_FK_IDX_1")
  @@index([idStoredQuery], map: "STOREDQUERYVALUE_FK_IDX_2")
}

model SUBPROCMAPPING {
  idSubProcMapping   Int     @id(map: "SUBPROCMAPPING_PK") @default(autoincrement())
  direction          Int     @db.TinyInt
  source             String  @db.NVarChar(500)
  target             String  @db.NVarChar(50)
  idTask             Int
  guidSubprocMapping String  @unique(map: "SUBPROCMAPPING_UKG") @default(dbgenerated("newid()"), map: "SUBPROCMAPPING_DFG") @db.UniqueIdentifier
  dplySubprocMapping Int     @default(0, map: "SUBPROCMAPPING_DFY") @db.TinyInt
  deleted            Boolean @default(false, map: "DF__SUBPROCMA__delet__20CCCE1C")
  TASK               TASK    @relation(fields: [idTask], references: [idTask], onUpdate: NoAction, map: "SUBPROCMAPPING_TASK_FK1")

  @@index([idTask, direction], map: "IX_SUBPROCMAPPING")
}

model SUBPROCMAPPINGTYPE {
  idSubProcMappingType                                Int    @id(map: "SUBPROCMAPPINGTYPE_PK")
  spmtName                                            String @db.NVarChar(26)
  TASK_TASK_idSubProcMappingTypeIToSUBPROCMAPPINGTYPE TASK[] @relation("TASK_idSubProcMappingTypeIToSUBPROCMAPPINGTYPE")
  TASK_TASK_idSubProcMappingTypeOToSUBPROCMAPPINGTYPE TASK[] @relation("TASK_idSubProcMappingTypeOToSUBPROCMAPPINGTYPE")
}

model SUBPROCMULTIINSTCOUNT {
  idCase    Int
  idTask    Int
  idKey     BigInt
  spCreated Boolean?
  spOrder   Int?

  @@id([idCase, idTask, idKey], map: "SUBPROCMULTIINSTCOUNT_PK")
}

model SUBPROCTYPE {
  idSubProcType Int      @id(map: "SUBPROCTYPE_PK")
  sptName       String   @db.NVarChar(26)
  WFCASE        WFCASE[]
}

model SynchronizedTask {
  IdSynchronizedTask BigInt    @id(map: "SYNCHRONIZEDTASK_PK") @default(autoincrement())
  IdTask             Int
  IdCase             Int
  IdWorkitem         BigInt
  stRetryTime        Int       @default(0, map: "SYNCHRONIZEDTASK_DF1")
  stNextRunTime      DateTime? @default(now(), map: "SYNCHRONIZEDTASK_DF2") @db.DateTime
  stCreationTime     DateTime  @default(now(), map: "SYNCHRONIZEDTASK_DF3") @db.DateTime

  @@unique([IdCase, IdTask], map: "SynchronizedTask_IX1")
}

model SynchronizedTaskRunning {
  IdSynchronizedTaskRunning BigInt @id(map: "SYNCHRONIZEDTASKRUNNING_PK") @default(autoincrement())
  IdSynchronizedTask        Int
}

model TASK {
  idTask                                                            Int                      @id(map: "TASK_PK") @default(autoincrement())
  tskName                                                           String                   @db.NVarChar(26)
  tskDisplayName                                                    String?                  @db.NVarChar(40)
  tskDescription                                                    String?                  @db.NVarChar(4000)
  tskHelpText                                                       String?                  @db.NVarChar(250)
  tskDuration                                                       Int?                     @default(1, map: "TASK_DF7")
  allowReassign                                                     Boolean                  @default(false, map: "TASK_DF1")
  idWorkflow                                                        Int
  idPhase                                                           Int
  guidTask                                                          String                   @unique(map: "TASK_UKG") @default(dbgenerated("newid()"), map: "TASK_DFG") @db.UniqueIdentifier
  idTaskType                                                        Int?
  idFunctionalArea                                                  Int?
  idSubWfClass                                                      Int?
  idSubProcType                                                     Int?
  sendNotification                                                  Boolean                  @default(false, map: "TASK_DF6")
  tskCost                                                           Decimal?                 @db.Decimal(11, 2)
  tskPriority                                                       Int                      @default(2, map: "TASK_DF9") @db.TinyInt
  tskWaitDelay                                                      Int?
  idSubProcMappingTypeI                                             Int                      @default(1, map: "TASK_DF2")
  idSubProcMappingTypeO                                             Int                      @default(1, map: "TASK_DF3")
  DiagramXPos                                                       Int?
  DiagramYPos                                                       Int?
  DiagramWidth                                                      Int?
  DiagramHeight                                                     Int?
  tskLowTolerance                                                   Int?
  tskHighTolerance                                                  Int?
  idMultiInstanceFact                                               Int?
  idMultiInstanceGroupByAttrib                                      Int?
  idMultiInstanceExitMode                                           Int?
  idTaskToSync                                                      Int?
  isRollbackPoint                                                   Boolean                  @default(false, map: "TASK_DF4")
  idSubWorkflow                                                     Int?
  tskExtDuration                                                    Int                      @default(0, map: "TASK_DF8")
  sendAlarms                                                        Boolean                  @default(true, map: "TASK_DF5")
  tskIsAsynchTask                                                   Boolean?
  tskNumberOfRetries                                                Int?
  tskRetryInterval                                                  Int?
  tskShowFeedBack                                                   Boolean?
  tskAsynchTimeout                                                  Int?
  tskCompensation                                                   Boolean                  @default(false, map: "TASK_DF10")
  tskTransactional                                                  Boolean                  @default(false, map: "TASK_DF13")
  tskEmbedded                                                       Boolean                  @default(false, map: "TASK_DF11")
  tskScopeEnabled                                                   Boolean                  @default(false, map: "TASK_DF12")
  idScopeDef                                                        Int?
  tskSingleton                                                      Boolean                  @default(false, map: "TASK_DF15")
  tskMultiple                                                       Boolean                  @default(false, map: "TASK_DF14")
  dplyTask                                                          Int                      @default(0, map: "TASK_DFY") @db.TinyInt
  tskTimerEventDuration                                             Int?
  tskExpanded                                                       Boolean?
  tskExpandedWidth                                                  Int?
  tskExpandedHeight                                                 Int?
  idCompensationTargetTask                                          Int?
  idErrorCode                                                       Int?
  tskURLHelp                                                        String?
  idTaskSubType                                                     Int?
  idTaskLinkTo                                                      Int?
  idTaskLinkFrom                                                    Int?
  MultiInstanceXPath                                                String?
  isThrow                                                           Boolean?
  idTaskMessage                                                     Int?
  idTransitionMessage                                               Int?
  idCaseXPath                                                       String?
  idMultiInstanceProperty                                           Int?
  idForm                                                            String?                  @db.UniqueIdentifier
  tskMobileAccess                                                   Boolean                  @default(true, map: "TASK_DF16")
  tskMessageAfterProcess                                            String?
  tskAllowReleaseActivity                                           Boolean                  @default(false, map: "TASK_DF17")
  idStartForm                                                       String?                  @db.UniqueIdentifier
  offLineAsOnline                                                   Boolean                  @default(false, map: "TASK_DF18")
  guidMultiInstanceExitRule                                         String?                  @db.UniqueIdentifier
  deleted                                                           Boolean                  @default(false, map: "DF__TASK__deleted__37B03374")
  ALARM                                                             ALARM[]
  ASYNCHWORKITEM                                                    ASYNCHWORKITEM[]
  EXCEPTIONTRANSITION_EXCEPTIONTRANSITION_idTaskFromToTASK          EXCEPTIONTRANSITION[]    @relation("EXCEPTIONTRANSITION_idTaskFromToTASK")
  EXCEPTIONTRANSITION_EXCEPTIONTRANSITION_idTaskToToTASK            EXCEPTIONTRANSITION[]    @relation("EXCEPTIONTRANSITION_idTaskToToTASK")
  GRCOUNTER                                                         GRCOUNTER[]
  GRCUSTOMPHASE_GRCUSTOMPHASE_idTaskFromToTASK                      GRCUSTOMPHASE[]          @relation("GRCUSTOMPHASE_idTaskFromToTASK")
  GRCUSTOMPHASE_GRCUSTOMPHASE_idTaskToToTASK                        GRCUSTOMPHASE[]          @relation("GRCUSTOMPHASE_idTaskToToTASK")
  GRUSERQUERY                                                       GRUSERQUERY[]
  PROCESSTRIGGERREGISTER                                            PROCESSTRIGGERREGISTER[]
  SECUENTIALASSIG                                                   SECUENTIALASSIG[]
  SUBPROCMAPPING                                                    SUBPROCMAPPING[]
  ATTRIB                                                            ATTRIB?                  @relation(fields: [idMultiInstanceGroupByAttrib], references: [idAttrib], onDelete: NoAction, onUpdate: NoAction, map: "TASK_ATTRIB_FK1")
  BAERRORCODE                                                       BAERRORCODE?             @relation(fields: [idErrorCode], references: [idErrorCode], onDelete: NoAction, onUpdate: NoAction, map: "TASK_BAERRORCODE_FK1")
  FACT                                                              FACT?                    @relation(fields: [idMultiInstanceFact], references: [idFact], onDelete: NoAction, onUpdate: NoAction, map: "TASK_FACT_FK1")
  FUNCTIONALAREA                                                    FUNCTIONALAREA?          @relation(fields: [idFunctionalArea], references: [idFunctionalArea], onDelete: NoAction, onUpdate: NoAction, map: "TASK_FUNCTIONALAREA_FK1")
  BAMULTIINSTANCEPROPERTY                                           BAMULTIINSTANCEPROPERTY? @relation(fields: [idMultiInstanceProperty], references: [idMultiInstanceProperty], onDelete: NoAction, onUpdate: NoAction, map: "TASK_MIPROPERTY_FK1")
  MULTIINSTANCEEXITMODE                                             MULTIINSTANCEEXITMODE?   @relation(fields: [idMultiInstanceExitMode], references: [idMultiInstanceExitMode], onDelete: NoAction, onUpdate: NoAction, map: "TASK_MULTIINSTANCEEXITMODE_FK1")
  PHASE                                                             PHASE                    @relation(fields: [idPhase], references: [idPhase], onUpdate: NoAction, map: "TASK_PHASE_FK1")
  SUBPROCMAPPINGTYPE_TASK_idSubProcMappingTypeIToSUBPROCMAPPINGTYPE SUBPROCMAPPINGTYPE       @relation("TASK_idSubProcMappingTypeIToSUBPROCMAPPINGTYPE", fields: [idSubProcMappingTypeI], references: [idSubProcMappingType], onUpdate: NoAction, map: "TASK_SUBPROCMAPPINGTYPE_FK1")
  SUBPROCMAPPINGTYPE_TASK_idSubProcMappingTypeOToSUBPROCMAPPINGTYPE SUBPROCMAPPINGTYPE       @relation("TASK_idSubProcMappingTypeOToSUBPROCMAPPINGTYPE", fields: [idSubProcMappingTypeO], references: [idSubProcMappingType], onUpdate: NoAction, map: "TASK_SUBPROCMAPPINGTYPE_FK2")
  TASK_TASK_idTaskToSyncToTASK                                      TASK?                    @relation("TASK_idTaskToSyncToTASK", fields: [idTaskToSync], references: [idTask], onDelete: NoAction, onUpdate: NoAction, map: "TASK_TASK_FK1")
  other_TASK_TASK_idTaskToSyncToTASK                                TASK[]                   @relation("TASK_idTaskToSyncToTASK")
  TASK_TASK_idCompensationTargetTaskToTASK                          TASK?                    @relation("TASK_idCompensationTargetTaskToTASK", fields: [idCompensationTargetTask], references: [idTask], onDelete: NoAction, onUpdate: NoAction, map: "TASK_TASK_FK2")
  other_TASK_TASK_idCompensationTargetTaskToTASK                    TASK[]                   @relation("TASK_idCompensationTargetTaskToTASK")
  TASK_TASK_idTaskLinkToToTASK                                      TASK?                    @relation("TASK_idTaskLinkToToTASK", fields: [idTaskLinkTo], references: [idTask], onDelete: NoAction, onUpdate: NoAction, map: "TASK_TASK_FK3")
  other_TASK_TASK_idTaskLinkToToTASK                                TASK[]                   @relation("TASK_idTaskLinkToToTASK")
  TASK_TASK_idTaskLinkFromToTASK                                    TASK?                    @relation("TASK_idTaskLinkFromToTASK", fields: [idTaskLinkFrom], references: [idTask], onDelete: NoAction, onUpdate: NoAction, map: "TASK_TASK_FK4")
  other_TASK_TASK_idTaskLinkFromToTASK                              TASK[]                   @relation("TASK_idTaskLinkFromToTASK")
  TASKSUBTYPE                                                       TASKSUBTYPE?             @relation(fields: [idTaskSubType], references: [idTaskSubType], onDelete: NoAction, onUpdate: NoAction, map: "TASK_TASKSUBTYPE_FK1")
  TASKTYPE                                                          TASKTYPE?                @relation(fields: [idTaskType], references: [idTaskType], onDelete: NoAction, onUpdate: NoAction, map: "TASK_TASKTYPE_FK1")
  WFCLASS                                                           WFCLASS?                 @relation(fields: [idSubWfClass], references: [idWfClass], onDelete: NoAction, onUpdate: NoAction, map: "TASK_WFCLASS_FK1")
  WORKFLOW_TASK_idSubWorkflowToWORKFLOW                             WORKFLOW?                @relation("TASK_idSubWorkflowToWORKFLOW", fields: [idSubWorkflow], references: [idWorkflow], onDelete: NoAction, onUpdate: NoAction, map: "TASK_WORKFLOW_FK1")
  WORKFLOW_TASK_idWorkflowToWORKFLOW                                WORKFLOW                 @relation("TASK_idWorkflowToWORKFLOW", fields: [idWorkflow], references: [idWorkflow], onUpdate: NoAction, map: "TASK_WORKFLOW_FK2")
  TRANSITION_TRANSITION_idTaskFromToTASK                            TRANSITION[]             @relation("TRANSITION_idTaskFromToTASK")
  TRANSITION_TRANSITION_idTaskToToTASK                              TRANSITION[]             @relation("TRANSITION_idTaskToToTASK")
  TRANSITIONCONDITION                                               TRANSITIONCONDITION[]
  WFCASE                                                            WFCASE[]
  WORKITEM                                                          WORKITEM[]

  @@index([idWorkflow], map: "IX_TASK")
  @@index([idMultiInstanceGroupByAttrib], map: "TASK_FK_IDX_1")
  @@index([idSubProcMappingTypeI], map: "TASK_FK_IDX_10")
  @@index([idSubProcMappingTypeO], map: "TASK_FK_IDX_11")
  @@index([idTaskSubType], map: "TASK_FK_IDX_12")
  @@index([idTaskType], map: "TASK_FK_IDX_13")
  @@index([idTaskToSync], map: "TASK_FK_IDX_14")
  @@index([idCompensationTargetTask], map: "TASK_FK_IDX_15")
  @@index([idTaskLinkTo], map: "TASK_FK_IDX_16")
  @@index([idTaskLinkFrom], map: "TASK_FK_IDX_17")
  @@index([idSubWfClass], map: "TASK_FK_IDX_18")
  @@index([idSubWorkflow], map: "TASK_FK_IDX_19")
  @@index([idErrorCode], map: "TASK_FK_IDX_2")
  @@index([idScopeDef], map: "TASK_FK_IDX_3")
  @@index([idMultiInstanceFact], map: "TASK_FK_IDX_5")
  @@index([idFunctionalArea], map: "TASK_FK_IDX_6")
  @@index([idMultiInstanceProperty], map: "TASK_FK_IDX_7")
  @@index([idMultiInstanceExitMode], map: "TASK_FK_IDX_8")
  @@index([idPhase], map: "TASK_FK_IDX_9")
}

model TASKSUBTYPE {
  idTaskSubType Int    @id(map: "TASKSUBTYPE_PK")
  tstName       String @db.NVarChar(26)
  TASK          TASK[]
}

model TASKTYPE {
  idTaskType Int    @id(map: "TASKTYPE_PK")
  tskTpName  String @db.NVarChar(26)
  TASK       TASK[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TEMP_DEPLOYONPARENTSTOUPDATE {
  guidObject     String?  @db.UniqueIdentifier
  deployOnParent Boolean?
  IsOverride     Boolean?

  @@ignore
}

model TEMP_INPUT_GUIDS {
  guidObject String @id(map: "TEMP_INPUT_GUIDS_PK") @db.UniqueIdentifier
}

model TRANSITION {
  idTransition                     Int                   @id(map: "TRANSITION_PK") @default(autoincrement())
  trName                           String                @db.NVarChar(26)
  trDisplayName                    String?               @db.NVarChar(40)
  trDescription                    String?               @db.NVarChar(4000)
  idTaskFrom                       Int?
  idTaskTo                         Int?
  idWorkflow                       Int?
  guidTransition                   String                @unique(map: "TRANSITION_UKG") @default(dbgenerated("newid()"), map: "TRANSITION_DFG") @db.UniqueIdentifier
  DiagramXPos                      Int?
  DiagramYPos                      Int?
  DiagramWidth                     Int?
  DiagramHeight                    Int?
  trDefaultOption                  Int?                  @db.TinyInt
  idTransitionType                 Int                   @default(1, map: "TRANSITION_DF1") @db.TinyInt
  dplyTransition                   Int                   @default(0, map: "TRANSITION_DFY") @db.TinyInt
  trStartPort                      Int?
  trEndPort                        Int?
  idErrorCode                      Int?
  deleted                          Boolean               @default(false, map: "DF__TRANSITIO__delet__3B80C458")
  BAERRORCODE                      BAERRORCODE?          @relation(fields: [idErrorCode], references: [idErrorCode], onDelete: NoAction, onUpdate: NoAction, map: "TRANSITION_BAERRORCODE_FK1")
  TASK_TRANSITION_idTaskFromToTASK TASK?                 @relation("TRANSITION_idTaskFromToTASK", fields: [idTaskFrom], references: [idTask], onDelete: NoAction, onUpdate: NoAction, map: "TRANSITION_TASK_FK1")
  TASK_TRANSITION_idTaskToToTASK   TASK?                 @relation("TRANSITION_idTaskToToTASK", fields: [idTaskTo], references: [idTask], onDelete: NoAction, onUpdate: NoAction, map: "TRANSITION_TASK_FK2")
  TRANSITIONTYPE                   TRANSITIONTYPE        @relation(fields: [idTransitionType], references: [idTransitionType], onUpdate: NoAction, map: "TRANSITION_TRANSITIONTYPE_FK1")
  WORKFLOW                         WORKFLOW?             @relation(fields: [idWorkflow], references: [idWorkflow], onDelete: NoAction, onUpdate: NoAction, map: "TRANSITION_WORKFLOW_FK1")
  TRANSITIONCONDITION              TRANSITIONCONDITION[]
  TRANSITIONDIAGRAM                TRANSITIONDIAGRAM[]

  @@index([idErrorCode], map: "TRANSITION_FK_IDX_1")
  @@index([idTaskFrom], map: "TRANSITION_FK_IDX_2")
  @@index([idTaskTo], map: "TRANSITION_FK_IDX_3")
  @@index([idTransitionType], map: "TRANSITION_FK_IDX_4")
  @@index([idWorkflow], map: "TRANSITION_FK_IDX_5")
}

model TRANSITIONCONDITION {
  idTransitionCondition   Int        @id(map: "TRANSITIONCONDITION_PK") @default(autoincrement())
  idTask                  Int
  idTransition            Int
  tcName                  String     @db.NVarChar(26)
  tcDisplayName           String?    @db.NVarChar(40)
  isElse                  Boolean
  guidTransitionCondition String     @unique(map: "TRANSITIONCONDITION_UKG") @default(dbgenerated("newid()"), map: "TRANSITIONCONDITION_DFG") @db.UniqueIdentifier
  dplyTransitionCondition Int        @default(0, map: "TRANSITIONCONDITION_DFY") @db.TinyInt
  guidRule                String?    @db.UniqueIdentifier
  deleted                 Boolean    @default(false, map: "DF__TRANSITIO__delet__3E5D3103")
  TASK                    TASK       @relation(fields: [idTask], references: [idTask], onUpdate: NoAction, map: "TRANSITIONCONDITION_TASK_FK1")
  TRANSITION              TRANSITION @relation(fields: [idTransition], references: [idTransition], onUpdate: NoAction, map: "TRANSITIONCONDITION_TRANSI_FK1")

  @@index([idTask], map: "IX_TRANSITIONCONDITION")
  @@index([idTransition], map: "TRANSITIONCONDITION_FK_IDX_2")
}

model TRANSITIONDIAGRAM {
  idTransitionDiagram   Int        @id(map: "TRANSITIONDIAGRAM_PK") @default(autoincrement())
  idTransition          Int
  DiagramXPos           Int
  DiagramYPos           Int
  DiagramOrder          Int
  guidTransitionDiagram String     @unique(map: "TRANSITIONDIAGRAM_UKG") @default(dbgenerated("newid()"), map: "TRANSITIONDIAGRAM_DFG") @db.UniqueIdentifier
  dplyTransitionDiagram Int        @default(0, map: "TRANSITIONDIAGRAM_DFY") @db.TinyInt
  deleted               Boolean    @default(false, map: "DF__TRANSITIO__delet__41399DAE")
  TRANSITION            TRANSITION @relation(fields: [idTransition], references: [idTransition], onUpdate: NoAction, map: "TRANSITIONDIAGRAM_TRANSITI_FK1")

  @@index([idTransition], map: "TRANSITIONDIAGRAM_FK_IDX_1")
}

model TRANSITIONLOG {
  idTransitionLog  BigInt   @id(map: "TRANSITIONLOG_PK") @default(autoincrement())
  idCase           Int
  idTransition     Int
  idUser           Int
  tlEntryDate      DateTime @default(now(), map: "TRANSITIONLOG_DF1") @db.DateTime
  idWorkItemFrom   BigInt?
  idWorkItemTo     BigInt?
  idTransitionType Int?     @db.TinyInt

  @@index([idWorkItemFrom], map: "TRANSITIONLOG_IDX1")
  @@index([idCase], map: "TRANSITIONLOG_IX1")
  @@index([idWorkItemTo], map: "TRANSITIONLOG_IX2")
}

model TRANSITIONTYPE {
  idTransitionType   Int          @id(map: "TRANSITIONTYPE_PK") @db.TinyInt
  transitionTypeName String       @db.NVarChar(26)
  TRANSITION         TRANSITION[]
}

model UF {
  idUF     BigInt   @id(map: "pka14f56d47618c38562a7bda5fee")
  finalEnt Int      @default(10003, map: "DF__UF__finalEnt__230A1C49")
  guidUF   String   @unique(map: "UF_UKG") @default(dbgenerated("newid()"), map: "DF__UF__guidUF__23FE4082") @db.UniqueIdentifier
  dsblUF   Boolean?
  dplyUF   Int?     @db.TinyInt
  Nome     String?  @db.NVarChar(100)
  Codigo   Int?
}

model USAGEHISTORY {
  idUsageHistory    Int      @id(map: "USAGEHISTORY_PK") @default(autoincrement())
  guidProcess       String   @db.UniqueIdentifier
  totalSteps        BigInt
  totalCreatedCases BigInt
  dateProcess       DateTime @db.Date
  type              Int      @db.TinyInt

  @@index([dateProcess], map: "USAGEHISTORY_IX1")
}

model USERASSIGNCOUNT {
  idUser          Int    @id(map: "USERASSIGNCOUNT_PK")
  UserAssignCount Int
  WFUSER          WFUSER @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "USERASSIGNCOUNT_WFUSER_FK1")
}

model USERAUTH {
  idUserAuth             Int               @id(map: "USERAUTH_PK") @default(autoincrement())
  idUser                 Int               @unique(map: "USERAUTH_UK1")
  password               String?           @db.NVarChar(255)
  secretQuestion         String?           @db.NVarChar(255)
  secretAnswer           String?           @db.NVarChar(255)
  locked                 Boolean
  expired                Boolean
  lastLogonDate          DateTime          @db.DateTime
  lastChangePasswordDate DateTime          @db.DateTime
  failedLoginAttempts    Int
  WFUSER                 WFUSER            @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "USERAUTH_WFUSER_FK1")
  USERAUTHHISTORY        USERAUTHHISTORY[]
}

model USERAUTHHISTORY {
  idUserAuthHistiory Int       @id(map: "USERAUTHHISTORY_PK") @default(autoincrement())
  userName           String    @db.VarChar(100)
  passwordOrder      Int
  password           String    @db.NVarChar(255)
  idUserAuth         Int?
  USERAUTH           USERAUTH? @relation(fields: [idUserAuth], references: [idUserAuth], onDelete: NoAction, onUpdate: NoAction, map: "USERAUTHHISTORY_USERAUTH_FK1")
}

model USERCACHE {
  idUser      Int
  idEnt       Int
  idRender    Int
  Cache       Int
  idUserCache Int     @id(map: "USERCACHE_PK") @default(autoincrement())
  guidEntity  String? @db.UniqueIdentifier
  ENTITY      ENTITY  @relation(fields: [idEnt], references: [idEnt], onUpdate: NoAction, map: "USERCACHE_ENTITY_FK1")
  RENDER      RENDER  @relation(fields: [idRender], references: [idRender], onUpdate: NoAction, map: "USERCACHE_RENDER_FK1")
  WFUSER      WFUSER  @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "USERCACHE_WFUSER_FK1")

  @@index([idUser, idRender, idEnt], map: "IX_USERCACHE")
  @@index([Cache], map: "USERCACHE_IX1")
}

model USERFIELD {
  idUserField            Int                      @id(map: "USERFIELD_PK") @default(autoincrement())
  userFieldName          String?                  @unique(map: "USERFIELD_UK1") @db.NVarChar(25)
  userFieldDescription   String?                  @db.NVarChar(200)
  userFieldCode          String?                  @db.VarChar(7600)
  guidUserField          String                   @unique(map: "USERFIELD_UKG") @default(dbgenerated("newid()"), map: "USERFIELD_DFG") @db.UniqueIdentifier
  idContextEnt           Int?
  dplyUserField          Int                      @default(0, map: "USERFIELD_DFY") @db.TinyInt
  userFieldCodeJson      String?                  @db.NVarChar(4000)
  RENDERTYPE             RENDERTYPE[]
  ENTITY                 ENTITY?                  @relation(fields: [idContextEnt], references: [idEnt], onDelete: NoAction, onUpdate: NoAction, map: "USERFIELD_ENTITY_FK1")
  USERFIELDATTRIBUTETYPE USERFIELDATTRIBUTETYPE[]
  USERFIELDPARAMETERS    USERFIELDPARAMETERS[]

  @@index([idContextEnt], map: "USERFIELD_FK_IDX_1")
}

model USERFIELDATTRIBUTETYPE {
  idUserFieldAttributeType   Int       @id(map: "USERFIELDATTRIBUTETYPE_PK") @default(autoincrement())
  idUserField                Int
  idAttributeType            Int
  guidUserFieldAttributeType String    @unique(map: "USERFIELDATTRIBUTETYPE_UKG") @default(dbgenerated("newid()"), map: "USERFIELDATTRIBUTETYPE_DFG") @db.UniqueIdentifier
  dplyUserFieldAttributeType Int       @default(0, map: "USERFIELDATTRIBUTETYPE_DFY") @db.TinyInt
  USERFIELD                  USERFIELD @relation(fields: [idUserField], references: [idUserField], onUpdate: NoAction, map: "USERFIELDATTR_USERFIELD_FK1")

  @@index([idUserField], map: "USERFIELDATTRIBUTETYP_FK_IDX_1")
}

model USERFIELDPARAMETERS {
  idUserFieldParameters   Int       @id(map: "USERFIELDPARAMETERS_PK") @default(autoincrement())
  idUserField             Int
  userFieldParamName      String    @db.NVarChar(50)
  guidUserFieldParameters String    @unique(map: "USERFIELDPARAMETERS_UKG") @default(dbgenerated("newid()"), map: "USERFIELDPARAMETERS_DFG") @db.UniqueIdentifier
  dplyUserFieldParameters Int       @default(0, map: "USERFIELDPARAMETERS_DFY") @db.TinyInt
  USERFIELD               USERFIELD @relation(fields: [idUserField], references: [idUserField], onUpdate: NoAction, map: "USERFIELDPARA_USERFIELD_FK1")

  @@unique([idUserField, userFieldParamName], map: "USERFIELDPARAMETERS_UK1")
}

model USERORG {
  idOrg  Int
  idUser Int
  ORG    ORG    @relation(fields: [idOrg], references: [idOrg], onUpdate: NoAction, map: "USERORG_ORG_FK1")
  WFUSER WFUSER @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "USERORG_WFUSER_FK1")

  @@id([idUser, idOrg], map: "USERORG_PK")
  @@index([idOrg], map: "USERORG_F1")
}

model USERPENDINGREQUEST {
  idUserPendingRequest Int       @id(map: "USERPENDINGREQUEST_PK") @default(autoincrement())
  idUser               Int
  requestDate          DateTime  @db.DateTime
  requestObservation   String    @db.NVarChar(100)
  requestAttended      Boolean   @default(false, map: "USERPENDINGREQUEST_DF1")
  solutionDate         DateTime? @db.DateTime
  WFUSER               WFUSER    @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "USERPENDINGREQUEST_WFUSER_FK1")

  @@index([idUser], map: "USERPENDINGREQUEST_FK_IDX_1")
  @@index([requestAttended], map: "USERPENDINGREQUEST_IX1")
  @@index([requestDate], map: "USERPENDINGREQUEST_IX2")
}

model USERPOSITION {
  idUser      Int
  idPosition  Int
  ORGPOSITION ORGPOSITION @relation(fields: [idPosition], references: [idPosition], onUpdate: NoAction, map: "USERPOSITION_ORGPOSITION_FK1")
  WFUSER      WFUSER      @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "USERPOSITION_WFUSER_FK1")

  @@id([idUser, idPosition], map: "USERPOSITION_PK")
  @@index([idPosition], map: "USERPOSITION_F1")
}

model USERROLE {
  idUser Int
  idRole Int
  ROLE   ROLE   @relation(fields: [idRole], references: [idRole], onUpdate: NoAction, map: "USERROLE_ROLE_FK1")
  WFUSER WFUSER @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "USERROLE_WFUSER_FK1")

  @@id([idUser, idRole], map: "USERROLE_PK")
  @@index([idRole], map: "USERROLE_F1")
}

model USERSKILL {
  idUser  Int
  idSkill Int
  SKILL   SKILL  @relation(fields: [idSkill], references: [idSkill], onUpdate: NoAction, map: "USERSKILL_SKILL_FK1")
  WFUSER  WFUSER @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "USERSKILL_WFUSER_FK1")

  @@id([idUser, idSkill], map: "USERSKILL_PK")
  @@index([idSkill], map: "USERSKILL_F1")
}

model USERSTARTPAGE {
  idStartPage       Int      @id(map: "USERSTARTPAGE_PK") @default(autoincrement())
  startPageValue    String   @db.VarChar(30)
  guidUserStartPage String   @default(dbgenerated("newid()"), map: "STARTPAGE_DFG") @db.UniqueIdentifier
  finalEnt          Int?
  WFUSER            WFUSER[]
}

model WEEKDAY {
  idWeekDay   Int           @id(map: "WEEKDAY_PK") @db.TinyInt
  WeekDayName String        @db.NVarChar(26)
  JOBSCHEDULE JOBSCHEDULE[]
}

model WFACCESSTYPE {
  idwfAccessType   Int       @id(map: "WFACCESSTYPE_PK") @db.TinyInt
  wfAccessTypeName String    @db.NVarChar(20)
  WFCLASS          WFCLASS[]
}

model WFADHOCCASEDATA {
  idCase Int    @id(map: "WFADHOCCASEDATA_PK")
  data   Bytes?
}

model WFCASE {
  idCase                              Int          @id(map: "WFCASE_PK")
  casCreationDate                     DateTime     @default(now(), map: "WFCASE_DF1") @db.DateTime
  casSolutionDate                     DateTime?    @db.DateTime
  casEstimatedSolutionDate            DateTime?    @db.DateTime
  priority                            Int?         @db.TinyInt
  severity                            Int?         @db.TinyInt
  idWorkflow                          Int?
  idCreatorUser                       Int?
  idCaseManager                       Int?
  idCaseState                         Int
  idParentCase                        Int?
  idParentTask                        Int?
  idSubProcType                       Int?
  radNumber                           String?      @db.NVarChar(20)
  idParentWorkItem                    BigInt?
  casExtEstimatedSolutionDate         DateTime?    @db.DateTime
  idCasePath                          Int?
  ancestorPath                        String?      @db.VarChar(50)
  CaseClosed                          Int?         @default(0, map: "WFCASE_DF2") @db.TinyInt
  amount                              Float        @default(0, map: "WFCASE_DF3") @db.Money
  idOrg                               Int?
  duration                            Int?
  idCaseAccess                        Int?
  CaseGUID                            String?      @default(dbgenerated("newid()"), map: "WFCASE_DF4") @db.UniqueIdentifier
  hasCaseNumber                       Boolean?
  caseArchived                        Boolean      @default(false, map: "WFCASE_DF5")
  guidPlan                            String?      @db.UniqueIdentifier
  guidAdhocProcess                    String?      @db.UniqueIdentifier
  CASEPATH                            CASEPATH?    @relation(fields: [idCasePath], references: [idCasePath], onDelete: NoAction, onUpdate: NoAction, map: "WFCASE_CASEPATH_FK1")
  CASESTATE                           CASESTATE    @relation(fields: [idCaseState], references: [idCaseState], onUpdate: NoAction, map: "WFCASE_CASESTATE_FK1")
  ORG                                 ORG?         @relation(fields: [idOrg], references: [idOrg], onDelete: NoAction, onUpdate: NoAction, map: "WFCASE_ORG_FK1")
  SUBPROCTYPE                         SUBPROCTYPE? @relation(fields: [idSubProcType], references: [idSubProcType], onDelete: NoAction, onUpdate: NoAction, map: "WFCASE_SUBPROCTYPE_FK1")
  TASK                                TASK?        @relation(fields: [idParentTask], references: [idTask], onDelete: NoAction, onUpdate: NoAction, map: "WFCASE_TASK_FK1")
  WFUSER_WFCASE_idCaseManagerToWFUSER WFUSER?      @relation("WFCASE_idCaseManagerToWFUSER", fields: [idCaseManager], references: [idUser], onDelete: NoAction, onUpdate: NoAction, map: "WFCASE_WFUSER_FK1")
  WFUSER_WFCASE_idCreatorUserToWFUSER WFUSER?      @relation("WFCASE_idCreatorUserToWFUSER", fields: [idCreatorUser], references: [idUser], onDelete: NoAction, onUpdate: NoAction, map: "WFCASE_WFUSER_FK2")
  WORKFLOW                            WORKFLOW?    @relation(fields: [idWorkflow], references: [idWorkflow], onDelete: NoAction, onUpdate: NoAction, map: "WFCASE_WORKFLOW_FK1")
  WORKITEM                            WORKITEM[]

  @@index([casCreationDate], map: "WFCASE_CASCREATIONDATE_IDX")
  @@index([idParentCase], map: "WFCASE_IDPARENTCASE_IDX")
  @@index([idCaseState, hasCaseNumber, CaseClosed, idWorkflow, idCase], map: "WFCASE_IDX7")
  @@index([idCase, idWorkflow, radNumber, casCreationDate, casSolutionDate], map: "WFCASE_IDX9")
  @@index([radNumber, hasCaseNumber, idCaseState], map: "WFCASE_RADNUMBER_IDX")
}

model WFCASEABORTREASON {
  idCase      Int    @id(map: "WFCASEABORTREASON_PK")
  abortReason String
}

model WFCASECL {
  idCase                      Int       @id(map: "WFCASECL_PK")
  casCreationDate             DateTime  @default(now(), map: "WFCASECL_DF1") @db.DateTime
  casSolutionDate             DateTime  @db.DateTime
  casEstimatedSolutionDate    DateTime  @db.DateTime
  priority                    Int?      @db.TinyInt
  severity                    Int?      @db.TinyInt
  idWorkflow                  Int?
  idCreatorUser               Int?
  idCaseManager               Int?
  idCaseState                 Int
  idParentCase                Int?
  idParentTask                Int?
  idSubProcType               Int?
  radNumber                   String?   @db.NVarChar(20)
  idParentWorkItem            BigInt?
  casExtEstimatedSolutionDate DateTime? @db.DateTime
  idCasePath                  Int?
  ancestorPath                String?   @db.VarChar(50)
  CaseClosed                  Int?      @default(1, map: "WFCASECL_DF2") @db.TinyInt
  amount                      Float     @default(0, map: "WFCASECL_DF3") @db.Money
  idOrg                       Int?
  duration                    Int?
  idCaseAccess                Int?
  CaseGUID                    String?   @db.UniqueIdentifier
  hasCaseNumber               Boolean?
  caseArchived                Boolean   @default(false, map: "WFCASECL_DF4")
  guidPlan                    String?   @db.UniqueIdentifier
  guidAdhocProcess            String?   @db.UniqueIdentifier

  @@index([casSolutionDate, CaseClosed, caseArchived], map: "WFCASECL_ARCHIVING_IDX1")
  @@index([casCreationDate], map: "WFCASECL_CASCREATIONDATE_IDX")
  @@index([idParentCase], map: "WFCASECL_IDPARENTCASE_IDX")
  @@index([idWorkflow], map: "WFCASECL_IDWORKFLOW_IDX")
  @@index([CaseGUID], map: "WFCASECL_IX_GUID")
  @@index([radNumber, hasCaseNumber, idCaseState], map: "WFCASECL_RADNUMBER_IDX")
}

model WFCASEUSER {
  idCase Int
  idUser Int

  @@id([idUser, idCase], map: "WFCASEUSER_PK")
}

model WFCLASS {
  idWfClass               Int                      @id(map: "WFCLASS_PK") @default(autoincrement())
  wfClsName               String                   @db.NVarChar(26)
  wfClsDisplayName        String?                  @db.NVarChar(40)
  wfClsDescription        String?                  @db.NVarChar(4000)
  wfClsHelpText           String?                  @db.NVarChar(100)
  wfClsDisplayOrder       Int?                     @db.SmallInt
  wfClsCreationDate       DateTime                 @default(now(), map: "WFCLASS_DF3") @db.DateTime
  guidWFClass             String                   @unique(map: "WFCLASS_UKG") @default(dbgenerated("newid()"), map: "WFCLASS_DFG") @db.UniqueIdentifier
  idCategory              Int
  idAllocPrinciple        Int
  idwfAccessType          Int                      @default(1, map: "WFCLASS_DF2") @db.TinyInt
  display                 Boolean                  @default(true, map: "WFCLASS_DF1")
  wfClsUseParentRadNumber Boolean?
  dplyWFClass             Int                      @default(0, map: "WFCLASS_DFY") @db.TinyInt
  wfClsHelpURL            String?
  guidCustomizedResult    String?                  @db.UniqueIdentifier
  deleted                 Boolean                  @default(false, map: "DF__WFCLASS__deleted__5728DECD")
  BADELEGATE              BADELEGATE[]
  BARENDERDATA            BARENDERDATA[]
  BAUSERDEFAULTWFCLASS    BAUSERDEFAULTWFCLASS[]
  BAUSERSTATISTICS_CCASE  BAUSERSTATISTICS_CCASE[]
  BAWFCLASS_ENTITY        BAWFCLASS_ENTITY?
  BAWPQUERYPROCESSDATA    BAWPQUERYPROCESSDATA[]
  GRUSERDIMENSION         GRUSERDIMENSION[]
  GRUSERQUERY             GRUSERQUERY[]
  TASK                    TASK[]
  ALLOCPRINCIPLE          ALLOCPRINCIPLE           @relation(fields: [idAllocPrinciple], references: [idAllocPrinciple], onUpdate: NoAction, map: "WFCLASS_ALLOCPRINCIPLE_FK1")
  CATEGORY                CATEGORY                 @relation(fields: [idCategory], references: [idCategory], onUpdate: NoAction, map: "WFCLASS_CATEGORY_FK1")
  WFACCESSTYPE            WFACCESSTYPE             @relation(fields: [idwfAccessType], references: [idwfAccessType], onUpdate: NoAction, map: "WFCLASS_WFACCESSTYPE_FK1")
  WFCONFIG                WFCONFIG?
  WORKFLOW                WORKFLOW[]

  @@index([idwfAccessType], map: "IX_WFCLASS")
  @@index([idAllocPrinciple], map: "WFCLASS_FK_IDX_1")
  @@index([idCategory], map: "WFCLASS_FK_IDX_2")
}

model WFCONFIG {
  idWfConfig            Int     @id(map: "WFCONFIG_PK") @default(autoincrement())
  enableTaskLogging     Boolean @default(true, map: "WFCONFIG_DF4")
  enablePropertyLogging Boolean @default(true, map: "WFCONFIG_DF3")
  enableAlarms          Boolean @default(true, map: "WFCONFIG_DF1")
  enableNotifications   Boolean @default(true, map: "WFCONFIG_DF2")
  idWfClass             Int     @unique(map: "WFCONFIG_UK1")
  guidWfConfig          String  @unique(map: "WFCONFIG_UKG") @default(dbgenerated("newid()"), map: "WFCONFIG_DFG") @db.UniqueIdentifier
  dplyWfConfig          Int     @default(0, map: "WFCONFIG_DFY") @db.TinyInt
  deleted               Boolean @default(false, map: "DF__WFCONFIG__delete__5DD5DC5C")
  WFCLASS               WFCLASS @relation(fields: [idWfClass], references: [idWfClass], onUpdate: NoAction, map: "WFCONFIG_WFCLASS_FK1")
}

model WFPLAN {
  guidPlan          String    @id(clustered: false, map: "WFPLAN_PK") @db.UniqueIdentifier
  name              String    @db.NVarChar(100)
  description       String?
  creationDate      DateTime  @db.DateTime
  currentState      Int
  parentWorkItem    String?   @db.UniqueIdentifier
  startDate         DateTime? @db.DateTime
  dueDate           DateTime? @db.DateTime
  idUserCreator     Int
  waitForCompletion Boolean
  contextualized    Boolean   @default(false, map: "DF__WFPLAN__contextu__5ECA0095")
}

model WFUSER {
  idUser                                       Int                    @id(map: "WFUSER_PK")
  fullName                                     String                 @db.NVarChar(200)
  userName                                     String?                @db.VarChar(100)
  domain                                       String                 @db.NVarChar(25)
  idArea                                       Int?
  idLocation                                   Int?
  enabled                                      Boolean                @default(true, map: "WFUSER_DF3")
  idBossUser                                   Int?
  enabledForAssignation                        Int?                   @default(1, map: "WFUSER_DF6") @db.TinyInt
  notifByEmail                                 Boolean?               @default(true, map: "WFUSER_DF5")
  notifByMessenger                             Boolean?
  notifByCell                                  Boolean?
  contactEmail                                 String?                @db.NVarChar(100)
  contactMessenger                             String?                @db.NVarChar(100)
  contactCell                                  String?                @db.NVarChar(20)
  wfClassAccessCacheExpiry                     DateTime?              @db.SmallDateTime
  idWorkingTimeSchema                          Int?
  idDelegate                                   Int?
  DelegateEnabled                              Int?                   @db.TinyInt
  idTimeZone                                   Int?
  language                                     Int?
  createdCasesSkipAssigRules                   Boolean?               @default(false, map: "WFUSER_DF7")
  userPicture                                  Int?                   @db.TinyInt
  offlineForms                                 Boolean?               @default(true, map: "WFUSER_DF8")
  guidUser                                     String?                @default(dbgenerated("newid()"), map: "WFUSER_DF9") @db.UniqueIdentifier
  normalCost                                   Float?                 @db.Money
  overtimeCost                                 Float?                 @db.Money
  finalEnt                                     Int                    @default(1, map: "WFUSERDEF")
  userStartPage                                Int                    @default(1, map: "WFUSER_STARTPAGE_DFG")
  baCreatedTime                                BigInt                 @default(dbgenerated("CONVERT([bigint],datediff(second,'1970-01-01',getutcdate()))*(1000)"), map: "DF_WFUSER_baCreatedTime")
  baLastUpdated                                BigInt?
  BACASEACCESS                                 BACASEACCESS[]
  BACASEACCESSOPEN                             BACASEACCESSOPEN[]
  BADELEGATE_BADELEGATE_idUserToWFUSER         BADELEGATE[]           @relation("BADELEGATE_idUserToWFUSER")
  BADELEGATE_BADELEGATE_idDelegateUserToWFUSER BADELEGATE[]           @relation("BADELEGATE_idDelegateUserToWFUSER")
  BAOPERATION                                  BAOPERATION[]
  BAUSERACCESSLOG                              BAUSERACCESSLOG[]
  BAUSERDEFAULTWFCLASS                         BAUSERDEFAULTWFCLASS[]
  BAUSERGROUPUSER                              BAUSERGROUPUSER[]
  BAUSERSTATISTICS_CASE                        BAUSERSTATISTICS_CASE?
  BAWPFOLDER                                   BAWPFOLDER[]
  BAWPQUERY                                    BAWPQUERY[]
  CURRENTASSIGNEE                              CURRENTASSIGNEE[]
  DWKPI                                        DWKPI[]
  ENTITYLOG                                    ENTITYLOG[]
  GRCOUNTER                                    GRCOUNTER[]
  GRCUSTOMPHASE                                GRCUSTOMPHASE[]
  GRUSERDIMENSION                              GRUSERDIMENSION[]
  GRUSERQUERY                                  GRUSERQUERY[]
  JOB                                          JOB[]
  SECUENTIALASSIG                              SECUENTIALASSIG[]
  STOREDQUERY                                  STOREDQUERY[]
  STOREDQUERYFORM                              STOREDQUERYFORM[]
  STOREDQUERYFORMUSER                          STOREDQUERYFORMUSER[]
  STOREDQUERYUSER                              STOREDQUERYUSER[]
  USERASSIGNCOUNT                              USERASSIGNCOUNT?
  USERAUTH                                     USERAUTH?
  USERCACHE                                    USERCACHE[]
  USERORG                                      USERORG[]
  USERPENDINGREQUEST                           USERPENDINGREQUEST[]
  USERPOSITION                                 USERPOSITION[]
  USERROLE                                     USERROLE[]
  USERSKILL                                    USERSKILL[]
  WFCASE_WFCASE_idCaseManagerToWFUSER          WFCASE[]               @relation("WFCASE_idCaseManagerToWFUSER")
  WFCASE_WFCASE_idCreatorUserToWFUSER          WFCASE[]               @relation("WFCASE_idCreatorUserToWFUSER")
  AREA                                         AREA?                  @relation(fields: [idArea], references: [idArea], onDelete: NoAction, onUpdate: NoAction, map: "WFUSER_AREA_FK1")
  BATIMEZONE                                   BATIMEZONE?            @relation(fields: [idTimeZone], references: [idBATimeZone], onDelete: NoAction, onUpdate: NoAction, map: "WFUSER_BATIMEZONE_FK1")
  LGLANGUAGE                                   LGLANGUAGE?            @relation(fields: [language], references: [idLgLanguage], onDelete: NoAction, onUpdate: NoAction, map: "WFUSER_LGLANGUAGE_FK1")
  LOCATION                                     LOCATION?              @relation(fields: [idLocation], references: [idLocation], onDelete: NoAction, onUpdate: NoAction, map: "WFUSER_LOCATION_FK1")
  USERSTARTPAGE                                USERSTARTPAGE          @relation(fields: [userStartPage], references: [idStartPage], onUpdate: NoAction, map: "WFUSER_USERSTARTPAGE_FK1")
  WFUSER_WFUSER_idBossUserToWFUSER             WFUSER?                @relation("WFUSER_idBossUserToWFUSER", fields: [idBossUser], references: [idUser], onDelete: NoAction, onUpdate: NoAction, map: "WFUSER_WFUSER_FK1")
  other_WFUSER_WFUSER_idBossUserToWFUSER       WFUSER[]               @relation("WFUSER_idBossUserToWFUSER")
  WFUSER_WFUSER_idDelegateToWFUSER             WFUSER?                @relation("WFUSER_idDelegateToWFUSER", fields: [idDelegate], references: [idUser], onDelete: NoAction, onUpdate: NoAction, map: "WFUSER_WFUSER_FK2")
  other_WFUSER_WFUSER_idDelegateToWFUSER       WFUSER[]               @relation("WFUSER_idDelegateToWFUSER")
  WORKINGTIMESCHEMA                            WORKINGTIMESCHEMA?     @relation(fields: [idWorkingTimeSchema], references: [idWorkingTimeSchema], onDelete: NoAction, onUpdate: NoAction, map: "WFUSER_WORKINGTIMESCHEMA_FK1")
  WORKINGTIMEUSERDATA                          WORKINGTIMEUSERDATA[]

  @@index([idArea], map: "WFUSER_FK_IDX_1")
  @@index([idTimeZone], map: "WFUSER_FK_IDX_2")
  @@index([language], map: "WFUSER_FK_IDX_3")
  @@index([idLocation], map: "WFUSER_FK_IDX_4")
  @@index([idBossUser], map: "WFUSER_FK_IDX_5")
  @@index([idDelegate], map: "WFUSER_FK_IDX_6")
  @@index([idWorkingTimeSchema], map: "WFUSER_FK_IDX_7")
  @@index([guidUser], map: "WFUSER_GUIDUSER_IDX")
  @@index([userName], map: "WFUSER_USERNAME_IDX")
}

model WISTATELOG {
  idWIStateLog  BigInt   @id(map: "WISTATELOG_PK") @default(autoincrement())
  idWorkItem    BigInt
  idState       Int
  idUser        Int
  wislEntryDate DateTime @default(now(), map: "WISTATELOG_DF1") @db.DateTime
  duration      Int?

  @@index([idWorkItem, idState], map: "WISTATELOG_IX2")
}

model WORKFLOW {
  idWorkflow                        Int                      @id(map: "WORKFLOW_PK") @default(autoincrement())
  wfActive                          Boolean                  @default(true, map: "WORKFLOW_DF1")
  wfVersion                         String                   @db.NVarChar(10)
  wfDocument                        Bytes?                   @db.Image
  wfCreationDate                    DateTime                 @default(now(), map: "WORKFLOW_DF2") @db.DateTime
  wfEstimatedDuration               Int?
  idWFClass                         Int
  guidWorkflow                      String                   @unique(map: "WORKFLOW_UKG") @default(dbgenerated("newid()"), map: "WORKFLOW_DFG") @db.UniqueIdentifier
  wfLowTolerance                    Int?
  wfHighTolerance                   Int?
  wfExtEstimatedDuration            Int                      @default(0, map: "WORKFLOW_DF3")
  wfEnvironment                     Int?                     @db.TinyInt
  idScopeDef                        Int?
  wfSupportsScopes                  Boolean                  @default(false, map: "WORKFLOW_DF4")
  dplyWorkflow                      Int                      @default(0, map: "WORKFLOW_DFY") @db.TinyInt
  wfImage                           Bytes?                   @db.Image
  idPool                            Int?
  wfXPDL                            Bytes?                   @db.Image
  wfModelerCreationVersion          String?                  @db.NVarChar(12)
  wfModelerVersion                  String?                  @db.NVarChar(12)
  wfDocumentationSettings           Bytes?                   @db.Image
  wfCaseAccessType                  Int?                     @default(1, map: "WORKFLOW_DF5")
  wfRenderVersion                   Int?                     @default(2, map: "WORKFLOW_DF6")
  formsVersion                      Int?
  idGlobalForm                      String?                  @db.UniqueIdentifier
  idSummaryForm                     String?                  @db.UniqueIdentifier
  wfMobileAccess                    Boolean                  @default(true, map: "WORKFLOW_DF7")
  atRiskTime                        Int?
  deleted                           Boolean                  @default(false, map: "DF__WORKFLOW__delete__69478F08")
  ALARM                             ALARM[]
  CASEPATH                          CASEPATH[]
  EXCEPTIONTRANSITION               EXCEPTIONTRANSITION[]
  FUNCTIONALAREAPOSITION            FUNCTIONALAREAPOSITION[]
  GRUSERQUERY                       GRUSERQUERY[]
  PHASE                             PHASE[]
  TASK_TASK_idSubWorkflowToWORKFLOW TASK[]                   @relation("TASK_idSubWorkflowToWORKFLOW")
  TASK_TASK_idWorkflowToWORKFLOW    TASK[]                   @relation("TASK_idWorkflowToWORKFLOW")
  TRANSITION                        TRANSITION[]
  WFCASE                            WFCASE[]
  BACASEACCESSTYPE                  BACASEACCESSTYPE?        @relation(fields: [wfCaseAccessType], references: [caType], onDelete: NoAction, onUpdate: NoAction, map: "WORKFLOW_BACASEACCESSTYPE_FK1")
  ENVIRONMENTTYPE                   ENVIRONMENTTYPE?         @relation(fields: [wfEnvironment], references: [idEnvType], onDelete: NoAction, onUpdate: NoAction, map: "WORKFLOW_ENVIRONMENTTYPE_FK1")
  WFCLASS                           WFCLASS                  @relation(fields: [idWFClass], references: [idWfClass], onUpdate: NoAction, map: "WORKFLOW_WFCLASS_FK1")

  @@index([idWFClass], map: "IX_WORKFLOW")
  @@index([wfCaseAccessType], map: "WORKFLOW_FK_IDX_1")
  @@index([idPool], map: "WORKFLOW_FK_IDX_2")
  @@index([idScopeDef], map: "WORKFLOW_FK_IDX_3")
  @@index([wfEnvironment], map: "WORKFLOW_FK_IDX_4")
}

model WORKINGTIMESCHEMA {
  idWorkingTimeSchema   Int        @id(map: "WORKINGTIMESCHEMA_PK") @default(autoincrement())
  wtsName               String     @db.NVarChar(50)
  guidWorkingTimeSchema String     @unique(map: "WORKINGTIMESCHEMA_UKG") @default(dbgenerated("newid()"), map: "WORKINGTIMESCHEMA_DFG") @db.UniqueIdentifier
  dplyWorkingTimeSchema Int        @default(0, map: "WORKINGTIMESCHEMA_DFY") @db.TinyInt
  finalEnt              Int        @default(7, map: "WORKINGTIMESCHEMADEF")
  deleted               Boolean    @default(false, map: "DF__WORKINGTI__delet__11D4A34F")
  LOCATION              LOCATION[]
  ORG                   ORG[]
  WFUSER                WFUSER[]
}

model WORKINGTIMEUSERDATA {
  idWorkingTimeData Int       @id(map: "WORKINGTIMEUSERDATA_PK") @default(autoincrement())
  idUser            Int
  weekDay           Int       @db.TinyInt
  isWorking         Boolean
  fromDate          DateTime? @db.DateTime
  toDate            DateTime? @db.DateTime
  fromTime1         DateTime? @db.DateTime
  toTime1           DateTime? @db.DateTime
  fromTime2         DateTime? @db.DateTime
  toTime2           DateTime? @db.DateTime
  fromTime3         DateTime? @db.DateTime
  toTime3           DateTime? @db.DateTime
  fromTime4         DateTime? @db.DateTime
  toTime4           DateTime? @db.DateTime
  fromTime5         DateTime? @db.DateTime
  toTime5           DateTime? @db.DateTime
  WFUSER            WFUSER    @relation(fields: [idUser], references: [idUser], onUpdate: NoAction, map: "WORKINGTIMEUSERDATA_WFUSER_FK1")

  @@index([idUser], map: "WORKINGTIMEUSERDATA_FK_IDX_1")
}

model WORKITEM {
  idWorkItem                 BigInt            @id(map: "WORKITEM_PK")
  idCase                     Int
  idTask                     Int?
  idWorkItemState            Int
  wiEntryDate                DateTime          @default(now(), map: "WORKITEM_DF3") @db.DateTime
  wiDuration                 Int               @default(1, map: "WORKITEM_DF2")
  wiEstimatedSolutionDate    DateTime?         @db.DateTime
  idParentWorkItem           BigInt?
  wiSubProcMICurrCount       Int?
  wiSubProcMICountToWaitFor  Int?
  idDeferredByWorkItem       BigInt?
  wiExtDuration              Int               @default(0, map: "WORKITEM_DF4")
  wiExtEstimatedSolutionDate DateTime?         @db.DateTime
  wiClosed                   Int?              @default(0, map: "WORKITEM_DF1") @db.TinyInt
  wiSolutionDate             DateTime?         @db.DateTime
  idWorkItemScope            BigInt?
  wiMultiInstanceEnded       Boolean?
  wiParentMIId               BigInt?
  guidWorkitem               String?           @default(dbgenerated("newid()"), map: "WORKITEM_DF5") @db.UniqueIdentifier
  guidActivity               String?           @db.UniqueIdentifier
  guidAdhocTask              String?           @db.UniqueIdentifier
  wiPriority                 Int?              @db.TinyInt
  isShared                   Boolean           @default(false, map: "WORKITEM_ISSHARED_DF1")
  TransitionCounted          Boolean           @default(false, map: "DF__WORKITEM__Transi__6FF48C97")
  CURRENTASSIGNEE            CURRENTASSIGNEE[]
  TASK                       TASK?             @relation(fields: [idTask], references: [idTask], onDelete: NoAction, onUpdate: NoAction, map: "WORKITEM_TASK_FK1")
  WFCASE                     WFCASE            @relation(fields: [idCase], references: [idCase], onUpdate: NoAction, map: "WORKITEM_WFCASE_FK1")
  WORKITEMSTATE              WORKITEMSTATE     @relation(fields: [idWorkItemState], references: [idWorkItemState], onUpdate: NoAction, map: "WORKITEM_WORKITEMSTATE_FK1")

  @@index([idCase], map: "IX_WORKITEM")
  @@index([idTask, idCase], map: "IX_WORKITEM_1")
  @@index([wiClosed, idCase, idWorkItem, idTask], map: "WORKITEM_INCLUDE_IDX")
  @@index([idDeferredByWorkItem], map: "WORKITEM_IX1")
  @@index([wiParentMIId], map: "WORKITEM_IX3")
  @@index([wiClosed, idWorkItemState, idTask, idWorkItem, idCase], map: "WORKITEM_IX4")
}

model WORKITEMCL {
  idWorkItem                 BigInt    @id(map: "WORKITEMCL_PK")
  idCase                     Int
  idTask                     Int?
  idWorkItemState            Int
  wiEntryDate                DateTime  @db.DateTime
  wiDuration                 Int
  wiEstimatedSolutionDate    DateTime? @db.DateTime
  idParentWorkItem           BigInt?
  wiSolutionDate             DateTime  @db.DateTime
  wiSubProcMICurrCount       Int?
  wiSubProcMICountToWaitFor  Int?
  idDeferredByWorkItem       BigInt?
  wiExtDuration              Int       @default(0, map: "WORKITEMCL_DF2")
  wiExtEstimatedSolutionDate DateTime? @db.DateTime
  wiClosed                   Int?      @default(1, map: "WORKITEMCL_DF1") @db.TinyInt
  idWorkItemScope            BigInt?
  wiMultiInstanceEnded       Boolean?
  wiParentMIId               BigInt?
  guidWorkitem               String?   @default(dbgenerated("newid()"), map: "WORKITEMCL_DF3") @db.UniqueIdentifier
  guidActivity               String?   @db.UniqueIdentifier
  guidAdhocTask              String?   @db.UniqueIdentifier
  isShared                   Boolean   @default(false, map: "WORKITEMCL_ISSHARED_DF1")
  wiPriority                 Int?      @db.TinyInt
  TransitionCounted          Boolean?

  @@index([idCase], map: "IX_WICLIDCASE")
  @@index([idTask, idCase], map: "IX_WICLIDTASKIDCASE")
  @@index([idCase], map: "WICLIDCASE_IDX1")
}

model WORKITEMSTACK {
  idWIStack    Int      @id(map: "WORKITEMSTACK_PK") @default(autoincrement())
  idCase       Int
  idWorkItem   BigInt
  wisEntryDate DateTime @db.DateTime
  counter      Int

  @@index([idCase, counter], map: "IX_WISIDCASECOUNTER")
}

model WORKITEMSTATE {
  idWorkItemState Int        @id(map: "WORKITEMSTATE_PK")
  wiName          String     @db.NVarChar(26)
  WORKITEM        WORKITEM[]
}
